$wnd.gwtmaterialdemo.runAsyncCallback7("function $extractOptions(options){\n  var jsOptions, option, option$index, option$max;\n  jsOptions = [];\n  for (option$index = 0 , option$max = options.length; option$index < option$max; ++option$index) {\n    option = options[option$index];\n    $push_1(jsOptions, option.id_0);\n  }\n  return jsOptions;\n}\n\nfunction $getHeight(this$static){\n  var height;\n  height = ($clinit_DOM() , this$static.element).style['height'];\n  (height == null || !height.length) && (height = '550px');\n  return height;\n}\n\nfunction $setMiscOptions(this$static, miscOptions){\n  this$static.miscOptions = miscOptions;\n}\n\nfunction $setParaOptions(this$static, paraOptions){\n  this$static.paraOptions = paraOptions;\n}\n\nfunction $setStyleOptions(this$static, styleOptions){\n  this$static.styleOptions = styleOptions;\n}\n\nfunction $setUndoOptions(this$static, undoOptions){\n  this$static.undoOptions = undoOptions;\n}\n\ndefineClass(1370, 23, $intern_62);\n_.airMode = false;\nvar Lgwt_material_design_addins_client_richeditor_base_MaterialRichEditorBase_2_classLit = createForClass('gwt.material.design.addins.client.richeditor.base', 'MaterialRichEditorBase', 1370);\nfunction $clinit_MaterialRichEditor(){\n  $clinit_MaterialRichEditor = emptyMethod;\n  if (debug) {\n    injectJs(($clinit_MaterialRichEditorDebugClientBundle_default_InlineClientBundleGenerator$richEditorDebugJsInitializer() , richEditorDebugJs), false, true, true);\n    injectCss(($clinit_MaterialRichEditorDebugClientBundle_default_InlineClientBundleGenerator$richEditorDebugCssInitializer() , richEditorDebugCss));\n  }\n   else {\n    injectJs(($clinit_MaterialRichEditorClientBundle_default_InlineClientBundleGenerator$richEditorJsInitializer() , richEditorJs), true, false, true);\n    injectCss(($clinit_MaterialRichEditorClientBundle_default_InlineClientBundleGenerator$richEditorCssInitializer() , richEditorCss));\n  }\n}\n\nfunction $clear_4(this$static){\n  $clear_5(($clinit_DOM() , this$static.element));\n}\n\nfunction $clear_5(e){\n  $wnd.jQuery(document).ready(function(){\n    $wnd.jQuery(e).materialnote('reset');\n  }\n  );\n}\n\nfunction $initRichEditor(this$static){\n  $initRichEditor_0(($clinit_DOM() , this$static.element), this$static.airMode, this$static.placeholder, $getHeight(this$static), $extractOptions(this$static.styleOptions), $extractOptions(this$static.fontOptions), $extractOptions(this$static.colorOptions), $extractOptions(this$static.undoOptions), $extractOptions(this$static.ckMediaOptions), $extractOptions(this$static.miscOptions), $extractOptions(this$static.paraOptions), $extractOptions(this$static.heightOptions), this$static.html_0);\n}\n\nfunction $initRichEditor_0(e, airMode, placeholder, height, styleOptions, fontOptions, colorOptions, undoOptions, ckMediaOptions, miscOptions, paraOptions, heightOptions, html){\n  $wnd.jQuery(document).ready(function(){\n    var toolbar_0 = [['style', styleOptions], ['para', paraOptions], ['height', heightOptions], ['undo', undoOptions], ['fonts', fontOptions], ['color', colorOptions], ['ckMedia', ckMediaOptions], ['misc', miscOptions]];\n    $wnd.jQuery(e).materialnote({toolbar:toolbar_0, airMode:airMode, followingToolbar:false, placeholder:placeholder, height:height, minHeight:200, defaultBackColor:'#777', defaultTextColor:'#fff'});\n    $wnd.jQuery(e).materialnote('html', html);\n  }\n  );\n}\n\nfunction $insertText(e, text_0){\n  $wnd.jQuery(document).ready(function(){\n    $wnd.jQuery(e).materialnote('insertText', text_0);\n  }\n  );\n}\n\nfunction $insertText_0(this$static){\n  $insertText(($clinit_DOM() , this$static.element), 'Material Design');\n}\n\nfunction $setHTML(this$static, html){\n  this$static.html_0 = html;\n  this$static.attached?$initRichEditor_0(($clinit_DOM() , this$static.element), this$static.airMode, this$static.placeholder, $getHeight(this$static), $extractOptions(this$static.styleOptions), $extractOptions(this$static.fontOptions), $extractOptions(this$static.colorOptions), $extractOptions(this$static.undoOptions), $extractOptions(this$static.ckMediaOptions), $extractOptions(this$static.miscOptions), $extractOptions(this$static.paraOptions), $extractOptions(this$static.heightOptions), this$static.html_0):$addHandler_0(this$static, new MaterialRichEditor$1(this$static), (!TYPE_14 && (TYPE_14 = new GwtEvent$Type) , TYPE_14));\n}\n\nfunction MaterialRichEditor(){\n  $clinit_MaterialRichEditor();\n  MaterialWidget_0.call(this, $doc.createElement('div'));\n  this.placeholder = '';\n  this.styleOptions = initValues(getClassLiteralForArray(Lgwt_material_design_addins_client_richeditor_base_constants_ToolbarButton_2_classLit, 1), $intern_8, 68, 0, [($clinit_ToolbarButton() , STYLE), BOLD_0, ITALIC, UNDERLINE, STRIKETHROUGH, CLEAR, SUPERSCRIPT, SUBSCRIPT]);\n  this.fontOptions = initValues(getClassLiteralForArray(Lgwt_material_design_addins_client_richeditor_base_constants_ToolbarButton_2_classLit, 1), $intern_8, 68, 0, [FONT_SIZE, FONT_NAME]);\n  this.colorOptions = initValues(getClassLiteralForArray(Lgwt_material_design_addins_client_richeditor_base_constants_ToolbarButton_2_classLit, 1), $intern_8, 68, 0, [COLOR]);\n  this.undoOptions = initValues(getClassLiteralForArray(Lgwt_material_design_addins_client_richeditor_base_constants_ToolbarButton_2_classLit, 1), $intern_8, 68, 0, [UNDO, REDO, HELP_0]);\n  this.ckMediaOptions = initValues(getClassLiteralForArray(Lgwt_material_design_addins_client_richeditor_base_constants_ToolbarButton_2_classLit, 1), $intern_8, 68, 0, [CK_IMAGE_UPLOAD, CK_IMAGE_VIDEO]);\n  this.miscOptions = initValues(getClassLiteralForArray(Lgwt_material_design_addins_client_richeditor_base_constants_ToolbarButton_2_classLit, 1), $intern_8, 68, 0, [LINK_0, PICTURE, TABLE_1, HR, CODE_VIEW, FULLSCREEN]);\n  this.paraOptions = initValues(getClassLiteralForArray(Lgwt_material_design_addins_client_richeditor_base_constants_ToolbarButton_2_classLit, 1), $intern_8, 68, 0, [UL, OL, PARAGRAPH, LEFT_2, CENTER_3, RIGHT_3, JUSTIFY_1, OUTDENT, INDENT]);\n  this.heightOptions = initValues(getClassLiteralForArray(Lgwt_material_design_addins_client_richeditor_base_constants_ToolbarButton_2_classLit, 1), $intern_8, 68, 0, [LINE_HEIGHT]);\n  $setClassName(($clinit_DOM() , this.element), 'editor');\n  this.html_0 = '';\n}\n\ndefineClass(224, 1370, $intern_62, MaterialRichEditor);\n_.clear_0 = function clear_7(){\n  $clear_4(this);\n}\n;\n_.onLoad = function onLoad_14(){\n  $initRichEditor_0(($clinit_DOM() , this.element), this.airMode, this.placeholder, $getHeight(this), $extractOptions(this.styleOptions), $extractOptions(this.fontOptions), $extractOptions(this.colorOptions), $extractOptions(this.undoOptions), $extractOptions(this.ckMediaOptions), $extractOptions(this.miscOptions), $extractOptions(this.paraOptions), $extractOptions(this.heightOptions), this.html_0);\n}\n;\nvar Lgwt_material_design_addins_client_richeditor_MaterialRichEditor_2_classLit = createForClass('gwt.material.design.addins.client.richeditor', 'MaterialRichEditor', 224);\nfunction MaterialRichEditor$1(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1371, 1, $intern_57, MaterialRichEditor$1);\n_.onAttachOrDetach = function onAttachOrDetach_3(event_0){\n  event_0.attached && $initRichEditor(this.this$01);\n}\n;\nvar Lgwt_material_design_addins_client_richeditor_MaterialRichEditor$1_2_classLit = createForClass('gwt.material.design.addins.client.richeditor', 'MaterialRichEditor/1', 1371);\nvar richEditorCss, richEditorJs;\nfunction MaterialRichEditorClientBundle_default_InlineClientBundleGenerator$1(){\n}\n\ndefineClass(1727, 1, {}, MaterialRichEditorClientBundle_default_InlineClientBundleGenerator$1);\n_.getName = function getName_32(){\n  return 'richEditorCss';\n}\n;\n_.getText = function getText_23(){\n  var builder;\n  builder = new StringBuilder;\n  builder.string += '.editorDialogs .modal,.note-editor .modal{background-color:#FFF;color:#404040;z-index:1057!important;backface-visibility:hidden}.editorDialogs .modal .input-field input.datepicker,.editorDialogs .modal .input-field input:not([readonly]),.note-editor .modal .input-field input.datepicker,.note-editor .modal .input-field input:not([readonly]){border-color:#000!important}.editorDialogs .modal .input-field input.datepicker:focus,.editorDialogs .modal .input-field input:focus:not([readonly]),.editorDialogs .modal textarea.materialize-textarea:focus:not([readonly]),.note-editor .modal .input-field input.datepicker:focus,.note-editor .modal .input-field input:focus:not([readonly]),.note-editor .modal textarea.materialize-textarea:focus:not([readonly]){box-shadow:0 1px 0 0 grey!important;border-color:grey!important}.editorDialogs .modal .input-field .prefix,.editorDialogs .modal .input-field input.datepicker+label,.editorDialogs .modal .input-field input:not([readonly])+label,.editorDialogs .modal .note-editor+label,.editorDialogs .modal label,.note-editor .modal .input-field .prefix,.note-editor .modal .input-field input.datepicker+label,.note-editor .modal .input-field input:not([readonly])+label,.note-editor .modal .note-editor+label,.note-editor .modal label{color:#000!important}.editorDialogs .modal .input-field .prefix.active,.editorDialogs .modal .input-field input.datepicker:focus+label,.editorDialogs .modal .input-field input:focus:not([readonly])+label,.editorDialogs .modal textarea.materialize-textarea:focus:not([readonly])+label,.note-editor .modal .input-field .prefix.active,.note-editor .modal .input-field input.datepicker:focus+label,.note-editor .modal .input-field input:focus:not([readonly])+label,.note-editor .modal textarea.materialize-textarea:focus:not([readonly])+label{color:grey}.editorDialogs .modal .btn,.editorDialogs .modal .btn-large,.note-editor .modal .btn,.note-editor .modal .btn-large{background-color:#2196F3;color:#fff;cursor:pointer}.editorDialogs .modal .btn-large:hover,.editorDialogs .modal .btn:hover,.note-editor .modal .btn-large:hover,.note-editor .modal .btn:hover{background-color:#2196F3!important;color:#fff}.editorDialogs .modal .modal-footer,.note-editor .modal .modal-footer{background-color:#E9E9E9}.editorDialogs .modal .modal-footer .btnClose,.note-editor .modal .modal-footer .btnClose{margin-right:15px;background-color:transparent!important;color:grey}.editorDialogs .modal .modal-footer .btnClose:hover,.note-editor .modal .modal-footer .btnClose:hover{color:grey;background-color:transparent!important}.editorDialogs .modal .canvasContainerEmpty,.note-editor .modal .canvasContainerEmpty{border:5px solid #9c27b0}.note-editor{position:relative;border-left:3px solid #e9e9e9;border-bottom:3px solid #e9e9e9;border-right:3px solid #e9e9e9;background:#E9E9E9}.note-editor .img-circle{border-radius:50%}.note-editor .img-rounded{border-radius:5%}.note-editor .img-thumbnail{border:5px solid #e9e9e9;height:200px}.note-editor .img-bordered{border:5px solid #e9e9e9}.note-editor .btn-large:hover,.note-editor .btn:hover{background-color:#E9E9E9!important}.note-editor .active.btn-large,.note-editor .btn.active{background-color:#E0E0E0}.note-editor .note-editable ul li{list-style-type:square!important;display:list-item;list-style-position:inside}.note-editor .note-dialog>div,.note-editor .note-toolbar .btn.disabled,.note-editor .note-toolbar .disabled.btn-large,.note-editor .note-toolbar button.disabled{display:none}.note-editor .note-dialog .form-group{margin-right:0;margin-left:0}.note-editor .note-dialog .note-modal-form{margin:0}.note-editor .note-dialog .note-image-dialog .note-dropzone{min-height:100px;margin-bottom:10px;font-size:30px;line-height:4;color:#d3d3d3;text-align:center;border:4px dashed #d3d3d3}.note-editor .transparent{opacity:0}.note-editor .note-resizebar{background-color:#e9e9e9;width:100%;height:13px;cursor:ns-resize;padding-top:1px}.note-editor .note-resizebar .note-icon-bar{width:20px;margin:2px auto;border-top:2px solid #545454}.note-editor .note-toolbar{position:relative;color:#000;background-color:#e9e9e9;margin:0;z-index:995!important;padding:2%}.note-editor .note-toolbar ul{padding:0}.note-editor .note-toolbar .dropdown{cursor:pointer}.note-editor .note-toolbar .note-current-fontname{min-width:134px;display:inline-block;text-align:left}.note-editor .note-handle .note-control-selection{position:absolute;display:none;border:2px solid #e9e9e9}.note-editor .note-handle .note-control-selection .note-control-selection-bg{width:100%;height:100%;z-index:3;background-color:rgba(117,117,117,.3)}.note-editor .note-handle .note-control-selection>div{position:absolute}.note-editor .note-handle .note-control-selection .note-control-handle,.note-editor .note-handle .note-control-selection .note-control-holder{width:7px;height:7px;border:1px solid #000}.note-editor .note-handle .note-control-selection .note-control-sizing{width:15px;height:15px;background-color:#e9e9e9;z-index:5;cursor:se-resize}.note-editor .note-handle .note-control-selection .note-control-nw{top:-5px;left:-5px;border-right:0;border-bottom:0}.note-editor .note-handle .note-control-selection .note-control-ne{top:-5px;right:-5px;border-bottom:0;border-left:none}.note-editor .note-handle .note-control-selection .note-control-sw{bottom:-5px;left:-5px;border-top:0;border-right:0}.note-editor .note-handle .note-control-selection .note-control-se{right:-5px;bottom:-5px}.note-editor .note-handle .note-control-selection .note-control-selection-info{right:0;bottom:0;padding:5px;margin:17px;font-size:15px;color:#000;background-color:#e9e9e9;z-index:5}.note-dialog .note-help-dialog{color:#777}.note-dialog .note-help-dialog h4{color:#000}.note-dialog .note-help-dialog thead{background-color:#777;color:#fff}.note-dialog .note-help-dialog tbody{background-color:#e0e0e0}.note-editor .btn-group,.popover .btn-group{display:inline-block;margin-right:10px;position:relative}.note-editor .btn-group ul,.popover .btn-group ul{padding:0}.note-editor .btn-group .closeLeft,.popover .btn-group .closeLeft{padding-right:0!important;margin-right:0!important}.note-editor .btn-group .closeLeft i,.popover .btn-group .closeLeft i{margin-right:0!important}.note-editor .btn-group i.left,.popover .btn-group i.left{margin-right:5px}.note-editor .btn,.note-editor .btn-large,.popover .btn,.popover .btn-large{border-radius:0!important;box-shadow:none!important;padding:0 9px!important;color:#7F7A7A;background:#fff}.note-editor .btnSecond,.popover .btnSecond{background-color:#B71C1C!important}.note-editor .btnThird,.popover .btnThird{background-color:#4a148c!important}.note-editor button,.note-editor note-toolbar button,.popover button,.popover note-toolbar button{border:none;height:36px;text-transform:none}.note-editor [type=checkbox]:checked+label:before,.popover [type=checkbox]:checked+label:before{border-right-color:#9e9e9e!important;border-bottom-color:#9e9e9e!important}.note-editor .note-palette-title,.popover .note-palette-title{padding:0!important}.note-editor .colorName,.popover .colorName{display:inline-block;color:#000}@media only screen and (max-width:600px){.note-editor .colorName,.popover .colorName{display:none}}.note-editor .note-color-palette,.popover .note-color-palette{line-height:10px;border:3px solid #e9e9e9;padding:0!important;overflow-x:scroll;overflow-y:hidden}.note-editor .note-color-palette .note-color-row,.popover .note-color-palette .note-color-row{padding:0!important;min-width:300px}.note-editor .note-color-palette button.note-color-btn,.popover .note-color-palette button.note-color-btn{width:20px;height:20px;padding:0;margin:0}.note-editor .note-color-palette .note-color-btn:hover:after,.popover .note-color-palette .note-color-btn:hover:after{position:absolute;width:30px;height:30px;content:\"\";background-color:inherit;margin-top:-15px;margin-left:-15px}.note-editor .note-dimension-picker,.popover .note-dimension-picker{overflow:hidden}.note-editor .largeDropdown,.popover .largeDropdown{width:290px}.note-editor .dropdown-menu,.popover .dropdown-menu{z-index:1033}.note-editor .dropdown-menu.note-check,.popover .dropdown-menu.note-check{min-width:80px}.note-editor .dropdown-menu label,.popover .dropdown-menu label{color:#000!important}.note-editor ul.dropdown-menu,.popover ul.dropdown-menu{position:absolute;top:20px;background-color:#FFF;box-shadow:0 8px 17px 0 rgba(0,0,0,.2),0 6px 20px 0 rgba(0,0,0,.19)}.note-editor ul.dropdown-menu#colors,.popover ul.dropdown-menu#colors{width:342px}.note-editor ul.dropdown-menu#colors .indicator,.popover ul.dropdown-menu#colors .indicator{width:50%;left:0}.note-editor ul.dropdown-menu .colorTable,.popover ul.dropdown-menu .colorTable{padding:3px 0}.popover ul.dropdown-menu .tabs:hover{background-color:#e9e9e9}.note-editor ul.dropdown-menu .tabs .tab a,.note-editor ul.dropdown-menu .tabs .tab a:hover,.popover ul.dropdown-menu .tabs .tab a,.popover ul.dropdown-menu .tabs .tab a:hover{color:#7F7A7A}.note-editor ul.dropdown-menu .tabs .indicator,.popover ul.dropdown-menu .tabs .indicator{background-color:#868181}.note-editor ul.dropdown-menu li,.popover ul.dropdown-menu li{list-style-type:none;padding:0!important}.note-editor ul.dropdown-menu li div,.popover ul.dropdown-menu li div{padding:3px 15px;cursor:pointer}.note-popover .popover{position:absolute;max-width:none;color:#000}.note-popover .popover .arrow{width:0;height:0;border-style:solid;border-width:0 10px 10px;border-color:transparent transparent #e9e9e9}.note-popover .popover .popover-content{background-color:#e9e9e9}.note-popover .popover .popover-content>a{margin-left:12px}.note-popover .popover .popover-content a{display:inline-block;max-width:200px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;vertical-align:middle}.note-popover .popover .popover-content .arrow{left:20px}.note-popover .popover .popover-content .btn-group{display:inline-block}.note-popover .popover .popover-content .btn-group .btn,.note-popover .popover .popover-content .btn-group .btn-large{border-radius:0!important;box-shadow:none!important;padding:0 9px!important;background-color:#e9e9e9}.note-popover .popover .popover-content .note-para .dropdown-menu,.note-toolbar .note-para .dropdown-menu{min-width:172px;padding:5px}.note-popover .popover .popover-content .note-para .dropdown-menu>div:first-child,.note-toolbar .note-para .dropdown-menu>div:first-child{margin-right:5px}.note-editor .note-dropzone{position:absolute;z-index:100;display:none;color:#87cefa;background-color:#fff;border:2px dashed #87cefa;opacity:.95;pointer-event:none}.note-editor .note-dropzone .note-dropzone-message{display:table-cell;font-size:28px;font-weight:700;text-align:center;vertical-align:middle}.note-editor .note-dropzone.hover{color:#098ddf;border:2px dashed #098ddf}.note-editor.dragover .note-dropzone{display:table}.note-editor.fullscreen{position:fixed;top:0;left:0;z-index:2021;width:100%}.note-editor.fullscreen .note-editable{background-color:#fff}.note-editor.codeview .note-editable,.note-editor.fullscreen .note-resizebar{display:none}.note-editor.codeview .note-codable{display:block}.note-editor .note-statusbar{background-color:#f5f5f5}.note-editor .note-editable[contenteditable=true]:empty:not(:focus):before{color:#a9a9a9;content:attr(data-placeholder)}.note-editor .note-editable{padding:10px;overflow:auto;outline:0;background:#fff;margin:2%;box-shadow:0 8px 17px 0 rgba(0,0,0,.2),0 6px 20px 0 rgba(0,0,0,.19)}.note-editor .note-editable[contenteditable=false]{background-color:#e5e5e5}.note-editor .note-codable{display:none;width:100%;padding:10px;margin-bottom:0;font-family:Menlo,Monaco,monospace,sans-serif;font-size:14px;color:#ccc;background-color:#222;border:0;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0;box-shadow:none;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;-ms-box-sizing:border-box;box-sizing:border-box;resize:none}.note-air-editor{outline:0}.note-popover .popover .popover-content,.note-toolbar{padding:0;margin:0}.note-popover .popover .popover-content>.btn-group,.note-toolbar>.btn-group{background:#fff;margin:4px;box-shadow:0 2px 5px 0 rgba(0,0,0,.16),0 2px 10px 0 rgba(0,0,0,.12)}.note-popover .popover .popover-content .note-color .dropdown-menu .btn-group,.note-popover .popover .popover-content .note-style blockquote,.note-popover .popover .popover-content .note-style h1,.note-popover .popover .popover-content .note-style h2,.note-popover .popover .popover-content .note-style h3,.note-popover .popover .popover-content .note-style h4,.note-popover .popover .popover-content .note-style h5,.note-popover .popover .popover-content .note-style h6,.note-toolbar .note-color .dropdown-menu .btn-group,.note-toolbar .note-style blockquote,.note-toolbar .note-style h1,.note-toolbar .note-style h2,.note-toolbar .note-style h3,.note-toolbar .note-style h4,.note-toolbar .note-style h5,.note-toolbar .note-style h6{margin:0}.note-popover .popover .popover-content .btn-group .note-table,.note-toolbar .btn-group .note-table{min-width:0;padding:5px}.note-popover .popover .popover-content .btn-group .note-table .note-dimension-picker,.note-toolbar .btn-group .note-table .note-dimension-picker{font-size:18px}.note-popover .popover .popover-content .btn-group .note-table .note-dimension-picker .note-dimension-picker-mousecatcher,.note-toolbar .btn-group .note-table .note-dimension-picker .note-dimension-picker-mousecatcher{position:absolute!important;z-index:3;width:260px;height:260px;cursor:pointer}.note-popover .popover .popover-content .btn-group .note-table .note-dimension-picker .note-dimension-picker-unhighlighted,.note-toolbar .btn-group .note-table .note-dimension-picker .note-dimension-picker-unhighlighted{position:relative!important;z-index:1;width:312px;height:130px;background-size:26px 26px;background-image:repeating-linear-gradient(0deg,#FFF,#FFF 2px,transparent 2px,transparent 26px),repeating-linear-gradient(-90deg,transparent,transparent 2px,#E9E9E9 2px,#E9E9E9 26px)}.note-popover .popover .popover-content .btn-group .note-table .note-dimension-picker .note-dimension-picker-highlighted,.note-toolbar .btn-group .note-table .note-dimension-picker .note-dimension-picker-highlighted{position:absolute!important;z-index:2;width:26px;height:26px;background-size:26px 26px;background-image:repeating-linear-gradient(0deg,#fff,#fff 2px,transparent 2px,transparent 26px),repeating-linear-gradient(-90deg,transparent,transparent 2px,#9e9e9e 2px,#9e9e9e 26px)}.note-popover .popover .popover-content .note-color .dropdown-toggle,.note-toolbar .note-color .dropdown-toggle{width:20px;padding-left:5px}.note-popover .popover .popover-content .note-color .dropdown-menu .btn-group:first-child,.note-toolbar .note-color .dropdown-menu .btn-group:first-child{margin:0 5px}.note-popover .popover .popover-content .note-color .dropdown-menu .btn-group .note-palette-title,.note-toolbar .note-color .dropdown-menu .btn-group .note-palette-title{margin:2px 7px;font-size:12px;text-align:center;border-bottom:1px solid #eee}.note-popover .popover .popover-content .note-color .dropdown-menu .btn-group .note-color-reset,.note-toolbar .note-color .dropdown-menu .btn-group .note-color-reset{padding:0 3px;margin:3px;font-size:11px;cursor:pointer;-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px}.note-popover .popover .popover-content .note-color .dropdown-menu .btn-group .note-color-row,.note-toolbar .note-color .dropdown-menu .btn-group .note-color-row{height:20px}.note-popover .popover .popover-content .note-color .dropdown-menu .btn-group .note-color-reset:hover,.note-toolbar .note-color .dropdown-menu .btn-group .note-color-reset:hover{background:#eee}.note-popover .popover .popover-content .dropdown-menu.right,.note-toolbar .dropdown-menu.right{right:0;left:auto}.note-popover .popover .popover-content .dropdown-menu.right::before,.note-toolbar .dropdown-menu.right::before{right:9px;left:auto!important}.note-popover .popover .popover-content .dropdown-menu.right::after,.note-toolbar .dropdown-menu.right::after{right:10px;left:auto!important}.note-popover .popover .popover-content .dropdown-menu.note-check li a i,.note-toolbar .dropdown-menu.note-check li a i{color:#00bfff;visibility:hidden}.note-popover .popover .popover-content .dropdown-menu.note-check li a.checked i,.note-toolbar .dropdown-menu.note-check li a.chec';\n  builder.string += 'ked i{visibility:visible}.note-popover .popover .popover-content .note-fontsize-10,.note-toolbar .note-fontsize-10{font-size:10px}.codeview .note-color,.codeview .note-fonts,.codeview .note-height,.codeview .note-para,.codeview .note-style,.codeview .note-undo{display:none}.codeview .note-misc{background:#E0E0E0!important;padding-right:12px!important}';\n  return builder.string;\n}\n;\nvar Lgwt_material_design_addins_client_richeditor_MaterialRichEditorClientBundle_1default_1InlineClientBundleGenerator$1_2_classLit = createForClass('gwt.material.design.addins.client.richeditor', 'MaterialRichEditorClientBundle_default_InlineClientBundleGenerator/1', 1727);\nfunction MaterialRichEditorClientBundle_default_InlineClientBundleGenerator$2(){\n}\n\ndefineClass(1728, 1, {}, MaterialRichEditorClientBundle_default_InlineClientBundleGenerator$2);\n_.getName = function getName_33(){\n  return 'richEditorJs';\n}\n;\n_.getText = function getText_24(){\n  var builder;\n  builder = new StringBuilder;\n  builder.string += '!function(e){\"function\"==typeof define&&define.amd?define([\"jquery\"],e):e(window.jQuery)}(function(e){Array.prototype.reduce||(Array.prototype.reduce=function(e){var t,n=Object(this),i=n.length>>>0,o=0;if(2===arguments.length)t=arguments[1];else{for(;i>o&&!(o in n);)o++;if(o>=i)throw new TypeError(\"Reduce of empty array with no initial value\");t=n[o++]}for(;i>o;o++)o in n&&(t=e(t,n[o],o,n));return t}),\"function\"!=typeof Array.prototype.filter&&(Array.prototype.filter=function(e){for(var t=Object(this),n=t.length>>>0,i=[],o=arguments.length>=2?arguments[1]:void 0,r=0;n>r;r++)if(r in t){var a=t[r];e.call(o,a,r,t)&&i.push(a)}return i});var t,n=\"function\"==typeof define&&define.amd,i=function(t){if(\"Roboto\"===t)return!0;var n=\"Comic Sans MS\"===t?\"Courier New\":\"Comic Sans MS\",i=e(\"<div>\").css({position:\"absolute\",left:\"-9999px\",top:\"-9999px\",fontSize:\"200px\"}).text(\"mmmmmmmmmwwwwwww\").appendTo(document.body),o=i.css(\"fontFamily\",n).width(),r=i.css(\"fontFamily\",t+\",\"+n).width();return i.remove(),o!==r},o=navigator.userAgent,r={isMac:navigator.appVersion.indexOf(\"Mac\")>-1,isMSIE:/MSIE|Trident/i.test(o),isFF:/firefox/i.test(o),isWebkit:/webkit/i.test(o),isSafari:/safari/i.test(o),jqueryVersion:parseFloat(e.fn.jquery),isSupportAmd:n,hasCodeMirror:n?require.specified(\"CodeMirror\"):!!window.CodeMirror,isFontInstalled:i,isW3CRangeSupport:!!document.createRange},a=function(){var t=function(e){return function(t){return e===t}},n=function(e,t){return e===t},i=function(e){return function(t,n){return t[e]===n[e]}},o=function(){return!0},r=function(){return!1},a=function(e){return function(){return!e.apply(e,arguments)}},s=function(e,t){return function(n){return e(n)&&t(n)}},l=function(e){return e},d=0,c=function(e){var t=++d+\"\";return e?e+t:t},u=function(t){var n=e(document);return{top:t.top+n.scrollTop(),left:t.left+n.scrollLeft(),width:t.right-t.left,height:t.bottom-t.top}},f=function(e){var t={};for(var n in e)e.hasOwnProperty(n)&&(t[e[n]]=n);return t},h=function(e,t){return t=t||\"\",t+e.split(\".\").map(function(e){return e.substring(0,1).toUpperCase()+e.substring(1)}).join(\"\")};return{eq:t,eq2:n,peq2:i,ok:o,fail:r,self:l,not:a,and:s,uniqueId:c,rect2bnd:u,invertObject:f,namespaceToCamel:h}}(),s=function(){var t=function(e){return e[0]},n=function(e){return e[e.length-1]},i=function(e){return e.slice(0,e.length-1)},o=function(e){return e.slice(1)},r=function(e,t){for(var n=0,i=e.length;i>n;n++){var o=e[n];if(t(o))return o}},s=function(e,t){for(var n=0,i=e.length;i>n;n++)if(!t(e[n]))return!1;return!0},l=function(t,n){return-1!==e.inArray(n,t)},d=function(e,t){return t=t||a.self,e.reduce(function(e,n){return e+t(n)},0)},c=function(e){for(var t=[],n=-1,i=e.length;++n<i;)t[n]=e[n];return t},u=function(e,i){if(!e.length)return[];var r=o(e);return r.reduce(function(e,t){var o=n(e);return i(n(o),t)?o[o.length]=t:e[e.length]=[t],e},[[t(e)]])},f=function(e){for(var t=[],n=0,i=e.length;i>n;n++)e[n]&&t.push(e[n]);return t},h=function(e){for(var t=[],n=0,i=e.length;i>n;n++)l(t,e[n])||t.push(e[n]);return t},p=function(e,t){var n=e.indexOf(t);return-1===n?null:e[n+1]},v=function(e,t){var n=e.indexOf(t);return-1===n?null:e[n-1]};return{head:t,last:n,initial:i,tail:o,prev:v,next:p,find:r,contains:l,all:s,sum:d,from:c,clusterBy:u,compact:f,unique:h}}(),l=String.fromCharCode(160),d=\"\\\\ufeff\",c=function(){var t=function(t){return t&&e(t).hasClass(\"note-editable\")},n=function(t){return t&&e(t).hasClass(\"note-control-sizing\")},i=function(t){var n;if(t.hasClass(\"note-air-editor\")){var i=s.last(t.attr(\"id\").split(\"-\"));return n=function(t){return function(){return e(t+i)}},{editor:function(){return t},holder:function(){return t.data(\"holder\")},editable:function(){return t},popover:n(\"#note-popover-\"),handle:n(\"#note-handle-\"),dialog:n(\"#note-dialog-\")}}return n=function(e){return function(){return t.find(e)}},{editor:function(){return t},holder:function(){return t.data(\"holder\")},dropzone:n(\".note-dropzone\"),toolbar:n(\".note-toolbar\"),editable:n(\".note-editable\"),codable:n(\".note-codable\"),statusbar:n(\".note-statusbar\"),popover:n(\".note-popover\"),handle:n(\".note-handle\"),dialog:n(\".note-dialog\")}},o=function(t){var n=e(t).closest(\".note-editor, .note-air-editor, .note-air-layout\");if(!n.length)return null;var o;return o=n.is(\".note-editor, .note-air-editor\")?n:e(\"#note-editor-\"+s.last(n.attr(\"id\").split(\"-\"))),i(o)},u=function(e){return e=e.toUpperCase(),function(t){return t&&t.nodeName.toUpperCase()===e}},f=function(e){return e&&3===e.nodeType},h=function(e){return e&&/^BR|^IMG|^HR/.test(e.nodeName.toUpperCase())},p=function(e){return t(e)?!1:e&&/^DIV|^P|^LI|^H[1-7]/.test(e.nodeName.toUpperCase())},v=u(\"LI\"),g=function(e){return p(e)&&!v(e)},m=u(\"TABLE\"),b=function(e){return!(x(e)||k(e)||p(e)||m(e)||C(e))},k=function(e){return e&&/^UL|^OL/.test(e.nodeName.toUpperCase())},y=function(e){return e&&/^TD|^TH/.test(e.nodeName.toUpperCase())},C=u(\"BLOCKQUOTE\"),x=function(e){return y(e)||C(e)||t(e)},w=u(\"A\"),T=function(e){return b(e)&&!!H(e,p)},N=function(e){return b(e)&&!H(e,p)},P=u(\"BODY\"),L=function(e,t){return e.nextSibling===t||e.previousSibling===t},S=function(e,t){t=t||a.ok;var n=[];return e.previousSibling&&t(e.previousSibling)&&n.push(e.previousSibling),n.push(e),e.nextSibling&&t(e.nextSibling)&&n.push(e.nextSibling),n},I=r.isMSIE?\"&nbsp;\":\"<br>\",M=function(e){return f(e)?e.nodeValue.length:e.childNodes.length},R=function(e){var t=M(e);return 0===t?!0:f(e)||1!==t||e.innerHTML!==I?s.all(e.childNodes,f)&&\"\"===e.innerHTML?!0:!1:!0},E=function(e){h(e)||M(e)||(e.innerHTML=I)},H=function(e,n){for(;e;){if(n(e))return e;if(t(e))break;e=e.parentNode}return null},A=function(e,n){for(e=e.parentNode;e&&1===M(e);){if(n(e))return e;if(t(e))break;e=e.parentNode}return null},D=function(e,n){n=n||a.fail;var i=[];return H(e,function(e){return t(e)||i.push(e),n(e)}),i},F=function(e,t){var n=D(e);return s.last(n.filter(t))},B=function(t,n){for(var i=D(t),o=n;o;o=o.parentNode)if(e.inArray(o,i)>-1)return o;return null},U=function(e,t){t=t||a.fail;for(var n=[];e&&!t(e);)n.push(e),e=e.previousSibling;return n},z=function(e,t){t=t||a.fail;for(var n=[];e&&!t(e);)n.push(e),e=e.nextSibling;return n},O=function(e,t){var n=[];return t=t||a.ok,function i(o){e!==o&&t(o)&&n.push(o);for(var r=0,a=o.childNodes.length;a>r;r++)i(o.childNodes[r])}(e),n},j=function(t,n){var i=t.parentNode,o=e(\"<\"+n+\">\")[0];return i.insertBefore(o,t),o.appendChild(t),o},_=function(e,t){var n=t.nextSibling,i=t.parentNode;return n?i.insertBefore(e,n):i.appendChild(e),e},q=function(t,n){return e.each(n,function(e,n){t.appendChild(n)}),t},W=function(e){return 0===e.offset},K=function(e){return e.offset===M(e.node)},V=function(e){return W(e)||K(e)},Q=function(e,t){for(;e&&e!==t;){if(0!==J(e))return!1;e=e.parentNode}return!0},Z=function(e,t){for(;e&&e!==t;){if(J(e)!==M(e.parentNode)-1)return!1;e=e.parentNode}return!0},J=function(e){for(var t=0;e=e.previousSibling;)t+=1;return t},Y=function(e){return!!(e&&e.childNodes&&e.childNodes.length)},G=function(e,n){var i,o;if(0===e.offset){if(t(e.node))return null;i=e.node.parentNode,o=J(e.node)}else Y(e.node)?(i=e.node.childNodes[e.offset-1],o=M(i)):(i=e.node,o=n?0:e.offset-1);return{node:i,offset:o}},X=function(e,n){var i,o;if(M(e.node)===e.offset){if(t(e.node))return null;i=e.node.parentNode,o=J(e.node)+1}else Y(e.node)?(i=e.node.childNodes[e.offset],o=0):(i=e.node,o=n?M(e.node):e.offset+1);return{node:i,offset:o}},$=function(e,t){return e.node===t.node&&e.offset===t.offset},ee=function(e){if(f(e.node)||!Y(e.node)||R(e.node))return!0;var t=e.node.childNodes[e.offset-1],n=e.node.childNodes[e.offset];return t&&!h(t)||n&&!h(n)?!1:!0},te=function(e,t){for(;e;){if(t(e))return e;e=G(e)}return null},ne=function(e,t){for(;e;){if(t(e))return e;e=X(e)}return null},ie=function(e){if(!f(e.node))return!1;var t=e.node.nodeValue.charAt(e.offset-1);return t&&\" \"!==t&&t!==l},oe=function(e,t,n,i){for(var o=e;o&&(n(o),!$(o,t));){var r=i&&e.node!==o.node&&t.node!==o.node;o=X(o,r)}},re=function(t,n){var i=D(n,a.eq(t));return e.map(i,J).reverse()},ae=function(e,t){for(var n=e,i=0,o=t.length;o>i;i++)n=n.childNodes.length<=t[i]?n.childNodes[n.childNodes.length-1]:n.childNodes[t[i]];return n},se=function(e,t){var n=t&&t.isSkipPaddingBlankHTML,i=t&&t.isNotSplitEdgePoint;if(V(e)&&(f(e.node)||i)){if(W(e))return e.node;if(K(e))return e.node.nextSibling}if(f(e.node))return e.node.splitText(e.offset);var o=e.node.childNodes[e.offset],r=_(e.node.cloneNode(!1),e.node);return q(r,z(o)),n||(E(e.node),E(r)),r},le=function(e,t,n){var i=D(t.node,a.eq(e));return i.length?1===i.length?se(t,n):i.reduce(function(e,i){return e===t.node&&(e=se(t,n)),se({node:i,offset:e?c.position(e):M(i)},n)}):null},de=function(e,t){var n,i,o=t?p:x,r=D(e.node,o),a=s.last(r)||e.node;o(a)?(n=r[r.length-2],i=a):(n=a,i=n.parentNode);var l=n&&le(n,e,{isSkipPaddingBlankHTML:t,isNotSplitEdgePoint:t});return l||i!==e.node||(l=e.node.childNodes[e.offset]),{rightNode:l,container:i}},ce=function(e){return document.createElement(e)},ue=function(e){return document.createTextNode(e)},fe=function(e,t){if(e&&e.parentNode){if(e.removeNode)return e.removeNode(t);var n=e.parentNode;if(!t){var i,o,r=[];for(i=0,o=e.childNodes.length;o>i;i++)r.push(e.childNodes[i]);for(i=0,o=r.length;o>i;i++)n.insertBefore(r[i],e)}n.removeChild(e)}},he=function(e,n){for(;e&&!t(e)&&n(e);){var i=e.parentNode;fe(e),e=i}},pe=function(e,t){if(e.nodeName.toUpperCase()===t.toUpperCase())return e;var n=ce(t);return e.style.cssText&&(n.style.cssText=e.style.cssText),q(n,s.from(e.childNodes)),_(n,e),fe(e),n},ve=u(\"TEXTAREA\"),ge=function(e,t){var n=ve(e[0])?e.val():e.html();return t?n.replace(/[\\\\n\\\\r]/g,\"\"):n},me=function(t,n){var i=ge(t);if(n){var o=/<(\\\\/?)(\\\\b(?!!)[^>\\\\s]*)(.*?)(\\\\s*\\\\/?>)/g;i=i.replace(o,function(e,t,n){n=n.toUpperCase();var i=/^DIV|^TD|^TH|^P|^LI|^H[1-7]/.test(n)&&!!t,o=/^BLOCKQUOTE|^TABLE|^TBODY|^TR|^HR|^UL|^OL/.test(n);return e+(i||o?\"\\\\n\":\"\")}),i=e.trim(i)}return i};return{NBSP_CHAR:l,ZERO_WIDTH_NBSP_CHAR:d,blank:I,emptyPara:\"<p>\"+I+\"<\\/p>\",makePredByNodeName:u,isEditable:t,isControlSizing:n,buildLayoutInfo:i,makeLayoutInfo:o,isText:f,isVoid:h,isPara:p,isPurePara:g,isInline:b,isBlock:a.not(b),isBodyInline:N,isBody:P,isParaInline:T,isList:k,isTable:m,isCell:y,isBlockquote:C,isBodyContainer:x,isAnchor:w,isDiv:u(\"DIV\"),isLi:v,isBR:u(\"BR\"),isSpan:u(\"SPAN\"),isB:u(\"B\"),isU:u(\"U\"),isS:u(\"S\"),isI:u(\"I\"),isImg:u(\"IMG\"),isTextarea:ve,isEmpty:R,isEmptyAnchor:a.and(w,R),isClosestSibling:L,withClosestSiblings:S,nodeLength:M,isLeftEdgePoint:W,isRightEdgePoint:K,isEdgePoint:V,isLeftEdgeOf:Q,isRightEdgeOf:Z,prevPoint:G,nextPoint:X,isSamePoint:$,isVisiblePoint:ee,prevPointUntil:te,nextPointUntil:ne,isCharPoint:ie,walkPoint:oe,ancestor:H,singleChildAncestor:A,listAncestor:D,lastAncestor:F,listNext:z,listPrev:U,listDescendant:O,commonAncestor:B,wrap:j,insertAfter:_,appendChildNodes:q,position:J,hasChildren:Y,makeOffsetPath:re,fromOffsetPath:ae,splitTree:le,splitPoint:de,create:ce,createText:ue,remove:fe,removeWhile:he,replace:pe,html:me,value:ge}}(),u=function(){var t=function(e,t){var n,i,o=e.parentElement(),r=document.body.createTextRange(),a=s.from(o.childNodes);for(n=0;n<a.length;n++)if(!c.isText(a[n])){if(r.moveToElementText(a[n]),r.compareEndPoints(\"StartToStart\",e)>=0)break;i=a[n]}if(0!==n&&c.isText(a[n-1])){var l=document.body.createTextRange(),d=null;l.moveToElementText(i||o),l.collapse(!i),d=i?i.nextSibling:o.firstChild;var u=e.duplicate();u.setEndPoint(\"StartToStart\",l);for(var f=u.text.replace(/[\\\\r\\\\n]/g,\"\").length;f>d.nodeValue.length&&d.nextSibling;)f-=d.nodeValue.length,d=d.nextSibling;d.nodeValue;t&&d.nextSibling&&c.isText(d.nextSibling)&&f===d.nodeValue.length&&(f-=d.nodeValue.length,d=d.nextSibling),o=d,n=f}return{cont:o,offset:n}},n=function(e){var t=function(e,n){var i,o;if(c.isText(e)){var r=c.listPrev(e,a.not(c.isText)),l=s.last(r).previousSibling;i=l||e.parentNode,n+=s.sum(s.tail(r),c.nodeLength),o=!l}else{if(i=e.childNodes[n]||e,c.isText(i))return t(i,0);n=0,o=!1}return{node:i,collapseToStart:o,offset:n}},n=document.body.createTextRange(),i=t(e.node,e.offset);return n.moveToElementText(i.node),n.collapse(i.collapseToStart),n.moveStart(\"character\",i.offset),n},i=function(t,o,l,d){this.sc=t,this.so=o,this.ec=l,this.eo=d;var u=function(){if(r.isW3CRangeSupport){var e=document.createRange();return e.setStart(t,o),e.setEnd(l,d),e}var i=n({node:t,offset:o});return i.setEndPoint(\"EndToEnd\",n({node:l,offset:d})),i};this.getPoints=function(){return{sc:t,so:o,ec:l,eo:d}},this.getStartPoint=function(){return{node:t,offset:o}},this.getEndPoint=function(){return{node:l,offset:d}},this.select=function(){var e=u();if(r.isW3CRangeSupport){var t=document.getSelection();t.rangeCount>0&&t.removeAllRanges(),t.addRange(e)}else e.select();return this},this.normalize=function(){var e=function(e){return c.isVisiblePoint(e)||(e=c.isLeftEdgePoint(e)?c.nextPointUntil(e,c.isVisiblePoint):c.prevPointUntil(e,c.isVisiblePoint)),e},t=e(this.getStartPoint()),n=e(this.getEndPoint());return new i(t.node,t.offset,n.node,n.offset)},this.nodes=function(e,t){e=e||a.ok;var n=t&&t.includeAncestor,i=t&&t.fullyContains,o=this.getStartPoint(),r=this.getEndPoint(),l=[],d=[];return c.walkPoint(o,r,function(t){if(!c.isEditable(t.node)){var o;i?(c.isLeftEdgePoint(t)&&d.push(t.node),c.isRightEdgePoint(t)&&s.contains(d,t.node)&&(o=t.node)):o=n?c.ancestor(t.node,e):t.node,o&&e(o)&&l.push(o)}},!0),s.unique(l)},this.commonAncestor=function(){return c.commonAncestor(t,l)},this.expand=function(e){var n=c.ancestor(t,e),r=c.ancestor(l,e);if(!n&&!r)return new i(t,o,l,d);var a=this.getPoints();return n&&(a.sc=n,a.so=0),r&&(a.ec=r,a.eo=c.nodeLength(r)),new i(a.sc,a.so,a.ec,a.eo)},this.collapse=function(e){return e?new i(t,o,t,o):new i(l,d,l,d)},this.splitText=function(){var e=t===l,n=this.getPoints();return c.isText(l)&&!c.isEdgePoint(this.getEndPoint())&&l.splitText(d),c.isText(t)&&!c.isEdgePoint(this.getStartPoint())&&(n.sc=t.splitText(o),n.so=0,e&&(n.ec=n.sc,n.eo=d-o)),new i(n.sc,n.so,n.ec,n.eo)},this.deleteContents=function(){if(this.isCollapsed())return this;var t=this.splitText(),n=t.nodes(null,{fullyContains:!0}),o=c.prevPointUntil(t.getStartPoint(),function(e){return!s.contains(n,e.node)}),r=[];return e.each(n,function(e,t){var n=t.parentNode;o.node!==n&&1===c.nodeLength(n)&&r.push(n),c.remove(t,!1)}),e.each(r,function(e,t){c.remove(t,!1)}),new i(o.node,o.offset,o.node,o.offset).normalize()};var f=function(e){return function(){var n=c.ancestor(t,e);return!!n&&n===c.ancestor(l,e)}};this.isOnEditable=f(c.isEditable),this.isOnList=f(c.isList),this.isOnAnchor=f(c.isAnchor),this.isOnCell=f(c.isCell),this.isLeftEdgeOf=function(e){if(!c.isLeftEdgePoint(this.getStartPoint()))return!1;var t=c.ancestor(this.sc,e);return t&&c.isLeftEdgeOf(this.sc,t)},this.isCollapsed=function(){return t===l&&o===d},this.wrapBodyInlineWithPara=function(){if(c.isBodyContainer(t)&&c.isEmpty(t))return t.innerHTML=c.emptyPara,new i(t.firstChild,0,t.firstChild,0);if(c.isParaInline(t)||c.isPara(t))return this.normalize();var e;if(c.isInline(t)){var n=c.listAncestor(t,a.not(c.isInline));e=s.last(n),c.isInline(e)||(e=n[n.length-2]||t.childNodes[o])}else e=t.childNodes[o>0?o-1:0];var r=c.listPrev(e,c.isParaInline).reverse();if(r=r.concat(c.listNext(e.nextSibling,c.isParaInline)),r.length){var l=c.wrap(s.head(r),\"p\");c.appendChildNodes(l,s.tail(r))}return this.normalize()},this.insertNode=function(e){var t=this.wrapBodyInlineWithPara().deleteContents(),n=c.splitPoint(t.getStartPoint(),c.isInline(e));return n.rightNode?n.rightNode.parentNode.insertBefore(e,n.rightNode):n.container.appendChild(e),e},this.pasteHTML=function(t){var n=this,i=e(\"<div><\\/div>\").html(t)[0],o=s.from(i.childNodes);return this.wrapBodyInlineWithPara().deleteContents(),e.map(o.reverse(),function(e){return n.insertNode(e)}).reverse()},this.toString=function(){var e=u();return r.isW3CRangeSupport?e.toString():e.text},this.getWordRange=function(e){var t=this.getEndPoint();if(!c.isCharPoint(t))return this;var n=c.prevPointUntil(t,function(e){return!c.isCharPoint(e)});return e&&(t=c.nextPointUntil(t,function(e){return!c.isCharPoint(e)})),new i(n.node,n.offset,t.node,t.offset)},this.bookmark=function(e){return{s:{path:c.makeOffsetPath(e,t),offset:o},e:{path:c.makeOffsetPath(e,l),offset:d}}},this.paraBookmark=function(e){return{s:{path:s.tail(c.makeOffsetPath(s.head(e),t)),offset:o},e:{path:s.tail(c.makeOffsetPath(s.last(e),l)),offset:d}';\n  builder.string += '}},this.getClientRects=function(){var e=u();return e.getClientRects()}};return{create:function(e,n,o,a){if(arguments.length)2===arguments.length&&(o=e,a=n);else if(r.isW3CRangeSupport){var s=document.getSelection();if(!s||0===s.rangeCount)return null;if(c.isBody(s.anchorNode))return null;var l=s.getRangeAt(0);e=l.startContainer,n=l.startOffset,o=l.endContainer,a=l.endOffset}else{var d=document.selection.createRange(),u=d.duplicate();u.collapse(!1);var f=d;f.collapse(!0);var h=t(f,!0),p=t(u,!1);c.isText(h.node)&&c.isLeftEdgePoint(h)&&c.isTextNode(p.node)&&c.isRightEdgePoint(p)&&p.node.nextSibling===h.node&&(h=p),e=h.cont,n=h.offset,o=p.cont,a=p.offset}return new i(e,n,o,a)},createFromNode:function(e){var t=e,n=0,i=e,o=c.nodeLength(i);return c.isVoid(t)&&(n=c.listPrev(t).length-1,t=t.parentNode),c.isBR(i)?(o=c.listPrev(i).length-1,i=i.parentNode):c.isVoid(i)&&(o=c.listPrev(i).length,i=i.parentNode),this.create(t,n,i,o)},createFromNodeBefore:function(e){return this.createFromNode(e).collapse(!0)},createFromNodeAfter:function(e){return this.createFromNode(e).collapse()},createFromBookmark:function(e,t){var n=c.fromOffsetPath(e,t.s.path),o=t.s.offset,r=c.fromOffsetPath(e,t.e.path),a=t.e.offset;return new i(n,o,r,a)},createFromParaBookmark:function(e,t){var n=e.s.offset,o=e.e.offset,r=c.fromOffsetPath(s.head(t),e.s.path),a=c.fromOffsetPath(s.last(t),e.e.path);return new i(r,n,a,o)}}}(),f={version:\"0.6.9\",options:{defaultTextColor:\"#212121\",defaultBackColor:\"#ddd\",followingToolbar:!0,otherStaticBarClass:\"staticTop\",width:null,height:null,minHeight:null,maxHeight:null,focus:!1,tabsize:4,styleWithSpan:!0,disableLinkTarget:!1,disableDragAndDrop:!1,disableResizeEditor:!1,shortcuts:!0,placeholder:!1,prettifyHtml:!0,iconPrefix:\"\",icons:{font:{bold:\"format_bold\",italic:\"format_italic\",underline:\"format_underlined\",clear:\"clear\",height:\"format_size\",strikethrough:\"strikethrough_s\",superscript:\"vertical_align_top\",subscript:\"vertical_align_bottom\"},image:{image:\"image\",floatLeft:\"format_align_left\",floatRight:\"format_align_right\",floatNone:\"format_align_justify\",shapeRounded:\"crop_3_2\",shapeCircle:\"panorama_fish_eye\",shapeThumbnail:\"collections\",bordered:\"border_outer\",shapeNone:\"image\",remove:\"delete\"},link:{link:\"insert_link\",unlink:\"clear\",edit:\"create\"},table:{table:\"border_all\"},hr:{insert:\"add\"},style:{style:\"border_color\"},lists:{unordered:\"format_list_bulleted\",ordered:\"format_list_numbered\"},options:{help:\"help\",fullscreen:\"settings_overscan\",codeview:\"code\"},paragraph:{paragraph:\"format_textdirection_l_to_r\",outdent:\"format_indent_decrease\",indent:\"format_indent_increase\",left:\"format_align_left\",center:\"format_align_center\",right:\"format_align_right\",justify:\"format_align_justify\"},color:{recent:\"format_color_text\"},history:{undo:\"undo\",redo:\"redo\"},misc:{check:\"check\"}},codemirror:{mode:\"text/html\",htmlMode:!0,indentWithTabs:!0,tabSize:4,lineNumbers:!0,theme:\"monokai\",maxHighlightLength:\"Infinity\"},lang:\"en-US\",direction:null,toolbar:[[\"style\",[\"style\"]],[\"font\",[\"bold\",\"italic\",\"underline\",\"clear\"]],[\"fontname\",[\"fontname\"]],[\"fontsize\",[\"fontsize\"]],[\"color\",[\"color\"]],[\"para\",[\"ul\",\"ol\",\"paragraph\"]],[\"height\",[\"height\"]],[\"table\",[\"table\"]],[\"insert\",[\"link\",\"picture\",\"hr\"]],[\"view\",[\"fullscreen\",\"codeview\"]],[\"help\",[\"help\"]]],plugin:{},airMode:!1,airPopover:[[\"color\",[\"color\"]],[\"font\",[\"bold\",\"underline\",\"clear\"]],[\"para\",[\"ul\",\"paragraph\"]],[\"table\",[\"table\"]],[\"insert\",[\"link\",\"picture\"]]],styleTags:[\"p\",\"blockquote\",\"pre\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\"],defaultFontName:\"Roboto\",fontNames:[\"Roboto\",\"Arial\",\"Arial Black\",\"Comic Sans MS\",\"Courier New\",\"Helvetica Neue\",\"Helvetica\",\"Impact\",\"Times New Roman\",\"Verdana\"],fontNamesIgnoreCheck:[],fontSizes:[\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"25\",\"37\"],colors:[[\"#fafafa\",\"#efebe9\",\"#7e57c2\",\"#ab47bc\",\"#5c6bc0\",\"#42a5f5\",\"#26c6da\",\"#66bb6a\",\"#9ccc65\",\"#ffee58\",\"#ffca28\",\"#ffa726\",\"#ff7043\",\"#ef5350\",\"#ec407a\"],[\"#f5f5f5\",\"#d7ccc8\",\"#673ab7\",\"#9c27b0\",\"#3f51b5\",\"#2196f3\",\"#00bcd4\",\"#4caf50\",\"#8bc34a\",\"#ffeb3b\",\"#ffc107\",\"#ff9800\",\"#ff5722\",\"#f44336\",\"#e91e63\"],[\"#eeeeee\",\"#bcaaa4\",\"#5e35b1\",\"#8e24aa\",\"#3949ab\",\"#1e88e5\",\"#00acc1\",\"#43a047\",\"#7cb342\",\"#fdd835\",\"#ffb300\",\"#fb8c00\",\"#f4511e\",\"#e53935\",\"#d81b60\"],[\"#e0e0e0\",\"#a1887f\",\"#512da8\",\"#7b1fa2\",\"#303f9f\",\"#1976d2\",\"#0097a7\",\"#388e3c\",\"#689f38\",\"#fbc02d\",\"#ffa000\",\"#f57c00\",\"#e64a19\",\"#d32f2f\",\"#c2185b\"],[\"#bdbdbd\",\"#8d6e63\",\"#4527a0\",\"#6a1b9a\",\"#283593\",\"#1565c0\",\"#00838f\",\"#2e7d32\",\"#558b2f\",\"#f9a825\",\"#ff8f00\",\"#ef6c00\",\"#d84315\",\"#c62828\",\"#ad1457\"],[\"#9e9e9e\",\"#795548\",\"#311b92\",\"#4a148c\",\"#1a237e\",\"#0d47a1\",\"#006064\",\"#1b5e20\",\"#33691e\",\"#f57f17\",\"#ff6f00\",\"#e65100\",\"#bf360c\",\"#b71c1c\",\"#880e4f\"],[\"#757575\",\"#6d4c41\",\"#b388ff\",\"#ea80fc\",\"#8c9eff\",\"#82b1ff\",\"#84ffff\",\"#b9f6ca\",\"#ccff90\",\"#ffff8d\",\"#ffe57f\",\"#ffd180\",\"#ff9e80\",\"#ff8a80\",\"#ff80ab\"],[\"#616161\",\"#5d4037\",\"#7c4dff\",\"#e040fb\",\"#536dfe\",\"#448aff\",\"#18ffff\",\"#69f0ae\",\"#b2ff59\",\"#ffff00\",\"#ffd740\",\"#ffab40\",\"#ff6e40\",\"#ff5252\",\"#ff4081\"],[\"#424242\",\"#4e342e\",\"#651fff\",\"#d500f9\",\"#3d5afe\",\"#2979ff\",\"#00e5ff\",\"#00e676\",\"#76ff03\",\"#ffea00\",\"#ffc400\",\"#ff9100\",\"#ff3d00\",\"#ff1744\",\"#f50057\"],[\"#212121\",\"#3e2723\",\"#6200ea\",\"#aa00ff\",\"#304ffe\",\"#2962ff\",\"#00b8d4\",\"#00c853\",\"#64dd17\",\"#ffd600\",\"#ffab00\",\"#ff6d00\",\"#dd2c00\",\"#d50000\",\"#c51162\"]],colorTitles:[[\"grey lighten5\",\"brown lighten5\",\"deep-purple lighten1\",\"purple lighten1\",\"indigo lighten1\",\"blue lighten1\",\"cyan lighten1\",\"green lighten1\",\"light-green lighten1\",\"yellow lighten1\",\"amber lighten1\",\"orange lighten1\",\"deep-orange lighten1\",\"red lighten1\",\"pink lighten1\"],[\"grey lighten4\",\"brown lighten4\",\"deep-purple\",\"purple\",\"indigo\",\"blue\",\"cyan\",\"green\",\"light-green\",\"yellow\",\"amber\",\"orange\",\"deep-orange\",\"red\",\"pink\"],[\"grey lighten3\",\"brown lighten3\",\"deep-purple darken1\",\"purple darken1\",\"indigo darken1\",\"blue darken1\",\"cyan darken1\",\"green darken1\",\"light-green darken1\",\"yellow darken1\",\"amber darken1\",\"orange darken1\",\"deep-orange darken1\",\"red darken1\",\"pink darken1\"],[\"grey lighten2\",\"brown lighten2\",\"deep-purple darken2\",\"purple darken2\",\"indigo darken2\",\"blue darken2\",\"cyan darken2\",\"green darken2\",\"light-green darken2\",\"yellow darken2\",\"amber darken2\",\"orange darken2\",\"deep-orange darken2\",\"red darken2\",\"pink darken2\"],[\"grey lighten1\",\"brown lighten1\",\"deep-purple darken3\",\"purple darken3\",\"indigo darken3\",\"blue darken3\",\"cyan darken3\",\"green darken3\",\"light-green darken3\",\"yellow darken3\",\"amber darken3\",\"orange darken3\",\"deep-orange darken3\",\"red darken3\",\"pink darken3\"],[\"grey\",\"brown\",\"deep-purple darken4\",\"purple darken4\",\"indigo darken4\",\"blue darken4\",\"cyan darken4\",\"green darken4\",\"light-green darken4\",\"yellow darken4\",\"amber darken4\",\"orange darken4\",\"deep-orange darken4\",\"red darken4\",\"pink darken4\"],[\"grey darken1\",\"brown darken1\",\"deep-purple accent1\",\"purple accent1\",\"indigo accent1\",\"blue accent1\",\"cyan accent1\",\"green accent1\",\"light-green accent1\",\"yellow accent1\",\"amber accent1\",\"orange accent1\",\"deep-orange accent1\",\"red accent1\",\"pink accent1\"],[\"grey darken2\",\"brown darken2\",\"deep-purple accent2\",\"purple accent2\",\"indigo accent2\",\"blue accent2\",\"cyan accent2\",\"green accent2\",\"light-green accent2\",\"yellow accent2\",\"amber accent2\",\"orange accent2\",\"deep-orange accent2\",\"red accent2\",\"pink accent2\"],[\"grey darken3\",\"brown darken3\",\"deep-purple accent3\",\"purple accent3\",\"indigo accent3\",\"blue accent3\",\"cyan accent3\",\"green accent3\",\"light-green accent3\",\"yellow accent3\",\"amber accent3\",\"orange accent3\",\"deep-orange accent3\",\"red accent3\",\"pink accent3\"],[\"grey darken4\",\"brown darken4\",\"deep-purple accent4\",\"purple accent4\",\"indigo accent4\",\"blue accent4\",\"cyan accent4\",\"green accent4\",\"light-green accent4\",\"yellow accent4\",\"amber accent4\",\"orange accent4\",\"deep-orange accent4\",\"red accent4\",\"pink accent4\"]],lineHeights:[\"1.0\",\"1.2\",\"1.4\",\"1.5\",\"1.6\",\"1.8\",\"2.0\",\"3.0\"],insertTableMaxSize:{col:12,row:10},maximumImageFileSize:null,oninit:null,onfocus:null,onblur:null,onenter:null,onkeyup:null,onkeydown:null,onImageUpload:null,onImageUploadError:null,onMediaDelete:null,onToolbarClick:null,onsubmit:null,onCreateLink:function(e){return-1!==e.indexOf(\"@\")&&-1===e.indexOf(\":\")&&(e=\"mailto:\"+e),e},keyMap:{pc:{ENTER:\"insertParagraph\",\"CTRL+Z\":\"undo\",\"CTRL+Y\":\"redo\",TAB:\"tab\",\"SHIFT+TAB\":\"untab\",\"CTRL+B\":\"bold\",\"CTRL+I\":\"italic\",\"CTRL+U\":\"underline\",\"CTRL+SHIFT+S\":\"strikethrough\",\"CTRL+BACKSLASH\":\"removeFormat\",\"CTRL+SHIFT+L\":\"justifyLeft\",\"CTRL+SHIFT+E\":\"justifyCenter\",\"CTRL+SHIFT+R\":\"justifyRight\",\"CTRL+SHIFT+J\":\"justifyFull\",\"CTRL+SHIFT+NUM7\":\"insertUnorderedList\",\"CTRL+SHIFT+NUM8\":\"insertOrderedList\",\"CTRL+LEFTBRACKET\":\"outdent\",\"CTRL+RIGHTBRACKET\":\"indent\",\"CTRL+NUM0\":\"formatPara\",\"CTRL+NUM1\":\"formatH1\",\"CTRL+NUM2\":\"formatH2\",\"CTRL+NUM3\":\"formatH3\",\"CTRL+NUM4\":\"formatH4\",\"CTRL+NUM5\":\"formatH5\",\"CTRL+NUM6\":\"formatH6\",\"CTRL+ENTER\":\"insertHorizontalRule\",\"CTRL+K\":\"showLinkDialog\"},mac:{ENTER:\"insertParagraph\",\"CMD+Z\":\"undo\",\"CMD+SHIFT+Z\":\"redo\",TAB:\"tab\",\"SHIFT+TAB\":\"untab\",\"CMD+B\":\"bold\",\"CMD+I\":\"italic\",\"CMD+U\":\"underline\",\"CMD+SHIFT+S\":\"strikethrough\",\"CMD+BACKSLASH\":\"removeFormat\",\"CMD+SHIFT+L\":\"justifyLeft\",\"CMD+SHIFT+E\":\"justifyCenter\",\"CMD+SHIFT+R\":\"justifyRight\",\"CMD+SHIFT+J\":\"justifyFull\",\"CMD+SHIFT+NUM7\":\"insertUnorderedList\",\"CMD+SHIFT+NUM8\":\"insertOrderedList\",\"CMD+LEFTBRACKET\":\"outdent\",\"CMD+RIGHTBRACKET\":\"indent\",\"CMD+NUM0\":\"formatPara\",\"CMD+NUM1\":\"formatH1\",\"CMD+NUM2\":\"formatH2\",\"CMD+NUM3\":\"formatH3\",\"CMD+NUM4\":\"formatH4\",\"CMD+NUM5\":\"formatH5\",\"CMD+NUM6\":\"formatH6\",\"CMD+ENTER\":\"insertHorizontalRule\",\"CMD+K\":\"showLinkDialog\"}}},lang:{\"en-US\":{font:{bold:\"Bold\",italic:\"Italic\",underline:\"Underline\",clear:\"Remove Font Style\",height:\"Line Height\",name:\"Font Family\",strikethrough:\"Strikethrough\",subscript:\"Subscript\",superscript:\"Superscript\",size:\"Font Size\"},image:{image:\"Picture\",insert:\"Insert Image\",resizeFull:\"Resize Full\",resizeHalf:\"Resize Half\",resizeQuarter:\"Resize Quarter\",floatLeft:\"Float Left\",floatRight:\"Float Right\",floatNone:\"Float None\",shapeRounded:\"Shape: Rounded\",shapeCircle:\"Shape: Circle\",bordered:\"Bordered\",shapeThumbnail:\"Shape: Thumbnail\",shapeNone:\"Shape: None\",dragImageHere:\"Drag image or text here\",dropImage:\"Drop image or Text\",selectFromFiles:\"Select from files\",maximumFileSize:\"Maximum file size\",maximumFileSizeError:\"Maximum file size exceeded.\",url:\"Image URL\",remove:\"Remove Image\"},link:{link:\"Link\",insert:\"Insert Link\",unlink:\"Unlink\",edit:\"Edit\",textToDisplay:\"Text to display\",url:\"To what URL should this link go?\",openInNewWindow:\"Open in new window\"},table:{table:\"Table\",striped:\"Striped\",hoverable:\"Hoverable\",responsive:\"Responsive\",bordered:\"Bordered\"},hr:{insert:\"Insert Horizontal Rule\"},style:{style:\"Style\",normal:\"Normal\",blockquote:\"Quote\",pre:\"Code\",h1:\"Header 1\",h2:\"Header 2\",h3:\"Header 3\",h4:\"Header 4\",h5:\"Header 5\",h6:\"Header 6\"},lists:{unordered:\"Unordered list\",ordered:\"Ordered list\"},options:{help:\"Help\",fullscreen:\"Full Screen\",codeview:\"Code View\"},paragraph:{paragraph:\"Paragraph\",outdent:\"Outdent\",indent:\"Indent\",left:\"Align left\",center:\"Align center\",right:\"Align right\",justify:\"Justify full\"},color:{recent:\"Recent Color\",more:\"More Color\",background:\"Back\",foreground:\"Text\",transparent:\"Transparent\",setTransparent:\"Transparent\",reset:\"Reset\",resetToDefault:\"Default\"},shortcut:{shortcuts:\"Keyboard shortcuts\",close:\"Close\",textFormatting:\"Text formatting\",action:\"Action\",paragraphFormatting:\"Paragraph formatting\",documentStyle:\"Document Style\",extraKeys:\"Extra keys\"},history:{undo:\"Undo\",redo:\"Redo\"}}}},h=function(){var t=function(t){return e.Deferred(function(n){e.extend(new FileReader,{onload:function(e){var t=e.target.result;n.resolve(t)},onerror:function(){n.reject(this)}}).readAsDataURL(t)}).promise()},n=function(t,n){return e.Deferred(function(i){var o=e(\"<img>\");o.one(\"load\",function(){o.off(\"error abort\"),i.resolve(o)}).one(\"error abort\",function(){o.off(\"load\").detach(),i.reject(o)}).css({display:\"none\"}).appendTo(document.body).attr({src:t,\"data-filename\":n})}).promise()};return{readFileAsDataURL:t,createImage:n}}(),p=function(){var e={BACKSPACE:8,TAB:9,ENTER:13,SPACE:32,NUM0:48,NUM1:49,NUM2:50,NUM3:51,NUM4:52,NUM5:53,NUM6:54,NUM7:55,NUM8:56,B:66,E:69,I:73,J:74,K:75,L:76,R:82,S:83,U:85,Y:89,Z:90,SLASH:191,LEFTBRACKET:219,BACKSLASH:220,RIGHTBRACKET:221};return{isEdit:function(e){return s.contains([8,9,13,32],e)},isMove:function(e){return s.contains([37,38,39,40],e)},nameFromCode:a.invertObject(e),code:e}}(),v=function(e){var t=[],n=-1,i=e[0],o=function(){var t=u.create(),n={s:{path:[],offset:0},e:{path:[],offset:0}};return{contents:e.html(),bookmark:t?t.bookmark(i):n}},r=function(t){null!==t.contents&&e.html(t.contents),null!==t.bookmark&&u.createFromBookmark(i,t.bookmark).select()};this.undo=function(){n>0&&(n--,r(t[n]))},this.redo=function(){t.length-1>n&&(n++,r(t[n]))},this.recordUndo=function(){n++,t.length>n&&(t=t.slice(0,n)),t.push(o())},this.recordUndo()},g=function(){var t=function(t,n){if(r.jqueryVersion<1.9){var i={};return e.each(n,function(e,n){i[n]=t.css(n)}),i}return t.css.call(t,n)};this.stylePara=function(t,n){e.each(t.nodes(c.isPara,{includeAncestor:!0}),function(t,i){e(i).css(n)})},this.styleNodes=function(t,n){t=t.splitText();var i=n&&n.nodeName||\"SPAN\",o=!(!n||!n.expandClosestSibling),r=!(!n||!n.onlyPartialContains);if(t.isCollapsed())return[t.insertNode(c.create(i))];var l=c.makePredByNodeName(i),d=e.map(t.nodes(c.isText,{fullyContains:!0}),function(e){return c.singleChildAncestor(e,l)||c.wrap(e,i)});if(o){if(r){var u=t.nodes();l=a.and(l,function(e){return s.contains(u,e)})}return e.map(d,function(t){var n=c.withClosestSiblings(t,l),i=s.head(n),o=s.tail(n);return e.each(o,function(e,t){c.appendChildNodes(i,t.childNodes),c.remove(t)}),s.head(n)})}return d},this.current=function(n,i){var o=e(c.isText(n.sc)?n.sc.parentNode:n.sc),r=[\"font-family\",\"font-size\",\"text-align\",\"list-style-type\",\"line-height\"],a=t(o,r)||{};if(a[\"font-size\"]=parseInt(a[\"font-size\"],10),a[\"font-bold\"]=document.queryCommandState(\"bold\")?\"bold\":\"normal\",a[\"font-italic\"]=document.queryCommandState(\"italic\")?\"italic\":\"normal\",a[\"font-underline\"]=document.queryCommandState(\"underline\")?\"underline\":\"normal\",a[\"font-strikethrough\"]=document.queryCommandState(\"strikeThrough\")?\"strikethrough\":\"normal\",a[\"font-superscript\"]=document.queryCommandState(\"superscript\")?\"superscript\":\"normal\",a[\"font-subscript\"]=document.queryCommandState(\"subscript\")?\"subscript\":\"normal\",n.isOnList()){var s=[\"circle\",\"disc\",\"disc-leading-zero\",\"square\"],l=e.inArray(a[\"list-style-type\"],s)>-1;a[\"list-style\"]=l?\"unordered\":\"ordered\"}else a[\"list-style\"]=\"none\";var d=c.ancestor(n.sc,c.isPara);if(d&&d.style[\"line-height\"])a[\"line-height\"]=d.style.lineHeight;else{var u=parseInt(a[\"line-height\"],10)/parseInt(a[\"font-size\"],10);a[\"line-height\"]=u.toFixed(1)}return a.image=c.isImg(i)&&i,a.anchor=n.isOnAnchor()&&c.ancestor(n.sc,c.isAnchor),a.ancestors=c.listAncestor(n.sc,c.isEditable),a.range=n,a}},m=function(){this.insertOrderedList=function(){this.toggleList(\"OL\")},this.insertUnorderedList=function(){this.toggleList(\"UL\")},this.indent=function(){var t=this,n=u.create().wrapBodyInlineWithPara(),i=n.nodes(c.isPara,{includeAncestor:!0}),o=s.clusterBy(i,a.peq2(\"parentNode\"));e.each(o,function(n,i){var o=s.head(i);c.isLi(o)?t.wrapList(i,o.parentNode.nodeName):e.each(i,function(t,n){e(n).css(\"marginLeft\",function(e,t){return(parseInt(t,10)||0)+25})})}),n.select()},this.outdent=function(){var t=this,n=u.create().wrapBodyInlineWithPara(),i=n.nodes(c.isPara,{includeAncestor:!0}),o=s.clusterBy(i,a.peq2(\"parentNode\"));e.each(o,function(n,i){var o=s.head(i);c.isLi(o)?t.releaseList([i]):e.each(i,function(t,n){\\r\\n    e(n).css(\"marginLeft\",function(e,t){return t=parseInt(t,10)||0,t>25?t-25:\"\"})})}),n.select()},this.toggleList=function(t){var n=this,i=u.create().wrapBodyInlineWithPara(),o=i.nodes(c.isPara,{includeAncestor:!0}),r=i.paraBookmark(o),l=s.clusterBy(o,a.peq2(\"parentNode\"));if(s.find(o,c.isPurePara)){var d=[];e.each(l,function(e,i){d=d.concat(n.wrapList(i,t))}),o=d}else{var f=i.nodes(c.isList,{includeAncestor:!0}).filter(function(n){return!e.nodeName(n,t)});f.length?e.each(f,function(e,n){c.replace(n,t)}):o=this.releaseList(l,!0)}u.createFromParaBookmark(r,o).select()},this.wrapList=function(t,n){var i=s.head(t),o=s.last(t),r=c.isList(i.previousSibling)&&i.previousSibling,a=c.isList(o.nextSibling)&&o.nextSibling,l=r||';\n  builder.string += 'c.insertAfter(c.create(n||\"UL\"),o);return t=e.map(t,function(e){return c.isPurePara(e)?c.replace(e,\"LI\"):e}),c.appendChildNodes(l,t),a&&(c.appendChildNodes(l,s.from(a.childNodes)),c.remove(a)),t},this.releaseList=function(t,n){var i=[];return e.each(t,function(t,o){var r=s.head(o),a=s.last(o),l=n?c.lastAncestor(r,c.isList):r.parentNode,d=l.childNodes.length>1?c.splitTree(l,{node:a.parentNode,offset:c.position(a)+1},{isSkipPaddingBlankHTML:!0}):null,u=c.splitTree(l,{node:r.parentNode,offset:c.position(r)},{isSkipPaddingBlankHTML:!0});o=n?c.listDescendant(u,c.isLi):s.from(u.childNodes).filter(c.isLi),(n||!c.isList(l.parentNode))&&(o=e.map(o,function(e){return c.replace(e,\"P\")})),e.each(s.from(o).reverse(),function(e,t){c.insertAfter(t,l)});var f=s.compact([l,u,d]);e.each(f,function(t,n){var i=[n].concat(c.listDescendant(n,c.isList));e.each(i.reverse(),function(e,t){c.nodeLength(t)||c.remove(t,!0)})}),i=i.concat(o)}),i}},b=function(){var t=new m;this.insertTab=function(e,t,n){var i=c.createText(new Array(n+1).join(c.NBSP_CHAR));t=t.deleteContents(),t.insertNode(i,!0),t=u.create(i,n),t.select()},this.insertParagraph=function(){var n=u.create();n=n.deleteContents(),n=n.wrapBodyInlineWithPara();var i,o=c.ancestor(n.sc,c.isPara);if(o){if(c.isEmpty(o)&&c.isLi(o))return void t.toggleList(o.parentNode.nodeName);i=c.splitTree(o,n.getStartPoint());var r=c.listDescendant(o,c.isEmptyAnchor);r=r.concat(c.listDescendant(i,c.isEmptyAnchor)),e.each(r,function(e,t){c.remove(t)})}else{var a=n.sc.childNodes[n.so];i=e(c.emptyPara)[0],a?n.sc.insertBefore(i,a):n.sc.appendChild(i)}u.create(i,0).normalize().select()}},k=function(){this.tab=function(e,t){var n=c.ancestor(e.commonAncestor(),c.isCell),i=c.ancestor(n,c.isTable),o=c.listDescendant(i,c.isCell),r=s[t?\"prev\":\"next\"](o,n);r&&u.create(r,0).select()},this.createTable=function(t){for(var n,i=[],o=[],r=t[0],a=t[1],s=t.slice(2,t.length),l=0;r>l;l++)i.push(\"<td>(item)<\\/td>\"),o.push(\"<th>header<\\/th>\");n=i.join(\"\"),o=o.join(\"\");for(var d,c=[],u=0;a>u;u++)c.push(\"<tr>\"+n+\"<\\/tr>\");return d=c.join(\"\"),e(\\'<table class=\"\\'+s.join(\" \")+\\'\"><thead><tr>\\'+o+\"<\\/tr><\\/thead><tbody>\"+d+\"<\\/tbody><\\/table>\")[0]}},y=\"bogus\",C=function(t){var n=new g,i=new k,o=new b,a=new m;this.createRange=function(e){return this.focus(e),u.create()},this.saveRange=function(e,t){this.focus(e),e.data(\"range\",u.create()),t&&u.create().collapse().select()},this.saveNode=function(e){for(var t=[],n=0,i=e[0].childNodes.length;i>n;n++)t.push(e[0].childNodes[n]);e.data(\"childNodes\",t)},this.restoreRange=function(e){var t=e.data(\"range\");t&&(t.select(),this.focus(e))},this.restoreNode=function(e){e.html(\"\");for(var t=e.data(\"childNodes\"),n=0,i=t.length;i>n;n++)e[0].appendChild(t[n])},this.reset=function(e){e.html(\"\")},this.html=function(e,t){e.html(t)},this.getHTML=function(e){return e.html()},this.currentStyle=function(e){var t=u.create();return t?t.isOnEditable()&&n.current(t,e):!1};var l=function(e){var n=c.makeLayoutInfo(e).holder();t.bindCustomEvent(n,e.data(\"callbacks\"),\"before.command\")(e.html(),e)},d=function(e){var n=c.makeLayoutInfo(e).holder();t.bindCustomEvent(n,e.data(\"callbacks\"),\"change\")(e.html(),e)};this.undo=function(e){l(e),e.data(\"NoteHistory\").undo(),d(e)},this.redo=function(e){l(e),e.data(\"NoteHistory\").redo(),d(e)};for(var f=this,p=this.beforeCommand=function(e){l(e),f.focus(e)},v=this.afterCommand=function(e,t){e.data(\"NoteHistory\").recordUndo(),t||d(e)},C=[\"bold\",\"italic\",\"underline\",\"strikethrough\",\"superscript\",\"subscript\",\"justifyLeft\",\"justifyCenter\",\"justifyRight\",\"justifyFull\",\"formatBlock\",\"removeFormat\",\"backColor\",\"foreColor\",\"fontName\"],x=0,w=C.length;w>x;x++)this[C[x]]=function(e){return function(t,n){p(t),document.execCommand(e,!1,n),v(t,!0)}}(C[x]);this.insertHorizontalRule=function(){var t=e(\"<div />\");t.addClass(\"divider\"),u.create().insertNode(t[0])},this.tab=function(e,t){var n=this.createRange(e);n.isCollapsed()&&n.isOnCell()?i.tab(n):(p(e),o.insertTab(e,n,t.tabsize),v(e))},this.untab=function(e){var t=this.createRange(e);t.isCollapsed()&&t.isOnCell()&&i.tab(t,!0)},this.insertParagraph=function(e){p(e),o.insertParagraph(e),v(e)},this.insertOrderedList=function(e){p(e),a.insertOrderedList(e),v(e)},this.insertUnorderedList=function(e){p(e),a.insertUnorderedList(e),v(e)},this.indent=function(e){p(e),a.indent(e),v(e)},this.outdent=function(e){p(e),a.outdent(e),v(e)},this.insertImage=function(e,n,i){h.createImage(n,i).then(function(t){p(e),t.css({display:\"\",width:Math.min(e.width(),t.width())}),u.create().insertNode(t[0]),u.createFromNodeAfter(t[0]).select(),v(e)}).fail(function(){var n=c.makeLayoutInfo(e).holder();t.bindCustomEvent(n,e.data(\"callbacks\"),\"image.upload.error\")()})},this.insertNode=function(e,t){p(e),u.create().insertNode(t),u.createFromNodeAfter(t).select(),v(e)},this.insertText=function(e,t){p(e);var n=u.create().insertNode(c.createText(t));u.create(n,c.nodeLength(n)).select(),v(e)},this.pasteHTML=function(e,t){p(e);var n=u.create().pasteHTML(t);u.createFromNodeAfter(s.last(n)).select(),v(e)},this.formatBlock=function(e,t){p(e),t=r.isMSIE?\"<\"+t+\">\":t,document.execCommand(\"FormatBlock\",!1,t),v(e)},this.formatPara=function(e){p(e),this.formatBlock(e,\"P\"),v(e)};for(var x=1;6>=x;x++)this[\"formatH\"+x]=function(e){return function(t){this.formatBlock(t,\"H\"+e)}}(x);this.fontSize=function(t,i){var o=u.create(),r=o.isCollapsed();if(r){var a=n.styleNodes(o),l=s.head(a);e(a).css({\"font-size\":i+\"px\"}),l&&!c.nodeLength(l)&&(l.innerHTML=c.ZERO_WIDTH_NBSP_CHAR,u.createFromNodeAfter(l.firstChild).select(),t.data(y,l))}else p(t),e(n.styleNodes(o)).css({\"font-size\":i+\"px\"}),v(t)},this.removeBogus=function(e){var t=e.data(y);if(t){var n=s.find(s.from(t.childNodes),c.isText),i=n.nodeValue.indexOf(c.ZERO_WIDTH_NBSP_CHAR);-1!==i&&n.deleteData(i,1),c.isEmpty(t)&&c.remove(t),e.removeData(y)}},this.lineHeight=function(e,t){p(e),n.stylePara(u.create(),{lineHeight:t}),v(e)},this.unlink=function(e){var t=this.createRange(e);if(t.isOnAnchor()){var n=c.ancestor(t.sc,c.isAnchor);t=u.createFromNode(n),t.select(),p(e),document.execCommand(\"unlink\"),v(e)}},this.createLink=function(t,i,o){var r=i.url,a=i.text,l=i.newWindow,d=i.range,c=d.toString()!==a;p(t),o.onCreateLink&&(r=o.onCreateLink(r));var f=[];if(c){var h=d.insertNode(e(\"<A>\"+a+\"<\\/A>\")[0]);f.push(h)}else f=n.styleNodes(d,{nodeName:\"A\",expandClosestSibling:!0,onlyPartialContains:!0});e.each(f,function(t,n){e(n).attr(\"href\",r),l?e(n).attr(\"target\",\"_blank\"):e(n).removeAttr(\"target\")});var g=u.createFromNodeBefore(s.head(f)),m=g.getStartPoint(),b=u.createFromNodeAfter(s.last(f)),k=b.getEndPoint();u.create(m.node,m.offset,k.node,k.offset).select(),v(t)},this.getLinkInfo=function(t){this.focus(t);var n=u.create().expand(c.isAnchor),i=e(s.head(n.nodes(c.isAnchor)));return{range:n,text:n.toString(),isNewWindow:i.length?\"_blank\"===i.attr(\"target\"):!1,url:i.length?i.attr(\"href\"):\"\"}},this.color=function(e,t){var n=JSON.parse(t),i=n.foreColor,o=n.backColor;p(e),i&&document.execCommand(\"foreColor\",!1,i),o&&document.execCommand(\"backColor\",!1,o),v(e)},this.insertTable=function(e,t){var n=t.split(\"x\");p(e);var o=u.create().deleteContents();o.insertNode(i.createTable(n)),v(e)},this.floatMe=function(e,t,n){p(e),n.css(\"float\",t),v(e)},this.imageShape=function(e,t,n){p(e),n.removeClass(\"img-rounded img-circle img-thumbnail img-bordered\"),t&&n.addClass(t),v(e)},this.imageClass=function(e,t,n){p(e),t&&(n.hasClass(t)?n.removeClass(t):n.addClass(t)),v(e)},this.resize=function(e,t,n){p(e),n.css({width:100*t+\"%\",height:\"\"}),v(e)},this.resizeTo=function(e,t,n){var i;if(n){var o=e.y/e.x,r=t.data(\"ratio\");i={width:r>o?e.x:e.y/r,height:r>o?e.x*r:e.y}}else i={width:e.x,height:e.y};t.css(i)},this.removeMedia=function(n,i,o){p(n),o.detach(),t.bindCustomEvent(e(),n.data(\"callbacks\"),\"media.delete\")(o,n),v(n)},this.focus=function(e){e.focus(),r.isFF&&!u.create().isOnEditable()&&u.createFromNode(e[0]).normalize().collapse().select()},this.isEmpty=function(e){return c.isEmpty(e[0])||c.emptyPara===e.html()}},x=function(){this.update=function(t,n){var i=function(t,n){t.find(\".dropdown-menu li\").each(function(){var t=e(this).children(\"div\"),i=t.data(\"value\");i+\"\"==n+\"\"?t.children(\"i\").removeClass(\"transparent\"):t.children(\"i\").addClass(\"transparent\")})},o=function(e,n){var i=t.find(e);i.toggleClass(\"active\",n())};if(n.image){var a=e(n.image);o(\\'.btn[data-event=\"imageClass\"][data-value=\"img-rounded\"]\\',function(){return a.hasClass(\"img-rounded\")}),o(\\'.btn[data-event=\"imageClass\"][data-value=\"img-circle\"]\\',function(){return a.hasClass(\"img-circle\")}),o(\\'.btn[data-event=\"imageClass\"][data-value=\"img-thumbnail\"]\\',function(){return a.hasClass(\"img-thumbnail\")}),o(\\'.btn[data-event=\"imageClass\"][data-value=\"img-bordered\"]\\',function(){return a.hasClass(\"img-bordered\")}),o(\\'.btn[data-event=\"imageShape\"]:not([data-value])\\',function(){return!a.is(\".img-rounded, .img-circle, .img-thumbnail, .img-bordered\")});var s=a.css(\"float\");o(\\'.btn[data-event=\"floatMe\"][data-value=\"left\"]\\',function(){return\"left\"===s}),o(\\'.btn[data-event=\"floatMe\"][data-value=\"right\"]\\',function(){return\"right\"===s}),o(\\'.btn[data-event=\"floatMe\"][data-value=\"none\"]\\',function(){return\"left\"!==s&&\"right\"!==s});var l=a.attr(\"style\");return o(\\'.btn[data-event=\"resize\"][data-value=\"1\"]\\',function(){return!!/(^|\\\\s)(max-)?width\\\\s*:\\\\s*100%/.test(l)}),o(\\'.btn[data-event=\"resize\"][data-value=\"0.5\"]\\',function(){return!!/(^|\\\\s)(max-)?width\\\\s*:\\\\s*50%/.test(l)}),void o(\\'.btn[data-event=\"resize\"][data-value=\"0.25\"]\\',function(){return!!/(^|\\\\s)(max-)?width\\\\s*:\\\\s*25%/.test(l)})}var d=t.find(\".note-fontname[data-name=fontname]\");if(d.length){var c=n[\"font-family\"];if(c){for(var u=c.split(\",\"),f=0,h=u.length;h>f&&(c=u[f].replace(/[\\\\\\'\\\\\"]/g,\"\").replace(/\\\\s+$/,\"\").replace(/^\\\\s+/,\"\"),!r.isFontInstalled(c));f++);d.find(\".note-current-fontname\").text(c),i(d,c)}}var p=t.find(\".note-fontsize[data-name=fontsize]\");p.find(\".note-current-fontsize\").text(n[\"font-size\"]),i(p,parseFloat(n[\"font-size\"]));var v=t.find(\".note-height[data-name=lineheight]\");i(v,parseFloat(n[\"line-height\"])),o(\\'.btn[data-event=\"bold\"]\\',function(){return\"bold\"===n[\"font-bold\"]}),o(\\'.btn[data-event=\"italic\"]\\',function(){return\"italic\"===n[\"font-italic\"]}),o(\\'.btn[data-event=\"underline\"]\\',function(){return\"underline\"===n[\"font-underline\"]}),o(\\'.btn[data-event=\"strikethrough\"]\\',function(){return\"strikethrough\"===n[\"font-strikethrough\"]}),o(\\'.btn[data-event=\"superscript\"]\\',function(){return\"superscript\"===n[\"font-superscript\"]}),o(\\'.btn[data-event=\"subscript\"]\\',function(){return\"subscript\"===n[\"font-subscript\"]}),o(\\'.btn[data-event=\"justifyLeft\"]\\',function(){return\"left\"===n[\"text-align\"]||\"start\"===n[\"text-align\"]}),o(\\'.btn[data-event=\"justifyCenter\"]\\',function(){return\"center\"===n[\"text-align\"]}),o(\\'.btn[data-event=\"justifyRight\"]\\',function(){return\"right\"===n[\"text-align\"]}),o(\\'.btn[data-event=\"justifyFull\"]\\',function(){return\"justify\"===n[\"text-align\"]}),o(\\'.btn[data-event=\"insertUnorderedList\"]\\',function(){return\"unordered\"===n[\"list-style\"]}),o(\\'.btn[data-event=\"insertOrderedList\"]\\',function(){return\"ordered\"===n[\"list-style\"]})},this.updateRecentColor=function(t,n,i){var o=e(t).closest(\".note-color\"),r=o.find(\".note-recent-color\"),a=JSON.parse(r.attr(\"data-value\")),s=\"backColor\"===n?\"background-color\":\"color\";a[n]=i,r.attr(\"data-value\",JSON.stringify(a)),r.css(s,i)}},w=function(){var e=new x;this.update=function(t,n){e.update(t,n)},this.updateRecentColor=function(t,n,i){e.updateRecentColor(t,n,i)},this.activate=function(e){e.find(\"button, .btn\").not(\\'.btn[data-event=\"codeview\"]\\').removeClass(\"disabled\")},this.deactivate=function(e){e.find(\"button, .btn\").not(\\'.btn[data-event=\"codeview\"]\\').addClass(\"disabled\")},this.updateFullscreen=function(e,t){var n=e.find(\\'.btn[data-event=\"fullscreen\"]\\');n.toggleClass(\"active\",t)},this.updateCodeview=function(e,t){var n=e.find(\\'.btn[data-event=\"codeview\"]\\');n.toggleClass(\"active\",t),t?this.deactivate(e):this.activate(e)},this.get=function(e,t){var n=c.makeLayoutInfo(e).toolbar();return n.find(\"[data-name=\"+t+\"]\")},this.setButtonState=function(e,t,n){n=n===!1?!1:!0;var i=this.get(e,t);i.toggleClass(\"active\",n)}},T=24,N=function(){var t=e(document);this.attach=function(e,t){t.disableResizeEditor||e.statusbar().on(\"mousedown\",n)};var n=function(e){e.preventDefault(),e.stopPropagation();var n=c.makeLayoutInfo(e.target).editable(),i=n.offset().top-t.scrollTop(),o=c.makeLayoutInfo(e.currentTarget||e.target),r=o.editor().data(\"options\");t.on(\"mousemove\",function(e){var t=e.clientY-(i+T);t=r.minHeight>0?Math.max(t,r.minHeight):t,t=r.maxHeight>0?Math.min(t,r.maxHeight):t,n.height(t)}).one(\"mouseup\",function(){t.off(\"mousemove\")})}},P=function(){var t=new x,n=function(t,n){var i=e(t),o=n?i.offset():i.position(),r=i.outerHeight(!0);return{left:o.left,top:o.top+r}},i=function(e,t){e.css({display:\"block\",left:t.left,top:t.top})},o=20;this.update=function(r,l,d){t.update(r,l);var c=r.find(\".note-link-popover\");if(l.anchor){var u=c.find(\"a\"),f=e(l.anchor).attr(\"href\"),h=e(l.anchor).attr(\"target\");u.attr(\"href\",f).html(f),h?u.attr(\"target\",\"_blank\"):u.removeAttr(\"target\"),i(c,n(l.anchor,d))}else c.hide();var p=r.find(\".note-image-popover\");l.image?i(p,n(l.image,d)):p.hide();var v=r.find(\".note-air-popover\");if(d&&!l.range.isCollapsed()){var g=s.last(l.range.getClientRects());if(g){var m=a.rect2bnd(g);i(v,{left:Math.max(m.left+m.width/2-o,0),top:m.top+m.height})}}else v.hide()},this.updateRecentColor=function(e,t,n){e.updateRecentColor(e,t,n)},this.hide=function(e){e.children().hide()}},L=function(t){var n=e(document),i=function(i){if(c.isControlSizing(i.target)){i.preventDefault(),i.stopPropagation();var o=c.makeLayoutInfo(i.target),r=o.handle(),a=o.popover(),s=o.editable(),l=o.editor(),d=r.find(\".note-control-selection\").data(\"target\"),u=e(d),f=u.offset(),h=n.scrollTop(),p=l.data(\"options\").airMode;n.on(\"mousemove\",function(e){t.invoke(\"editor.resizeTo\",{x:e.clientX-f.left,y:e.clientY-(f.top-h)},u,!e.shiftKey),t.invoke(\"handle.update\",r,{image:d},p),t.invoke(\"popover.update\",a,{image:d},p)}).one(\"mouseup\",function(){n.off(\"mousemove\"),t.invoke(\"editor.afterCommand\",s)}),u.data(\"ratio\")||u.data(\"ratio\",u.height()/u.width())}};this.attach=function(e){e.handle().on(\"mousedown\",i)},this.update=function(t,n,i){var o=t.find(\".note-control-selection\");if(n.image){var r=e(n.image),a=i?r.offset():r.position(),s={w:r.outerWidth(!0),h:r.outerHeight(!0)};o.css({display:\"block\",left:a.left,top:a.top,width:s.w,height:s.h}).data(\"target\",n.image);var l=s.w+\"x\"+s.h;o.find(\".note-control-selection-info\").text(l)}else o.hide()},this.hide=function(e){e.children().hide()}},S=function(t){var n=e(window),i=e(\"html, body\");this.toggle=function(e){var o=e.editor(),r=e.toolbar(),a=e.editable(),s=e.codable(),l=function(e){a.css(\"height\",e.h),s.css(\"height\",e.h),s.data(\"cmeditor\")&&s.data(\"cmeditor\").setsize(null,e.h)};o.toggleClass(\"fullscreen\");var d=o.hasClass(\"fullscreen\");d?(a.data(\"orgheight\",a.css(\"height\")),n.on(\"resize\",function(){l({h:n.height()-r.outerHeight()})}).trigger(\"resize\"),i.css(\"overflow\",\"hidden\"),r.css(\"top\",0)):(n.off(\"resize\"),l({h:a.data(\"orgheight\")}),i.css(\"overflow\",\"visible\")),t.invoke(\"toolbar.updateFullscreen\",r,d)}};r.hasCodeMirror&&(r.isSupportAmd?require([\"CodeMirror\"],function(e){t=e}):t=window.CodeMirror);var I=function(n){this.sync=function(e){var t=n.invoke(\"codeview.isActivated\",e);t&&r.hasCodeMirror&&e.codable().data(\"cmEditor\").save()},this.isActivated=function(e){var t=e.editor();return t.hasClass(\"codeview\")},this.toggle=function(e){this.isActivated(e)?this.deactivate(e):this.activate(e)},this.activate=function(i){function o(e,t,n,i){var r,a=e.indexOf(\"<\"),s=e.indexOf(\">\");if(0===a)if(r=e.substring(0,s+1),e=e.substring(s+1),0===r.indexOf(\"<\\/\"))t--,nsideLastBlock=!1;else{n&&t++;for(var l=!1,d=0;d<i.length;d++)if(0===r.indexOf(i[d])){l=!0;break}n=l?!1:!0}else r=e.substring(0,a),e=e.substring(a),n&&t++,n=!1;return r=new Array(t+1).join(\"    \")+r.trim(),0===e.length?r:r+\"\\\\n\"+o(e.trim(),t,n,i)}var a=i.editor(),s=i.toolbar(),l=i.editable(),d=i.codable(),u=i.popover(),f=i.handle(),h=a.data(\"options\"),p=c.html(l,!1),v=[\"<img\",\"<br\",\"<hr\"];p=o(p,0,!1,v),d.val(p);var g=s.find(\".btn[data-event=codeview]\").height(),m=e(window).height()-g;if(d.height(l.height()),n.invoke(\"toolbar.updateCodeview\",s,!0),n.invoke(\"popover.hide\",u),n.invoke(\"handle.hide\",f),a.addClass(\"codeview\"),d.focus(),r.hasCodeMirror){var b=t.fromT';\n  builder.string += 'extArea(d[0],h.codemirror);if(h.codemirror.tern){var k=new t.TernServer(h.codemirror.tern);b.ternServer=k,b.on(\"cursorActivity\",function(e){k.updateArgHints(e)})}a.hasClass(\"fullscreen\")?b.setSize(null,m):b.setSize(null,l.outerHeight()),d.data(\"cmEditor\",b)}},this.deactivate=function(e){var t=e.holder(),i=e.editor(),o=e.toolbar(),a=e.editable(),s=e.codable(),l=i.data(\"options\");if(r.hasCodeMirror){var d=s.data(\"cmEditor\");s.val(d.getValue()),d.toTextArea()}var u=c.value(s,l.prettifyHtml)||c.emptyPara,f=a.html()!==u;a.html(u),a.height(l.height?s.height():\"auto\"),i.removeClass(\"codeview\"),f&&n.bindCustomEvent(t,a.data(\"callbacks\"),\"change\")(a.html(),a),a.focus(),n.invoke(\"toolbar.updateCodeview\",o,!1)}},M=function(t){var n=e(document);this.attach=function(e,t){t.airMode||t.disableDragAndDrop?n.on(\"drop\",function(e){e.preventDefault()}):this.attachDragAndDropEvent(e,t)},this.attachDragAndDropEvent=function(i,o){var r=e(),a=i.editor(),s=i.dropzone(),l=s.find(\".note-dropzone-message\");n.on(\"dragenter\",function(e){var n=t.invoke(\"codeview.isActivated\",i),d=a.width()>0&&a.height()>0;n||r.length||!d||(a.addClass(\"dragover\"),s.width(a.width()),s.height(a.height()),l.text(o.langInfo.image.dragImageHere)),r=r.add(e.target)}).on(\"dragleave\",function(e){r=r.not(e.target),r.length||a.removeClass(\"dragover\")}).on(\"drop\",function(){r=e(),a.removeClass(\"dragover\")}),s.on(\"dragenter\",function(){s.addClass(\"hover\"),l.text(o.langInfo.image.dropImage)}).on(\"dragleave\",function(){s.removeClass(\"hover\"),l.text(o.langInfo.image.dragImageHere)}),s.on(\"drop\",function(n){var i=n.originalEvent.dataTransfer,o=c.makeLayoutInfo(n.currentTarget||n.target);if(i&&i.files&&i.files.length)n.preventDefault(),o.editable().focus(),t.insertImages(o,i.files);else for(var r=function(){o.holder().materialnote(\"insertNode\",this)},a=0,s=i.types.length;s>a;a++){var l=i.types[a],d=i.getData(l);l.toLowerCase().indexOf(\"text\")>-1?o.holder().materialnote(\"pasteHTML\",d):e(d).each(r)}}).on(\"dragover\",!1)}},R=function(t){var n;this.attach=function(o){(window.clipboardData||r.isFF)&&(n=e(\"<div />\").attr(\"contenteditable\",!0).css({position:\"absolute\",left:-1e5,opacity:0}),o.editable().after(n),n.one(\"paste\",i),o.editable().on(\"keydown\",function(e){e.ctrlKey&&86===e.keyCode&&(t.invoke(\"saveRange\",o.editable()),n&&n.focus())})),o.editable().on(\"paste\",i)};var i=function(e){var i=e.originalEvent.clipboardData,o=c.makeLayoutInfo(e.currentTarget||e.target),r=o.editable();if(!i||!i.items||!i.items.length){var a=r.data(\"callbacks\");if(!a.onImageUpload)return;return void setTimeout(function(){if(n){var e=n[0].firstChild;if(e){if(t.invoke(\"restoreRange\",r),c.isImg(e)){for(var i=e.src,a=atob(i.split(\",\")[1]),s=new Uint8Array(a.length),l=0;l<a.length;l++)s[l]=a.charCodeAt(l);var d=new Blob([s],{type:\"image/png\"});d.name=\"clipboard.png\",t.invoke(\"focus\",r),t.insertImages(o,[d])}else t.invoke(\"pasteHTML\",r,n.html());n.remove()}}},0)}var l=s.head(i.items),d=\"file\"===l.kind&&-1!==l.type.indexOf(\"image/\");d&&t.insertImages(o,[l.getAsFile()]),t.invoke(\"editor.afterCommand\",r)}},E=function(t){var n=function(e,t){e.toggleClass(\"disabled\",!t),e.attr(\"disabled\",!t)},i=function(e,t){e.on(\"keypress\",function(e){e.keyCode===p.code.ENTER&&t.trigger(\"click\")})};this.showLinkDialog=function(t,o,r){return e.Deferred(function(t){var a=o.find(\".note-link-dialog\"),s=a.find(\".note-link-text\"),l=s.next(\"label\"),d=a.find(\".note-link-url\"),c=a.find(\".note-link-btn\"),u=a.find(\".btnClose\"),f=a.find(\"input[type=checkbox]\");a.openModal(),s.val(r.text),r.text.length>0&&l.addClass(\"active\"),s.on(\"keyup\",function(){n(c,s.val()&&d.val()),r.text=s.val()}),u.click(function(e){e.preventDefault(),a.closeModal()}),r.url||(r.url=r.text||\"http://\",n(c,r.text)),d.on(\"keyup\",function(){n(c,s.val()&&d.val()),r.text||(l.addClass(\"active\"),s.val(d.val()))}).val(r.url).trigger(\"focus\").trigger(\"select\"),i(d,c),i(s,c),f.prop(\"checked\",r.newWindow),c.one(\"click\",function(n){n.preventDefault(),t.resolve({range:r.range,url:d.val(),text:s.val(),newWindow:f.is(\":checked\")}),e(\".note-link-text\").val(\"\"),e(\".note-link-text\").next(\"label\").removeClass(\"active\"),e(\".note-link-url\").val(\"\"),a.closeModal()})}).promise()},this.show=function(e){var n=e.editor(),i=e.dialog(),o=e.editable(),r=e.popover(),a=t.invoke(\"editor.getLinkInfo\",o),s=n.data(\"options\");t.invoke(\"editor.saveRange\",o),this.showLinkDialog(o,i,a).then(function(e){t.invoke(\"editor.restoreRange\",o),t.invoke(\"editor.createLink\",o,e,s),t.invoke(\"popover.hide\",r)}).fail(function(){t.invoke(\"editor.restoreRange\",o)})}},H=function(t){var n=function(e,t){e.toggleClass(\"disabled\",!t),e.attr(\"disabled\",!t)},i=function(e,t){e.on(\"keypress\",function(e){e.keyCode===p.code.ENTER&&t.trigger(\"click\")})};this.show=function(e){var n=e.dialog(),i=e.editable();t.invoke(\"editor.saveRange\",i),this.showImageDialog(i,n).then(function(n){t.invoke(\"editor.restoreRange\",i),\"string\"==typeof n?t.invoke(\"editor.insertImage\",i,n):t.insertImages(e,n)}).fail(function(){t.invoke(\"editor.restoreRange\",i)})},this.showImageDialog=function(t,o){return e.Deferred(function(e){var t=o.find(\".note-image-dialog\"),r=o.find(\".note-image-input\"),a=o.find(\".note-image-url\"),s=o.find(\".note-image-btn\"),l=t.find(\".btnClose\");t.openModal(),r.replaceWith(r.clone().on(\"change\",function(){e.resolve(this.files||this.value),a.val(\"\"),t.closeModal(),e.resolve()}).val(\"\")),s.click(function(n){n.preventDefault(),e.resolve(a.val()),a.val(\"\"),t.closeModal(),e.resolve()}),l.click(function(e){e.preventDefault(),t.closeModal()}),a.on(\"keyup paste\",function(e){var t;t=\"paste\"===e.type?e.originalEvent.clipboardData.getData(\"text\"):a.val(),n(s,t)}),i(a,s)})}},A=function(t){this.showHelpDialog=function(t,n){return e.Deferred(function(e){var t=n.find(\".note-help-dialog\");t.openModal(),e.resolve()}).promise()},this.show=function(e){var n=e.dialog(),i=e.editable();t.invoke(\"editor.saveRange\",i,!0),this.showHelpDialog(i,n).then(function(){t.invoke(\"editor.restoreRange\",i)})}},D=function(){var t=this.modules={editor:new C(this),toolbar:new w(this),statusbar:new N(this),popover:new P(this),handle:new L(this),fullscreen:new S(this),codeview:new I(this),dragAndDrop:new M(this),clipboard:new R(this),linkDialog:new E(this),imageDialog:new H(this),helpDialog:new A(this)};this.invoke=function(){var e=s.head(s.from(arguments)),t=s.tail(s.from(arguments)),n=e.split(\".\"),i=n.length>1,o=i&&s.head(n),r=i?s.last(n):s.head(n),a=this.getModule(o),l=a[r];return l&&l.apply(a,t)},this.getModule=function(e){return this.modules[e]||this.modules.editor};var n=this.bindCustomEvent=function(e,t,n){return function(){var i=t[a.namespaceToCamel(n,\"on\")];return i&&i.apply(e[0],arguments),e.trigger(\"materialnote.\"+n,arguments)}};this.insertImages=function(i,o){var r=i.editor(),a=i.editable(),s=i.holder(),l=a.data(\"callbacks\"),d=r.data(\"options\");l.onImageUpload?n(s,l,\"image.upload\")(o):e.each(o,function(e,i){var o=i.name;d.maximumImageFileSize&&d.maximumImageFileSize<i.size?n(s,l,\"image.upload.error\")(d.langInfo.image.maximumFileSizeError):h.readFileAsDataURL(i).then(function(e){t.editor.insertImage(a,e,o)}).fail(function(){n(s,l,\"image.upload.error\")(d.langInfo.image.maximumFileSizeError)})})};var i={showLinkDialog:function(e){t.linkDialog.show(e)},showImageDialog:function(e){t.imageDialog.show(e)},showHelpDialog:function(e){t.helpDialog.show(e)},fullscreen:function(e){t.fullscreen.toggle(e)},codeview:function(e){t.codeview.toggle(e)}},o=function(e){c.isImg(e.target)&&e.preventDefault()},l=function(e){var n=c.makeLayoutInfo(e.currentTarget||e.target);t.editor.removeBogus(n.editable()),d(e)},d=function(e){setTimeout(function(){var n=c.makeLayoutInfo(e.currentTarget||e.target),i=t.editor.currentStyle(e.target);if(i){var o=n.editor().data(\"options\").airMode;o||t.toolbar.update(n.toolbar(),i),t.popover.update(n.popover(),i,o),t.handle.update(n.handle(),i,o)}},0)},u=function(e){var n=c.makeLayoutInfo(e.currentTarget||e.target);t.popover.hide(n.popover()),t.handle.hide(n.handle())},f=function(t){var n=e(t.target).closest(\"[data-event]\");n.length&&t.preventDefault()},g=function(n){var o=e(n.target).closest(\"[data-event]\");if(o.length){var r,a=o.attr(\"data-event\"),l=o.attr(\"data-value\"),u=o.attr(\"data-hide\"),f=c.makeLayoutInfo(n.target);if(-1!==e.inArray(a,[\"resize\",\"floatMe\",\"removeMedia\",\"imageShape\",\"imageClass\"])){var h=f.handle().find(\".note-control-selection\");r=e(h.data(\"target\"))}if(u&&o.parents(\".popover\").hide(),e.isFunction(e.materialnote.pluginEvents[a]))e.materialnote.pluginEvents[a](n,t.editor,f,l);else if(t.editor[a]){var p=f.editable();p.focus(),t.editor[a](p,l,r),n.preventDefault()}else i[a]&&(i[a].call(this,f),n.preventDefault());if(-1!==e.inArray(a,[\"backColor\",\"foreColor\"])){var v=f.editor().data(\"options\",v),g=v.airMode?t.popover:t.toolbar;g.updateRecentColor(s.head(o),a,l)}d(n)}},m=26,b=function(t,n){var i,o=e(t.target.parentNode),r=o.parent(),a=o.next(),s=o.find(\".note-dimension-picker-mousecatcher\"),l=o.find(\".note-dimension-picker-highlighted\"),d=o.find(\".note-dimension-picker-unhighlighted\"),c=r.find(\"[id$=\\'-hoverable\\']\"),u=r.find(\"[id$=\\'-bordered\\']\"),f=r.find(\"[id$=\\'-striped\\']\"),h=r.find(\"[id$=\\'-responsive\\']\");if(void 0===t.offsetX){var p=e(t.target).offset();i={x:t.pageX-p.left,y:t.pageY-p.top}}else i={x:t.offsetX,y:t.offsetY};var v={c:Math.ceil(i.x/m)||1,r:Math.ceil(i.y/m)||1},g=[];c.is(\":checked\")&&g.push(\"hoverable\"),u.is(\":checked\")&&g.push(\"bordered\"),f.is(\":checked\")&&g.push(\"striped\"),h.is(\":checked\")&&g.push(\"responsive-table\"),l.css({width:v.c*m+\"px\",height:v.r*m+\"px\"}),s.attr(\"data-value\",v.c+\"x\"+v.r+\"x\"+g.join(\"x\")),d.css({width:n.insertTableMaxSize*m+\"px\"}),3<v.r&&v.r<n.insertTableMaxSize.row&&d.css({height:(v.r+1)*m+\"px\"}),a.html(v.c+\" x \"+v.r)};this.bindKeyMap=function(n,o){var r=n.editor(),a=n.editable();a.on(\"keydown\",function(s){var l=[];s.metaKey&&l.push(\"CMD\"),s.ctrlKey&&!s.altKey&&l.push(\"CTRL\"),s.shiftKey&&l.push(\"SHIFT\");var d=p.nameFromCode[s.keyCode];d&&l.push(d);var c,u=l.join(\"+\"),f=o[u];if(f){if(c=e.materialnote.pluginEvents[u],e.isFunction(c)&&c(s,t.editor,n))return!1;c=e.materialnote.pluginEvents[f],e.isFunction(c)?c(s,t.editor,n):t.editor[f]?(t.editor[f](a,r.data(\"options\")),s.preventDefault()):i[f]&&(i[f].call(this,n),s.preventDefault())}else p.isEdit(s.keyCode)&&t.editor.afterCommand(a)})},this.attach=function(e,n){n.shortcuts&&this.bindKeyMap(e,n.keyMap[r.isMac?\"mac\":\"pc\"]),e.editable().on(\"mousedown\",o),e.editable().on(\"keyup mouseup\",l),e.editable().on(\"scroll\",u),t.clipboard.attach(e,n),t.handle.attach(e,n),e.popover().on(\"click\",g),e.popover().on(\"mousedown\",f),t.dragAndDrop.attach(e,n),n.airMode||(e.toolbar().on(\"click\",g),e.toolbar().on(\"mousedown\",f),t.statusbar.attach(e,n));var i=n.airMode?e.popover():e.toolbar(),a=i.find(\".note-dimension-picker-mousecatcher\");a.css({width:n.insertTableMaxSize.col*m+\"px\",height:n.insertTableMaxSize.row*m+\"px\"}).on(\"mousemove\",function(e){b(e,n)}),e.editor().data(\"options\",n),r.isMSIE||setTimeout(function(){document.execCommand(\"styleWithCSS\",0,n.styleWithSpan)},0);var d=new v(e.editable());e.editable().data(\"NoteHistory\",d),e.editable().data(\"callbacks\",{onInit:n.onInit,onFocus:n.onFocus,onBlur:n.onBlur,onKeydown:n.onKeydown,onKeyup:n.onKeyup,onMousedown:n.onMousedown,onEnter:n.onEnter,onPaste:n.onPaste,onBeforeCommand:n.onBeforeCommand,onChange:n.onChange,onImageUpload:n.onImageUpload,onImageUploadError:n.onImageUploadError,onMediaDelete:n.onMediaDelete,onToolbarClick:n.onToolbarClick}),c.isTextarea(s.head(e.holder()))&&e.holder().closest(\"form\").submit(function(){e.holder().val(e.holder().code())})},this.attachCustomEvent=function(t,i){var o=t.holder(),a=t.editable(),l=a.data(\"callbacks\");a.focus(n(o,l,\"focus\")),a.blur(n(o,l,\"blur\")),a.keydown(function(e){e.keyCode===p.code.ENTER&&n(o,l,\"enter\").call(this,e),n(o,l,\"keydown\").call(this,e)}),a.keyup(n(o,l,\"keyup\")),a.on(\"mousedown\",n(o,l,\"mousedown\")),a.on(\"mouseup\",n(o,l,\"mouseup\")),a.on(\"scroll\",n(o,l,\"scroll\")),a.on(\"paste\",n(o,l,\"paste\"));var d=r.isMSIE?\"DOMCharacterDataModified DOMSubtreeModified DOMNodeInserted\":\"input\";a.on(d,function(){n(o,l,\"change\")(a.html(),a)}),i.airMode||(t.toolbar().click(n(o,l,\"toolbar.click\")),t.popover().click(n(o,l,\"popover.click\"))),c.isTextarea(s.head(o))&&o.closest(\"form\").submit(function(e){n(o,l,\"submit\").call(this,e,o.code())}),n(o,l,\"init\")(t);for(var u=0,f=e.materialnote.plugins.length;f>u;u++)e.isFunction(e.materialnote.plugins[u].init)&&e.materialnote.plugins[u].init(t)},this.detach=function(e,t){e.holder().off(),e.editable().off(),e.popover().off(),e.handle().off(),e.dialog().off(),t.airMode||(e.dropzone().off(),e.toolbar().off(),e.statusbar().off())}},F=function(){var t=function(e,t){var n=t.event,i=t.value,o=t.title,r=t.style,a=t.btnClassName,s=t.className,l=t.dropdown,d=t.hide;if(l){var c=[\\'<div class=\"btn-group\\',(s?\" \"+s:\"\")+\\'\">\\',\\'<button class=\"waves-effect waves-light btn dropdown \\'+(a?a:\"\")+\\'\"\\',o?\\' title=\"\\'+o+\\'\"\\':\"\",n?\\' data-event=\"\\'+n+\\'\"\\':\"\",i?\" data-value=\\'\"+i+\"\\'\":\"\",d?\" data-hide=\\'\"+d+\"\\'\":\"\",\\'><i class=\"material-icons left\">arrow_drop_down<\\/i>\\'+e+\"<\\/button>\",l,\"<\\/div>\"].join(\"\");return c}var u=[\\'<div class=\"waves-effect waves-light btn\\',(s?\" \"+s:\"\")+\\'\"\\',o?\\' title=\"\\'+o+\\'\"\\':\"\",r?\\' style=\"\\'+r+\\'\"\\':\"\",n?\\' data-event=\"\\'+n+\\'\"\\':\"\",i?\" data-value=\\'\"+i+\"\\'\":\"\",d?\" data-hide=\\'\"+d+\"\\'\":\"\",\\' tabindex=\"-1\">\\'+e+\"<\\/div>\"].join(\"\");return u},n=function(e,n){var i=\\'<i class=\"material-icons\">\\'+e+\"<\\/i>\";return t(i,n)},i=function(t,n){var i=e(\\'<div class=\"\\'+t+\\' popover bottom in\" style=\"display: none;\"><div class=\"arrow\"><\\/div><div class=\"popover-content\"><\\/div><\\/div>\\');return i.find(\".popover-content\").append(n),i},o=function(e,t,n,i){var o=[\\'<div class=\"\\'+e+\\' modal modal-fixed-footer\">\\',\\'<div class=\"modal-content\">\\',t?\"<h4>\"+t+\"<\\/h4>\":\"\",\"<p>\"+n+\"<\\/p>\",\"<\\/div>\",i?\\'<div class=\"modal-footer\">\\'+i+\"<\\/div>\":\"\",\"<\\/div>\"].join(\"\");return o},s={picture:function(e,t){return n(t.iconPrefix+t.icons.image.image,{event:\"showImageDialog\",title:e.image.image,hide:!0})},link:function(e,t){return n(t.iconPrefix+t.icons.link.link,{event:\"showLinkDialog\",title:e.link.link,hide:!0})},table:function(e,t){var i=\\'<ul class=\"note-table dropdown-menu\"><div class=\"row\"><div class=\"col s6 preventDropClose\"><input type=\"checkbox\" id=\"\\'+materialUniqueId+\\'-bordered\" checked=\"checked\" /><label for=\"\\'+materialUniqueId+\\'-bordered\">\\'+e.table.bordered+\\'<\\/label><\\/div><div class=\"col s6 preventDropClose\"><input type=\"checkbox\" id=\"\\'+materialUniqueId+\\'-striped\" checked=\"checked\" /><label for=\"\\'+materialUniqueId+\\'-striped\">\\'+e.table.striped+\\'<\\/label><\\/div><\\/div><div class=\"row\"><div class=\"col s6 preventDropClose\"><input type=\"checkbox\" id=\"\\'+materialUniqueId+\\'-hoverable\" checked=\"checked\" /><label for=\"\\'+materialUniqueId+\\'-hoverable\">\\'+e.table.hoverable+\\'<\\/label><\\/div><div class=\"col s6 preventDropClose\"><input type=\"checkbox\" id=\"\\'+materialUniqueId+\\'-responsive\" checked=\"checked\" /><label for=\"\\'+materialUniqueId+\\'-responsive\">\\'+e.table.responsive+\\'<\\/label><\\/div><\\/div><div class=\"note-dimension-picker\"><div class=\"note-dimension-picker-mousecatcher\" data-event=\"insertTable\" data-value=\"1x1\"><\\/div><div class=\"note-dimension-picker-highlighted\"><\\/div><div class=\"note-dimension-picker-unhighlighted\"><\\/div><\\/div><div class=\"note-dimension-display\"> 1 x 1 <\\/div><\\/ul>\\';\\r\\n    return n(t.iconPrefix+t.icons.table.table,{title:e.table.table,dropdown:i})},style:function(e,t){var i=t.styleTags.reduce(function(t,n){var i=e.style[\"p\"===n?\"normal\":n];return t+\\'<li><div data-event=\"formatBlock\" data-value=\"\\'+n+\\'\">\\'+(\"p\"===n||\"pre\"===n?i:\"<\"+n+\">\"+i+\"<\\/\"+n+\">\")+\"<\\/div><\\/li>\"},\"\");return n(t.iconPrefix+t.icons.style.style,{title:e.style.style,dropdown:\\'<ul class=\"dropdown-menu largeDropdown\">\\'+i+\"<\\/ul>\"})},fontname:function(e,n){var i=[],o=n.fontNames.reduce(function(e,t){return r.isFontInstalled(t)||-1!==n.fontNamesIgnoreCheck.indexOf(t)?(i.push(t),e+\\'<li><div data-event=\"fontName\" href=\"#\" data-value=\"\\'+t+\\'\" style=\"font-family:\\\\\\'\\'+t+\\'\\\\\\'\"><i class=\"material-icons tiny transparent\">\\'+n.iconPrefix+n.icons.misc.check+\"<\\/i> \"+t+\"<\\/div><\\/li>\"):e},\"\"),a=r.isFontInstalled(n.defaultFontName),s=a?n.defaultFontName:i[0],l=\\'<div class=\"note-current-fontname\">\\'+s+\"<\\/div>\";return t(l,{title:e.font.name,className:\"note-fontname\",dropdown:\\'<ul class=\"dropdown-menu note-check\">\\'+o+\"<\\/ul>\"})},fontsize:function(e,n){var i=n.fontSizes.reduce(function(e,t){return e+\\'<li><div data-event=\"fontSize\" href=\"#\" data-value';\n  builder.string += '=\"\\'+t+\\'\"><i class=\"material-icons tiny transparent\">\\'+n.iconPrefix+n.icons.misc.check+\"<\\/i> \"+t+\"<\\/div><\\/li>\"},\"\"),o=\\'<span class=\"note-current-fontsize\">15<\\/span>\\';return t(o,{title:e.font.size,className:\"note-fontsize\",dropdown:\\'<ul class=\"dropdown-menu note-check\">\\'+i+\"<\\/ul>\"})},color:function(e,n){var i=\\'<i class=\"material-icons\">\\'+n.icons.color.recent+\"<\\/i>\",o=t(i,{className:\"note-recent-color\",title:e.color.recent,style:\"color: \"+n.defaultTextColor+\"; background-color: \"+n.defaultBackColor+\";\",event:\"color\",value:\\'{\"backColor\": \"\\'+n.defaultBackColor+\\'\"}\\'}),r=\\'<ul id=\"colors\" class=\"dropdown-menu\"><li><div class=\"col s12\"><ul class=\"tabs\"><li class=\"tab\"><a href=\"#\\'+materialUniqueId+\\'-foreColor\" class=\"active\">\\'+e.color.foreground+\\'<\\/a><\\/li><li class=\"tab\"><a href=\"#\\'+materialUniqueId+\\'-backColor\">\\'+e.color.background+\\'<\\/a><\\/li><\\/ul><\\/div><div class=\"col s12 colorTable\"><div id=\"\\'+materialUniqueId+\\'-foreColor\"><div class=\"note-color-reset waves-effect waves-light btn\" data-event=\"foreColor\" data-value=\"\\'+n.defaultTextColor+\\'\" title=\"\\'+e.color.reset+\\'\">\\'+e.color.resetToDefault+\\'<\\/div><div class=\"colorName\"><\\/div><div class=\"note-color-palette\" data-target-event=\"foreColor\"><\\/div><\\/div><div id=\"\\'+materialUniqueId+\\'-backColor\"><div class=\"note-color-reset waves-effect waves-light btn\" data-event=\"backColor\" data-value=\"\\'+n.defaultBackColor+\\'\" title=\"\\'+e.color.transparent+\\'\">\\'+e.color.setTransparent+\\'<\\/div><div class=\"colorName\"><\\/div><div class=\"note-color-palette\" data-target-event=\"backColor\"><\\/div><\\/div><\\/div><\\/li><\\/ul>\\',a=t(\"\",{title:e.color.more,className:\"closeLeft\",dropdown:r});return a+o},bold:function(e,t){return n(t.iconPrefix+t.icons.font.bold,{event:\"bold\",title:e.font.bold})},italic:function(e,t){return n(t.iconPrefix+t.icons.font.italic,{event:\"italic\",title:e.font.italic})},underline:function(e,t){return n(t.iconPrefix+t.icons.font.underline,{event:\"underline\",title:e.font.underline})},strikethrough:function(e,t){return n(t.iconPrefix+t.icons.font.strikethrough,{event:\"strikethrough\",title:e.font.strikethrough})},superscript:function(e,t){return n(t.iconPrefix+t.icons.font.superscript,{event:\"superscript\",title:e.font.superscript})},subscript:function(e,t){return n(t.iconPrefix+t.icons.font.subscript,{event:\"subscript\",title:e.font.subscript})},clear:function(e,t){return n(t.iconPrefix+t.icons.font.clear,{event:\"removeFormat\",title:e.font.clear})},ul:function(e,t){return n(t.iconPrefix+t.icons.lists.unordered,{event:\"insertUnorderedList\",title:e.lists.unordered})},ol:function(e,t){return n(t.iconPrefix+t.icons.lists.ordered,{event:\"insertOrderedList\",title:e.lists.ordered})},leftButton:function(e,t){return n(t.iconPrefix+t.icons.paragraph.left,{title:e.paragraph.left,event:\"justifyLeft\"})},centerButton:function(e,t){return n(t.iconPrefix+t.icons.paragraph.center,{title:e.paragraph.center,event:\"justifyCenter\"})},rightButton:function(e,t){return n(t.iconPrefix+t.icons.paragraph.right,{title:e.paragraph.right,event:\"justifyRight\"})},justifyButton:function(e,t){return n(t.iconPrefix+t.icons.paragraph.justify,{title:e.paragraph.justify,event:\"justifyFull\"})},outdentButton:function(e,t){return n(t.iconPrefix+t.icons.paragraph.outdent,{title:e.paragraph.outdent,event:\"outdent\"})},indentButton:function(e,t){return n(t.iconPrefix+t.icons.paragraph.indent,{title:e.paragraph.indent,event:\"indent\"})},paragraph:function(e,t){var i=n(t.iconPrefix+t.icons.paragraph.left,{title:e.paragraph.left,event:\"justifyLeft\"}),o=n(t.iconPrefix+t.icons.paragraph.center,{title:e.paragraph.center,event:\"justifyCenter\"}),r=n(t.iconPrefix+t.icons.paragraph.right,{title:e.paragraph.right,event:\"justifyRight\"}),a=n(t.iconPrefix+t.icons.paragraph.justify,{title:e.paragraph.justify,event:\"justifyFull\"}),s=n(t.iconPrefix+t.icons.paragraph.outdent,{title:e.paragraph.outdent,event:\"outdent\"}),l=n(t.iconPrefix+t.icons.paragraph.indent,{title:e.paragraph.indent,event:\"indent\"}),d=\\'<ul class=\"dropdown-menu\"><div class=\"note-align btn-group\">\\'+i+o+r+a+\\'<\\/div><div class=\"note-list btn-group\">\\'+l+s+\"<\\/div><\\/ul>\";return n(t.iconPrefix+t.icons.paragraph.paragraph,{title:e.paragraph.paragraph,dropdown:d})},lineheight:function(e,t){var i=t.lineHeights.reduce(function(e,n){return e+\\'<li><div data-event=\"lineHeight\" href=\"#\" data-value=\"\\'+parseFloat(n)+\\'\"><i class=\"material-icons tiny transparent\">\\'+t.iconPrefix+t.icons.misc.check+\"<\\/i> \"+n+\"<\\/div><\\/li>\"},\"\");return n(t.iconPrefix+t.icons.font.height,{title:e.font.height,className:\"note-height\",dropdown:\\'<ul class=\"dropdown-menu note-check\">\\'+i+\"<\\/ul>\"})},help:function(e,t){return n(t.iconPrefix+t.icons.options.help,{event:\"showHelpDialog\",title:e.options.help,hide:!0})},fullscreen:function(e,t){return n(t.iconPrefix+t.icons.options.fullscreen,{event:\"fullscreen\",title:e.options.fullscreen})},codeview:function(e,t){return n(t.iconPrefix+t.icons.options.codeview,{event:\"codeview\",title:e.options.codeview})},undo:function(e,t){return n(t.iconPrefix+t.icons.history.undo,{event:\"undo\",title:e.history.undo})},redo:function(e,t){return n(t.iconPrefix+t.icons.history.redo,{event:\"redo\",title:e.history.redo})},hr:function(e,t){return n(t.iconPrefix+t.icons.hr.insert,{event:\"insertHorizontalRule\",title:e.hr.insert})}},l=function(o,r){var a=function(){var e=n(r.iconPrefix+r.icons.link.edit,{title:o.link.edit,event:\"showLinkDialog\",hide:!0}),t=n(r.iconPrefix+r.icons.link.unlink,{title:o.link.unlink,event:\"unlink\"}),a=\\'<a href=\"http://www.google.com\" target=\"_blank\">www.google.com<\\/a>&nbsp;&nbsp;<div class=\"note-insert btn-group\">\\'+e+t+\"<\\/div>\";return i(\"note-link-popover\",a)},l=function(){var e=(t(\\'<span class=\"note-fontsize-10\">100%<\\/span>\\',{title:o.image.resizeFull,event:\"resize\",value:\"1\"}),t(\\'<span class=\"note-fontsize-10\">50%<\\/span>\\',{title:o.image.resizeHalf,event:\"resize\",value:\"0.5\"}),t(\\'<span class=\"note-fontsize-10\">25%<\\/span>\\',{title:o.image.resizeQuarter,event:\"resize\",value:\"0.25\"}),n(r.iconPrefix+r.icons.image.floatLeft,{title:o.image.floatLeft,event:\"floatMe\",value:\"left\"})),a=n(r.iconPrefix+r.icons.image.floatRight,{title:o.image.floatRight,event:\"floatMe\",value:\"right\"}),s=n(r.iconPrefix+r.icons.image.floatNone,{title:o.image.floatNone,event:\"floatMe\",value:\"none\"}),l=n(r.iconPrefix+r.icons.image.shapeRounded,{title:o.image.shapeRounded,event:\"imageClass\",value:\"img-rounded\"}),d=n(r.iconPrefix+r.icons.image.shapeCircle,{title:o.image.shapeCircle,event:\"imageClass\",value:\"img-circle\"}),c=n(r.iconPrefix+r.icons.image.shapeThumbnail,{title:o.image.shapeThumbnail,event:\"imageClass\",value:\"img-thumbnail\"}),u=n(r.iconPrefix+r.icons.image.bordered,{title:o.image.bordered,event:\"imageClass\",value:\"img-bordered\"}),f=n(r.iconPrefix+r.icons.image.shapeNone,{title:o.image.shapeNone,event:\"imageShape\",value:\"\"}),h=n(r.iconPrefix+r.icons.image.remove,{title:o.image.remove,event:\"removeMedia\",value:\"none\"}),p=\\'<div class=\"btn-group\">\\'+e+a+s+\\'<\\/div><div class=\"btn-group\">\\'+l+d+c+u+f+\\'<\\/div><div class=\"btn-group\">\\'+h+\"<\\/div>\";return i(\"note-image-popover\",p)},d=function(){for(var t=e(\"<div />\"),n=0,a=r.airPopover.length;a>n;n++){for(var l=r.airPopover[n],d=e(\\'<div class=\"note-\\'+l[0]+\\' btn-group\">\\'),c=0,u=l[1].length;u>c;c++){var f=e(s[l[1][c]](o,r));f.attr(\"data-name\",l[1][c]),d.append(f)}t.append(d)}return i(\"note-air-popover\",t.children())},c=e(\\'<div class=\"note-popover\" />\\');return c.append(a()),c.append(l()),r.airMode&&c.append(d()),c},d=function(){return\\'<div class=\"note-handle\"><div class=\"note-control-selection\"><div class=\"note-control-selection-bg\"><\\/div><div class=\"note-control-sizing note-control-se\"><\\/div><div class=\"note-control-selection-info\"><\\/div><\\/div><\\/div>\\'},u=function(e,t){var n=[];for(var i in t)t.hasOwnProperty(i)&&n.push(\"<tr><td>\"+t[i].kbd+\"<\\/td><td>\"+t[i].text+\"<\\/td><\\/tr>\");return\"<thead><tr><th>\"+e+\"<\\/th><th>(keys)<\\/th><\\/tr><\\/thead><tbody>\"+n.join(\"\")+\"<\\/tbody>\"},f=function(e){var t=[{kbd:\"\\u2318 + B\",text:e.font.bold},{kbd:\"\\u2318 + I\",text:e.font.italic},{kbd:\"\\u2318 + U\",text:e.font.underline},{kbd:\"\\u2318 + \\\\\\\\\",text:e.font.clear}];return u(e.shortcut.textFormatting,t)},h=function(e){var t=[{kbd:\"\\u2318 + Z\",text:e.history.undo},{kbd:\"\\u2318 + \\u21E7 + Z\",text:e.history.redo},{kbd:\"\\u2318 + ]\",text:e.paragraph.indent},{kbd:\"\\u2318 + [\",text:e.paragraph.outdent},{kbd:\"\\u2318 + ENTER\",text:e.hr.insert}];return u(e.shortcut.action,t)},p=function(e){var t=[{kbd:\"\\u2318 + \\u21E7 + L\",text:e.paragraph.left},{kbd:\"\\u2318 + \\u21E7 + E\",text:e.paragraph.center},{kbd:\"\\u2318 + \\u21E7 + R\",text:e.paragraph.right},{kbd:\"\\u2318 + \\u21E7 + J\",text:e.paragraph.justify},{kbd:\"\\u2318 + \\u21E7 + NUM7\",text:e.lists.ordered},{kbd:\"\\u2318 + \\u21E7 + NUM8\",text:e.lists.unordered}];return u(e.shortcut.paragraphFormatting,t)},v=function(e){var t=[{kbd:\"\\u2318 + NUM0\",text:e.style.normal},{kbd:\"\\u2318 + NUM1\",text:e.style.h1},{kbd:\"\\u2318 + NUM2\",text:e.style.h2},{kbd:\"\\u2318 + NUM3\",text:e.style.h3},{kbd:\"\\u2318 + NUM4\",text:e.style.h4},{kbd:\"\\u2318 + NUM5\",text:e.style.h5},{kbd:\"\\u2318 + NUM6\",text:e.style.h6}];return u(e.shortcut.documentStyle,t)},g=function(e,t){var n=[\\'<table class=\"striped hoverable\">\\'+h(e,t)+\"<\\/table>\",\\'<table class=\"striped hoverable\">\\'+v(e,t)+\"<\\/table>\",\\'<table class=\"striped hoverable\">\\'+f(e,t)+\"<\\/table>\",\\'<table class=\"striped hoverable\">\\'+p(e,t)+\"<\\/table>\"].join(\"<br>\");return t.extraKeys,n},m=function(e){return e.replace(/\\u2318/g,\"Ctrl\").replace(/\\u21E7/g,\"Shift\")},b={image:function(e,t){var n=\"\";if(t.maximumImageFileSize){var i=Math.floor(Math.log(t.maximumImageFileSize)/Math.log(1024)),r=1*(t.maximumImageFileSize/Math.pow(1024,i)).toFixed(2)+\" \"+\" KMGTP\"[i]+\"B\";n=\"<small>\"+e.image.maximumFileSize+\" : \"+r+\"<\\/small>\"}var a=\\'<div class=\"row\"><div class=\"col s12\"><div class=\"file-field input-field\"><div class=\"btn\"><span>\\'+e.image.image+\\'<\\/span><input class=\"note-image-input\" name=\"files\" type=\"file\" /><\\/div><div class=\"file-path-wrapper\"><input class=\"file-path\" type=\"text\" /><\\/div><\\/div><\\/div><\\/div><div class=\"row\"><div class=\"input-field col s12\"><input class=\"note-image-url\" type=\"text\" /><label>\\'+e.image.url+\"<\\/label><\\/div><\\/div>\",s=\\'<button href=\"#\" class=\"waves-effect waves-light btn note-image-btn disabled\" disabled>\\'+e.image.insert+\\'<\\/button><button class=\"waves-effect waves-light btn btnClose\">\\'+e.shortcut.close+\"<\\/button>\";return o(\"note-image-dialog\",e.image.insert,a,s)},link:function(e,t){var n=\\'<div class=\"row\"><div class=\"input-field col s12\"><input class=\"note-link-text\" type=\"text\" /><label>\\'+e.link.textToDisplay+\\'<\\/label><\\/div><\\/div><div class=\"row\"><div class=\"input-field col s12\"><input class=\"note-link-url\" type=\"text\" value=\"http://\" /><label class=\"active\">\\'+e.link.url+\"<\\/label><\\/div><\\/div>\"+(t.disableLinkTarget?\"\":\\'<div class=\"row\"><div class=\"col s12\"><input type=\"checkbox\" id=\"\\'+materialUniqueId+\\'-noteInsertLinkNewWindow\" checked=\"checked\" /><label for=\"\\'+materialUniqueId+\\'-noteInsertLinkNewWindow\">\\'+e.link.openInNewWindow+\"<\\/label><\\/div><\\/div>\"),i=\\'<button href=\"#\" class=\"waves-effect waves-light btn note-link-btn disabled\" disabled>\\'+e.link.insert+\\'<\\/button><button class=\"waves-effect waves-light btn btnClose\">\\'+e.shortcut.close+\"<\\/button>\";return o(\"note-link-dialog\",e.link.insert,n,i)},help:function(e,t){var n=r.isMac?g(e,t):m(g(e,t)),i=\\'<button href=\"#\" class=\"waves-effect waves-light btn modal-close\">\\'+e.shortcut.close+\"<\\/button>\";return o(\"note-help-dialog\",e.shortcut.shortcuts,n,i)}},k=function(t,n){var i=\"\";return e.each(b,function(e,o){i+=o(t,n)}),\\'<div class=\"note-dialog\">\\'+i+\"<\\/div>\"},y=function(){return\\'<div class=\"note-resizebar\"><div class=\"note-icon-bar\"><\\/div><div class=\"note-icon-bar\"><\\/div><div class=\"note-icon-bar\"><\\/div><\\/div>\\'},C=function(e){return r.isMac&&(e=e.replace(\"CMD\",\"\\u2318\").replace(\"SHIFT\",\"\\u21E7\")),e.replace(\"BACKSLASH\",\"\\\\\\\\\").replace(\"SLASH\",\"/\").replace(\"LEFTBRACKET\",\"[\").replace(\"RIGHTBRACKET\",\"]\")},x=function(t,n,i){e(document).ready(function(){var i=a.invertObject(n),o=t.find(\".btn\");o.each(function(t,n){var o=e(n),r=i[o.data(\"event\")],a=o.attr(\"title\");r&&o.attr(\"data-tooltip\",function(t,n){return a=a+\" (\"+C(r)+\")\",e(this).removeAttr(\"title\"),a}),o.attr(\"data-position\",\"bottom\"),o.attr(\"data-tooltip\",a),o.removeAttr(\"title\")}).ckTooltip({container:t,position:\"top\",delay:30})})},w=function(t,n){var i=n.colors,o=n.colorTitles;t.find(\".note-color-palette\").each(function(){for(var t=e(this),n=t.attr(\"data-target-event\"),r=[],a=0,s=i.length;s>a;a++){for(var l=i[a],d=o[a],c=[],u=0,f=l.length;f>u;u++){var h=l[u],p=d[u];c.push([\\'<button type=\"button\" class=\"note-color-btn\" style=\"background-color:\\',h,\\';\" data-event=\"\\',n,\\'\" data-value=\"\\',h,\\'\" data-description=\"\\',p,\\'\" data-toggle=\"button\" tabindex=\"-1\"><\\/button>\\'].join(\"\"))}r.push(\\'<div class=\"note-color-row\">\\'+c.join(\"\")+\"<\\/div>\")}t.html(r.join(\"\")),t.find(\"button\").mouseenter(function(){t.siblings(\".colorName\").html(e(this).data(\"description\"))}),t.mouseleave(function(){e(this).siblings(\".colorName\").html(\"\")})})};this.createLayoutByAirMode=function(t,n){var i=n.langInfo,o=n.keyMap[r.isMac?\"mac\":\"pc\"],s=a.uniqueId();t.addClass(\"note-air-editor note-editable\"),t.attr({id:\"note-editor-\"+s,contentEditable:!0});var c=document.body,u=e(l(i,n));u.addClass(\"note-air-layout\"),u.attr(\"id\",\"note-popover-\"+s),u.appendTo(c),x(u,o),w(u,n);var f=e(d());f.addClass(\"note-air-layout\"),f.attr(\"id\",\"note-handle-\"+s),f.appendTo(c);var h=e(k(i,n));h.addClass(\"note-air-layout\"),h.attr(\"id\",\"note-dialog-\"+s),h.find(\"button.close, a.modal-close\").click(function(){e(this).closest(\".modal\").closeModal()}),h.appendTo(c)},this.createLayoutByFrame=function(t,n){function i(){e(window).scroll(function(){var t=a.hasClass(\"fullscreen\");if(t)return!1;var i,o,r,s,l,d,c,u,f,h=a.children(\".note-toolbar\"),p=(h.outerHeight(),a.children(\".note-editable\")),v=p.outerHeight();a.width;f=e(\".\"+n.otherStaticBarClass).outerHeight(),f||(f=0),c=e(document).scrollTop(),i=h.offset().top,o=a.offset().top,r=o+v,s=i-f,d=r-f,l=o-f,c>s&&d>c?(u=c-a.offset().top+f,h.css({top:u+\"px\",\"z-index\":2e3})):i>c&&d>c&&(h.css({top:0,\"z-index\":1052}),c>l&&(u=c-a.offset().top+f,h.css({top:u+\"px\",\"z-index\":2e3})))})}var o=n.langInfo,a=e(\\'<div class=\"note-editor\"><\\/div>\\');n.width&&a.width(n.width),n.height>0&&e(\\'<div class=\"note-statusbar\">\\'+(n.disableResizeEditor?\"\":y())+\"<\\/div>\").prependTo(a);var u=!t.is(\":disabled\"),f=e(\\'<div class=\"note-editable\" contentEditable=\"\\'+u+\\'\"><\\/div>\\').prependTo(a);n.height&&f.height(n.height),n.direction&&f.attr(\"dir\",n.direction);var h=t.attr(\"placeholder\")||n.placeholder;h&&f.attr(\"data-placeholder\",h),f.html(c.html(t)),e(\\'<textarea class=\"note-codable\"><\\/textarea>\\').prependTo(a);for(var p=e(\\'<div class=\"note-toolbar btn-toolbar\" />\\'),v=0,g=n.toolbar.length;g>v;v++){for(var m=n.toolbar[v][0],b=n.toolbar[v][1],C=e(\\'<div class=\"note-\\'+m+\\' btn-group\" />\\'),T=0,N=b.length;N>T;T++){var P=s[b[T]];if(e.isFunction(P)){var L=e(P(o,n));L.attr(\"data-name\",b[T]),C.append(L)}}p.append(C)}p.prependTo(a);var S=n.keyMap[r.isMac?\"mac\":\"pc\"];w(p,n),x(p,S,\"bottom\"),n.followingToolbar&&i();var I=e(l(o,n)).prependTo(a);w(I,n),x(I,S),e(d()).prependTo(a);var M=e(k(o,n)).prependTo(a);M.find(\"button.close, a.modal-close\").click(function(){e(this).closest(\".modal\").closeModal()}),e(\\'<div class=\"note-dropzone\"><div class=\"note-dropzone-message\"><\\/div><\\/div>\\').prependTo(a),a.insertAfter(t),t.hide()},this.hasNoteEditor=function(e){return this.noteEditorFromHolder(e).length>0},this.noteEditorFromHolder=function(t){return t.hasClass(\"note-air-editor\")?t:t.next().hasClass(\"note-editor\")?t.next():e()},this.createLayout=function(e,t){t.airMode?this.createLayoutByAirMode(e,t):this.createLayoutByFrame(e,t)},this.layoutInfoFromHolder=function(e){var t=this.noteEditorFromHolder(e);if(t.length)return t.data(\"holder\",e),c.buildLayoutInfo(t)},this.removeLayout=function(e,t,n){n.airMode?(e.removeClass(\"note-air-editor note-editable\").removeAttr(\"id contentEditable\"),t.popover().remove(),t.handle().remove(),t.dialog().remove()):(e.html(t.editable().html()),t.editor().remove(),e.show())},this.getTemplate=function(){return{button:t,iconButton:n,dialog:o}},this.addButtonInfo=function(e,t){s[e]=t},this.addDialogInfo=function(e,t){b[e]=t}};e.materialnote=e.materialnote||{},e.extend(e.materialnote,f);var B=new F,U=new D;e.extend(e.materialnote,{renderer:B,eventHandler:U,core:{agent:r,list:s,dom:c,range:u},pluginEvents:{},plugins:[]}),e.materialnote.addPlugin=function(t){e.materialnote.plugins.push(t),t.buttons&&e.each(t.buttons,function(e,t){B.addButtonInfo(e,t)}),t.dialogs&&e.each(t.dialogs,function(e,t){B.addDialogInfo(e,t)}),t.events&&e.each(t.events,function(t,n){';\n  builder.string += 'e.materialnote.pluginEvents[t]=n}),t.langs&&e.each(t.langs,function(t,n){e.materialnote.lang[t]&&e.extend(e.materialnote.lang[t],n)}),t.options&&e.extend(e.materialnote.options,t.options)},e.fn.extend({materialnote:function(){var t=e.type(s.head(arguments)),n=\"string\"===t,i=\"object\"===t,o=i?s.head(arguments):{};if(o=e.extend({},e.materialnote.options,o),o.icons=e.extend({},e.materialnote.options.icons,o.icons),o.langInfo=e.extend(!0,{},e.materialnote.lang[\"en-US\"],e.materialnote.lang[o.lang]),!n&&i)for(var r=0,a=e.materialnote.plugins.length;a>r;r++){var l=e.materialnote.plugins[r];o.plugin[l.name]&&(e.materialnote.plugins[r]=e.extend(!0,l,o.plugin[l.name]))}this.each(function(t,n){materialUniqueId=e(n).attr(\"id\");var i=e(n);if(!B.hasNoteEditor(i)){B.createLayout(i,o);var r=B.layoutInfoFromHolder(i);i.data(\"layoutInfo\",r),U.attach(r,o),U.attachCustomEvent(r,o)}});var d=this.first();if(d.length){var c=B.layoutInfoFromHolder(d);if(n){var u=s.head(s.from(arguments)),f=s.tail(s.from(arguments)),h=[u,c.editable()].concat(f);return U.invoke.apply(U,h)}o.focus&&c.editable().focus()}return e(this).each(function(t,n){function i(t,i){var r=e(t).next(\"ul.dropdown-menu\");e(t).parent(\".btn-group\");r.slideUp(0),e(\".preventDropClose\").click(function(e){e.stopPropagation()}),e(t).click(function(o){var l=Math.round(e(t).parent(\".btn-group\").offset().left-a.offset().left),d=parseInt(r.css(\"border-left-width\")),c=n.outerWidth(),u=d;r.css({\"max-width\":c+\"px\"});var f=r.outerWidth(),h=f+l;h>=c&&(u=h-c,s||(u+=d)),r.css({left:\"-\"+u+\"px\"});var p=!0;r.is(\":visible\")&&(p=!1),i.find(\"ul.dropdown-menu\").slideUp(200),p&&r.slideToggle(200),o.stopPropagation()}),o.unbind().click(function(e){d=!1})}var o,r,a,s=!1;if(e(n).hasClass(\"note-air-editor\")){var l=e(this).attr(\"id\");l&&(l=l.substring(l.lastIndexOf(\"-\")+1,l.length)),n=e(\"#note-popover-\"+l).find(\".note-air-popover\"),r=n.find(\"ul.tabs\"),o=n.find(\"li.tab a\"),a=e(n).find(\".popover-content button.dropdown\"),s=!0}else n=e(n).next(\".note-editor\"),r=n.find(\"ul.tabs\"),o=n.find(\"li.tab a\"),a=e(n).find(\".note-toolbar button.dropdown\");var d=!0;e(window).click(function(e){d&&n.find(\"ul.dropdown-menu\").slideUp(200),d=!0,e.stopPropagation()}),a.each(function(e,t){i(t,n)}),r.tabs()}),this},code:function(t){if(void 0===t){var n=this.first();if(!n.length)return;var i=B.layoutInfoFromHolder(n),o=i&&i.editable();if(o&&o.length){var r=U.invoke(\"codeview.isActivated\",i);return U.invoke(\"codeview.sync\",i),r?i.codable().val():i.editable().html()}return c.value(n)}return this.each(function(n,i){var o=B.layoutInfoFromHolder(e(i)),r=o&&o.editable();r&&r.html(t)}),this},destroy:function(){return this.each(function(t,n){var i=e(n);if(B.hasNoteEditor(i)){var o=B.layoutInfoFromHolder(i),r=o.editor().data(\"options\");U.detach(o,r),B.removeLayout(i,o,r)}}),this}})}),function(e){e.fn.ckTooltip=function(t){var n=null,i=!1,o=null,r=5,a={delay:350};return t=e.extend(a,t),this.each(function(){var a=e(this),s=e(\"<span><\\/span>\").text(a.attr(\"data-tooltip\")),l=e(\"<div><\\/div>\");l.addClass(\"material-tooltip\").append(s),l.appendTo(e(\"body\"));var d=e(\"<div><\\/div>\").addClass(\"backdrop\");d.appendTo(l),d.css({top:0,left:0}),e.event.special.destroyed={remove:function(e){e.handler&&e.handler()}},e(this).bind(\"destroyed\",function(){l.remove()}),e(this).on({mouseenter:function(e){var s=a.data(\"delay\");s=void 0===s||\"\"===s?t.delay:s,n=0,o=setInterval(function(){if(n+=10,n>=s&&i===!1){i=!0,l.css({display:\"block\",left:\"0px\",top:\"0px\"}),l.children(\"span\").text(a.attr(\"data-tooltip\"));var e=a.outerWidth(),t=a.outerHeight(),o=a.attr(\"data-position\"),c=l.outerHeight(),u=l.outerWidth(),f=\"0px\",h=\"0px\",p=8;\"top\"===o?(l.css({top:a.offset().top-c-r,left:a.offset().left+e/2-u/2}),f=\"-10px\",d.css({borderRadius:\"14px 14px 0 0\",transformOrigin:\"50% 90%\",marginTop:c,marginLeft:u/2-d.width()/2})):\"left\"===o?(l.css({top:a.offset().top+t/2-c/2,left:a.offset().left-u-r}),h=\"-10px\",d.css({width:\"14px\",height:\"14px\",borderRadius:\"14px 0 0 14px\",transformOrigin:\"95% 50%\",marginTop:c/2,marginLeft:u})):\"right\"===o?(l.css({top:a.offset().top+t/2-c/2,left:a.offset().left+e+r}),h=\"+10px\",d.css({width:\"14px\",height:\"14px\",borderRadius:\"0 14px 14px 0\",transformOrigin:\"5% 50%\",marginTop:c/2,marginLeft:\"0px\"})):(l.css({top:a.offset().top+a.outerHeight()+r,left:a.offset().left+e/2-u/2}),f=\"+10px\",d.css({marginLeft:u/2-d.width()/2})),p=u/8,8>p&&(p=8),(\"right\"===o||\"left\"===o)&&(p=u/10,6>p&&(p=6)),l.velocity({opacity:1,marginTop:f,marginLeft:h},{duration:150,queue:!1}),d.css({display:\"block\"}).velocity({opacity:1},{duration:50,delay:0,queue:!1}).velocity({scale:p},{duration:150,delay:0,queue:!1,easing:\"easeInOutQuad\"})}},10)},mouseleave:function(){clearInterval(o),n=0,l.velocity({opacity:0,marginTop:0,marginLeft:0},{duration:150,queue:!1,delay:50}),d.velocity({opacity:0,scale:1},{duration:150,delay:50,queue:!1,complete:function(){d.css(\"display\",\"none\"),l.css(\"display\",\"none\"),i=!1}})}})})}}(jQuery);';\n  return builder.string;\n}\n;\nvar Lgwt_material_design_addins_client_richeditor_MaterialRichEditorClientBundle_1default_1InlineClientBundleGenerator$2_2_classLit = createForClass('gwt.material.design.addins.client.richeditor', 'MaterialRichEditorClientBundle_default_InlineClientBundleGenerator/2', 1728);\nfunction $clinit_MaterialRichEditorClientBundle_default_InlineClientBundleGenerator$richEditorCssInitializer(){\n  $clinit_MaterialRichEditorClientBundle_default_InlineClientBundleGenerator$richEditorCssInitializer = emptyMethod;\n  richEditorCss = new MaterialRichEditorClientBundle_default_InlineClientBundleGenerator$1;\n}\n\nfunction $clinit_MaterialRichEditorClientBundle_default_InlineClientBundleGenerator$richEditorJsInitializer(){\n  $clinit_MaterialRichEditorClientBundle_default_InlineClientBundleGenerator$richEditorJsInitializer = emptyMethod;\n  richEditorJs = new MaterialRichEditorClientBundle_default_InlineClientBundleGenerator$2;\n}\n\nvar richEditorDebugCss, richEditorDebugJs;\nfunction MaterialRichEditorDebugClientBundle_default_InlineClientBundleGenerator$1(){\n}\n\ndefineClass(1725, 1, {}, MaterialRichEditorDebugClientBundle_default_InlineClientBundleGenerator$1);\n_.getName = function getName_34(){\n  return 'richEditorDebugCss';\n}\n;\n_.getText = function getText_25(){\n  var builder;\n  builder = new StringBuilder;\n  builder.string += '\\r\\n/* variables \\r\\n=================================================================================*/\\r\\n.editorDialogs .modal, .note-editor .modal {\\r\\n  background-color: #FFFFFF;\\r\\n  color: #404040;\\r\\n  z-index: 1057 !important;\\r\\n  backface-visibility: hidden;\\r\\n}\\r\\n.editorDialogs .modal .input-field input:not([readonly]), .editorDialogs .modal .input-field input.datepicker, .note-editor .modal .input-field input:not([readonly]), .note-editor .modal .input-field input.datepicker {\\r\\n  border-color: #000 !important; }\\r\\n.editorDialogs .modal .input-field input:focus:not([readonly]), .editorDialogs .modal .input-field input.datepicker:focus, .editorDialogs .modal textarea.materialize-textarea:focus:not([readonly]), .note-editor .modal .input-field input:focus:not([readonly]), .note-editor .modal .input-field input.datepicker:focus, .note-editor .modal textarea.materialize-textarea:focus:not([readonly]) {\\r\\n  box-shadow: 0 1px 0 0 grey!important;\\r\\n  border-color: grey !important;\\r\\n}\\r\\n.editorDialogs .modal label, .editorDialogs .modal .input-field input:not([readonly]) + label, .editorDialogs .modal .input-field input.datepicker + label, .editorDialogs .modal .input-field .prefix, .editorDialogs .modal .note-editor + label, .note-editor .modal label, .note-editor .modal .input-field input:not([readonly]) + label, .note-editor .modal .input-field input.datepicker + label, .note-editor .modal .input-field .prefix, .note-editor .modal .note-editor + label {\\r\\n  color: #000 !important; }\\r\\n.editorDialogs .modal .input-field input:focus:not([readonly]) + label, .editorDialogs .modal .input-field input.datepicker:focus + label, .editorDialogs .modal .input-field .prefix.active, .editorDialogs .modal textarea.materialize-textarea:focus:not([readonly]) + label, .note-editor .modal .input-field input:focus:not([readonly]) + label, .note-editor .modal .input-field input.datepicker:focus + label, .note-editor .modal .input-field .prefix.active, .note-editor .modal textarea.materialize-textarea:focus:not([readonly]) + label {\\r\\n  color: grey;\\r\\n}\\r\\n.editorDialogs .modal .btn, .editorDialogs .modal .btn-large, .note-editor .modal .btn, .note-editor .modal .btn-large {\\r\\n  background-color: #2196F3;\\r\\n  color: #fff;\\r\\n  cursor: pointer;\\r\\n}\\r\\n.editorDialogs .modal .btn:hover, .editorDialogs .modal .btn-large:hover, .note-editor .modal .btn:hover, .note-editor .modal .btn-large:hover {\\r\\n  background-color: #2196F3 !important;\\r\\n  color: #fff;\\r\\n}\\r\\n.editorDialogs .modal .modal-footer, .note-editor .modal .modal-footer {\\r\\n  background-color: #E9E9E9;\\r\\n}\\r\\n.editorDialogs .modal .modal-footer .btnClose, .note-editor .modal .modal-footer .btnClose {\\r\\n  margin-right: 15px;\\r\\n  background-color: transparent !important;\\r\\n  color: grey;\\r\\n}\\r\\n.editorDialogs .modal .modal-footer .btnClose:hover, .note-editor .modal .modal-footer .btnClose:hover {\\r\\n  color: grey;\\r\\n  background-color: transparent !important;\\r\\n}\\r\\n.editorDialogs .modal .canvasContainerEmpty, .note-editor .modal .canvasContainerEmpty {\\r\\n  border: solid 5px #9c27b0; }\\r\\n\\r\\n.note-editor {\\r\\n  position: relative;\\r\\n  border-left: 3px solid #e9e9e9;\\r\\n  border-bottom: 3px solid #e9e9e9;\\r\\n  border-right: 3px solid #e9e9e9;\\r\\n  background: #E9E9E9;\\r\\n}\\r\\n.note-editor .img-circle {\\r\\n  border-radius: 50%; }\\r\\n.note-editor .img-rounded {\\r\\n  border-radius: 5%; }\\r\\n.note-editor .img-thumbnail {\\r\\n  border: solid 5px #e9e9e9;\\r\\n  height: 200px; }\\r\\n.note-editor .img-bordered {\\r\\n  border: solid 5px #e9e9e9; }\\r\\n.note-editor .btn:hover, .note-editor .btn-large:hover {\\r\\n  background-color: #E9E9E9 !important;\\r\\n}\\r\\n.note-editor .btn.active, .note-editor .active.btn-large {\\r\\n  background-color: #E0E0E0;\\r\\n}\\r\\n.note-editor .note-editable ul li {\\r\\n  list-style-type: square !important;\\r\\n  display: list-item;\\r\\n  list-style-position: inside; }\\r\\n.note-editor .note-dialog > div {\\r\\n  display: none; }\\r\\n.note-editor .note-dialog .form-group {\\r\\n  margin-right: 0;\\r\\n  margin-left: 0; }\\r\\n.note-editor .note-dialog .note-modal-form {\\r\\n  margin: 0; }\\r\\n.note-editor .note-dialog .note-image-dialog .note-dropzone {\\r\\n  min-height: 100px;\\r\\n  margin-bottom: 10px;\\r\\n  font-size: 30px;\\r\\n  line-height: 4;\\r\\n  color: lightgray;\\r\\n  text-align: center;\\r\\n  border: 4px dashed lightgray; }\\r\\n.note-editor .transparent {\\r\\n  opacity: 0; }\\r\\n.note-editor .note-resizebar {\\r\\n  background-color: #e9e9e9;\\r\\n  width: 100%;\\r\\n  height: 13px;\\r\\n  cursor: ns-resize;\\r\\n  padding-top: 1px; }\\r\\n.note-editor .note-resizebar .note-icon-bar {\\r\\n  width: 20px;\\r\\n  margin: 2px auto;\\r\\n  border-top: 2px solid #545454; }\\r\\n.note-editor .note-toolbar {\\r\\n  position: relative;\\r\\n  color: #000;\\r\\n  background-color: #e9e9e9;\\r\\n  margin: 0;\\r\\n  z-index: 995 !important;\\r\\n  padding: 2%;\\r\\n}\\r\\n.note-editor .note-toolbar ul {\\r\\n  padding: 0; }\\r\\n.note-editor .note-toolbar .btn.disabled, .note-editor .note-toolbar .disabled.btn-large, .note-editor .note-toolbar button.disabled {\\r\\n  display: none; }\\r\\n.note-editor .note-toolbar .dropdown {\\r\\n  cursor: pointer; }\\r\\n.note-editor .note-toolbar .note-current-fontname {\\r\\n  min-width: 134px;\\r\\n  display: inline-block;\\r\\n  text-align: left; }\\r\\n.note-editor .note-handle .note-control-selection {\\r\\n  position: absolute;\\r\\n  display: none;\\r\\n  border: 2px solid #e9e9e9; }\\r\\n.note-editor .note-handle .note-control-selection .note-control-selection-bg {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  z-index: 3;\\r\\n  background-color: rgba(117, 117, 117, 0.3); }\\r\\n.note-editor .note-handle .note-control-selection > div {\\r\\n  position: absolute; }\\r\\n.note-editor .note-handle .note-control-selection .note-control-handle {\\r\\n  width: 7px;\\r\\n  height: 7px;\\r\\n  border: 1px solid black; }\\r\\n.note-editor .note-handle .note-control-selection .note-control-holder {\\r\\n  width: 7px;\\r\\n  height: 7px;\\r\\n  border: 1px solid black; }\\r\\n.note-editor .note-handle .note-control-selection .note-control-sizing {\\r\\n  width: 15px;\\r\\n  height: 15px;\\r\\n  background-color: #e9e9e9;\\r\\n  z-index: 5;\\r\\n  cursor: se-resize; }\\r\\n.note-editor .note-handle .note-control-selection .note-control-nw {\\r\\n  top: -5px;\\r\\n  left: -5px;\\r\\n  border-right: 0;\\r\\n  border-bottom: 0; }\\r\\n.note-editor .note-handle .note-control-selection .note-control-ne {\\r\\n  top: -5px;\\r\\n  right: -5px;\\r\\n  border-bottom: 0;\\r\\n  border-left: none; }\\r\\n.note-editor .note-handle .note-control-selection .note-control-sw {\\r\\n  bottom: -5px;\\r\\n  left: -5px;\\r\\n  border-top: 0;\\r\\n  border-right: 0; }\\r\\n.note-editor .note-handle .note-control-selection .note-control-se {\\r\\n  right: -5px;\\r\\n  bottom: -5px; }\\r\\n.note-editor .note-handle .note-control-selection .note-control-selection-info {\\r\\n  right: 0;\\r\\n  bottom: 0;\\r\\n  padding: 5px;\\r\\n  margin: 17px;\\r\\n  font-size: 15px;\\r\\n  color: #000;\\r\\n  background-color: #e9e9e9;\\r\\n  z-index: 5; }\\r\\n\\r\\n.note-dialog .note-help-dialog {\\r\\n  color: #777777;\\r\\n}\\r\\n.note-dialog .note-help-dialog h4 {\\r\\n  color: #000; }\\r\\n.note-dialog .note-help-dialog thead {\\r\\n  background-color: #777777;\\r\\n  color: #fff;\\r\\n}\\r\\n.note-dialog .note-help-dialog tbody {\\r\\n  background-color: #e0e0e0; }\\r\\n\\r\\n.note-editor .btn-group, .popover .btn-group {\\r\\n  display: inline-block;\\r\\n  margin-right: 10px;\\r\\n  position: relative;\\r\\n}\\r\\n.note-editor .btn-group ul, .popover .btn-group ul {\\r\\n  padding: 0; }\\r\\n.note-editor .btn-group .closeLeft, .popover .btn-group .closeLeft {\\r\\n  padding-right: 0 !important;\\r\\n  margin-right: 0 !important; }\\r\\n.note-editor .btn-group .closeLeft i, .popover .btn-group .closeLeft i {\\r\\n  margin-right: 0 !important; }\\r\\n.note-editor .btn-group i.left, .popover .btn-group i.left {\\r\\n  margin-right: 5px; }\\r\\n.note-editor .btn, .note-editor .btn-large, .popover .btn, .popover .btn-large {\\r\\n  border-radius: 0 !important;\\r\\n  box-shadow: none !important;\\r\\n  padding: 0 9px !important;\\r\\n  color: #7F7A7A;\\r\\n  background: #fff;\\r\\n}\\r\\n.note-editor .btnSecond, .popover .btnSecond {\\r\\n  background-color: #B71C1C !important; }\\r\\n.note-editor .btnThird, .popover .btnThird {\\r\\n  background-color: #4a148c !important; }\\r\\n.note-editor note-toolbar button, .note-editor button, .popover note-toolbar button, .popover button {\\r\\n  border: none;\\r\\n  height: 36px;\\r\\n  text-transform: none;\\r\\n}\\r\\n.note-editor [type=\"checkbox\"]:checked + label:before, .note-editor [type=\"checkbox\"]:checked + label:before, .popover [type=\"checkbox\"]:checked + label:before, .popover [type=\"checkbox\"]:checked + label:before {\\r\\n  border-right-color: #9e9e9e !important;\\r\\n  border-bottom-color: #9e9e9e !important;\\r\\n}\\r\\n.note-editor .note-palette-title, .popover .note-palette-title {\\r\\n  padding: 0 !important; }\\r\\n.note-editor .colorName, .popover .colorName {\\r\\n  display: inline-block;\\r\\n  color: #000; }\\r\\n@media only screen and (max-width: 600px) {\\r\\n  .note-editor .colorName, .popover .colorName {\\r\\n    display: none; } }\\r\\n.note-editor .note-color-palette, .popover .note-color-palette {\\r\\n  line-height: 10px;\\r\\n  border: solid 3px #e9e9e9;\\r\\n  padding: 0 !important;\\r\\n  overflow-x: scroll;\\r\\n  overflow-y: hidden; }\\r\\n.note-editor .note-color-palette .note-color-row, .popover .note-color-palette .note-color-row {\\r\\n  padding: 0 !important;\\r\\n  min-width: 300px; }\\r\\n.note-editor .note-color-palette button.note-color-btn, .popover .note-color-palette button.note-color-btn {\\r\\n  width: 20px;\\r\\n  height: 20px;\\r\\n  padding: 0;\\r\\n  margin: 0; }\\r\\n.note-editor .note-color-palette .note-color-btn:hover:after, .popover .note-color-palette .note-color-btn:hover:after {\\r\\n  position: absolute;\\r\\n  width: 30px;\\r\\n  height: 30px;\\r\\n  content: \"\";\\r\\n  background-color: inherit;\\r\\n  margin-top: -15px;\\r\\n  margin-left: -15px; }\\r\\n.note-editor .note-dimension-picker, .popover .note-dimension-picker {\\r\\n  overflow: hidden; }\\r\\n.note-editor .largeDropdown, .popover .largeDropdown {\\r\\n  width: 290px; }\\r\\n.note-editor .dropdown-menu, .popover .dropdown-menu {\\r\\n  z-index: 1033; }\\r\\n.note-editor .dropdown-menu.note-check, .popover .dropdown-menu.note-check {\\r\\n  min-width: 80px; }\\r\\n.note-editor .dropdown-menu label, .popover .dropdown-menu label {\\r\\n  color: #000 !important; }\\r\\n.note-editor ul.dropdown-menu, .popover ul.dropdown-menu {\\r\\n  position: absolute;\\r\\n  top: 20px;\\r\\n  background-color: #FFFFFF;\\r\\n  box-shadow: 0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\\r\\n}\\r\\n.note-editor ul.dropdown-menu#colors, .popover ul.dropdown-menu#colors {\\r\\n  width: 342px; }\\r\\n.note-editor ul.dropdown-menu#colors .indicator, .popover ul.dropdown-menu#colors .indicator {\\r\\n  width: 50%;\\r\\n  left: 0;\\r\\n}\\r\\n.note-editor ul.dropdown-menu .colorTable, .popover ul.dropdown-menu .colorTable {\\r\\n  padding: 3px 0; }\\r\\n.note-editor ul.dropdown-menu .tabs, .popover ul.dropdown-menu .tabs {\\r\\n}\\r\\n.popover ul.dropdown-menu .tabs:hover {\\r\\n  background-color: #e9e9e9;\\r\\n}\\r\\n.note-editor ul.dropdown-menu .tabs .tab a, .note-editor ul.dropdown-menu .tabs .tab a:hover, .popover ul.dropdown-menu .tabs .tab a, .popover ul.dropdown-menu .tabs .tab a:hover {\\r\\n  color: #7F7A7A;\\r\\n}\\r\\n.note-editor ul.dropdown-menu .tabs .indicator, .popover ul.dropdown-menu .tabs .indicator {\\r\\n  background-color: #868181;\\r\\n}\\r\\n.note-editor ul.dropdown-menu li, .popover ul.dropdown-menu li {\\r\\n  list-style-type: none;\\r\\n  padding: 0 !important; }\\r\\n.note-editor ul.dropdown-menu li div, .popover ul.dropdown-menu li div {\\r\\n  padding: 3px 15px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.note-popover .popover {\\r\\n  position: absolute;\\r\\n  max-width: none;\\r\\n  color: #000; }\\r\\n.note-popover .popover .arrow {\\r\\n  width: 0;\\r\\n  height: 0;\\r\\n  border-style: solid;\\r\\n  border-width: 0 10px 10px 10px;\\r\\n  border-color: transparent transparent #e9e9e9 transparent; }\\r\\n.note-popover .popover .popover-content {\\r\\n  background-color: #e9e9e9; }\\r\\n.note-popover .popover .popover-content > a {\\r\\n  margin-left: 12px; }\\r\\n.note-popover .popover .popover-content a {\\r\\n  display: inline-block;\\r\\n  max-width: 200px;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n  white-space: nowrap;\\r\\n  vertical-align: middle; }\\r\\n.note-popover .popover .popover-content .arrow {\\r\\n  left: 20px; }\\r\\n.note-popover .popover .popover-content .btn-group {\\r\\n  display: inline-block; }\\r\\n.note-popover .popover .popover-content .btn-group .btn, .note-popover .popover .popover-content .btn-group .btn-large {\\r\\n  border-radius: 0 !important;\\r\\n  box-shadow: none !important;\\r\\n  padding: 0 9px !important;\\r\\n  background-color: #e9e9e9; }\\r\\n\\r\\n.note-popover .popover .popover-content .note-para .dropdown-menu, .note-toolbar .note-para .dropdown-menu {\\r\\n  min-width: 172px;\\r\\n  padding: 5px; }\\r\\n\\r\\n.note-popover .popover .popover-content .note-para .dropdown-menu > div:first-child, .note-toolbar .note-para .dropdown-menu > div:first-child {\\r\\n  margin-right: 5px; }\\r\\n\\r\\n.note-editor .note-dropzone {\\r\\n  position: absolute;\\r\\n  z-index: 100;\\r\\n  display: none;\\r\\n  color: #87cefa;\\r\\n  background-color: white;\\r\\n  border: 2px dashed #87cefa;\\r\\n  opacity: .95;\\r\\n  pointer-event: none; }\\r\\n\\r\\n.note-editor .note-dropzone .note-dropzone-message {\\r\\n  display: table-cell;\\r\\n  font-size: 28px;\\r\\n  font-weight: bold;\\r\\n  text-align: center;\\r\\n  vertical-align: middle; }\\r\\n\\r\\n.note-editor .note-dropzone.hover {\\r\\n  color: #098ddf;\\r\\n  border: 2px dashed #098ddf; }\\r\\n\\r\\n.note-editor.dragover .note-dropzone {\\r\\n  display: table; }\\r\\n\\r\\n.note-editor.fullscreen {\\r\\n  position: fixed;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  z-index: 2021;\\r\\n  width: 100%; }\\r\\n\\r\\n.note-editor.fullscreen .note-editable {\\r\\n  background-color: white; }\\r\\n\\r\\n.note-editor.fullscreen .note-resizebar {\\r\\n  display: none; }\\r\\n\\r\\n.note-editor.codeview .note-editable {\\r\\n  display: none; }\\r\\n\\r\\n.note-editor.codeview .note-codable {\\r\\n  display: block; }\\r\\n\\r\\n.note-editor .note-statusbar {\\r\\n  background-color: #f5f5f5; }\\r\\n\\r\\n.note-editor .note-editable[contenteditable=true]:empty:not(:focus):before {\\r\\n  color: #a9a9a9;\\r\\n  content: attr(data-placeholder); }\\r\\n\\r\\n.note-editor .note-editable {\\r\\n  padding: 10px;\\r\\n  overflow: auto;\\r\\n  outline: 0;\\r\\n  background: #fff;\\r\\n  margin: 2%;\\r\\n  box-shadow: 0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\\r\\n}\\r\\n\\r\\n.note-editor .note-editable[contenteditable=\"false\"] {\\r\\n  background-color: #e5e5e5; }\\r\\n\\r\\n.note-editor .note-codable {\\r\\n  display: none;\\r\\n  width: 100%;\\r\\n  padding: 10px;\\r\\n  margin-bottom: 0;\\r\\n  font-family: Menlo, Monaco, monospace, sans-serif;\\r\\n  font-size: 14px;\\r\\n  color: #ccc;\\r\\n  background-color: #222;\\r\\n  border: 0;\\r\\n  -webkit-border-radius: 0;\\r\\n  -moz-border-radius: 0;\\r\\n  border-radius: 0;\\r\\n  box-shadow: none;\\r\\n  -webkit-box-sizing: border-box;\\r\\n  -moz-box-sizing: border-box;\\r\\n  -ms-box-sizing: border-box;\\r\\n  box-sizing: border-box;\\r\\n  resize: none; }\\r\\n\\r\\n.note-air-editor {\\r\\n  outline: 0; }\\r\\n\\r\\n.note-popover .popover .popover-content,\\r\\n.note-toolbar {\\r\\n  padding: 0;\\r\\n  margin: 0; }\\r\\n\\r\\n.note-popover .popover .popover-content > .btn-group,\\r\\n.note-toolbar > .btn-group {\\r\\n  margin-top: 0;\\r\\n  margin-right: 5px;\\r\\n  margin-left: 0;\\r\\n  background: #fff;\\r\\n  margin: 4px;\\r\\n  box-shadow: 0 2px 5px 0 rgba(0,0,0,0.16),0 2px 10px 0 rgba(0,0,0,0.12);\\r\\n}\\r\\n\\r\\n.note-popover .popover .popover-content .btn-group .note-table,\\r\\n.note-toolbar .btn-group .note-table {\\r\\n  min-width: 0;\\r\\n  padding: 5px; }\\r\\n\\r\\n.note-popover .popover .popover-content .btn-group .note-table .note-dimension-picker,\\r\\n.note-toolbar .btn-group .note-table .note-dimension-picker {\\r\\n  font-size: 18px; }\\r\\n\\r\\n.note-popover .popover .popover-content .btn-group .note-table .note-dimension-picker .note-dimension-picker-mousecatcher,\\r\\n.note-toolbar .btn-group .note-table .note-dimension-picker .note-dimension-picker-mousecatcher {\\r\\n  position: absolute !important;\\r\\n  z-index: 3;\\r\\n  width: 260px;\\r\\n  height: 260px;\\r\\n  cursor: pointer; }\\r\\n\\r\\n.note-popover .popover .popover-content .btn-group .note-table .note-dimension-picker .note-dimension-picker-unhighlighted,\\r\\n.note-toolbar .btn-group .note-table .note-dimension-picker .note-dimension-picker-unhighlighted {\\r\\n  position: relative !important;\\r\\n  z-index: 1;\\r\\n  width: 312px;\\r\\n  height: 130px;\\r\\n  background-size: 26px 26px;\\r\\n  background-image: repeating-linear-gradient(0deg, #FFFFFF, #FFFFFF 2px, transparent 2px, transparent 26px), repeating-linear-gradient(-90deg, transparent, transparent 2px, #E9E9E9 2px, #E9E9E9 26px);\\r\\n}\\r\\n\\r\\n.note-popover .popover .popover-content .btn-group .note-table .note-dimension-picker .note-dimension-picker-highlighted,\\r\\n.note-toolbar .btn-group .note-table .note-dimension-picker .note-dimension-picker-highlighted {\\r\\n  position: absolute !important;\\r\\n  z-index: 2;\\r\\n  width: 26px;\\r\\n  height: 26px;\\r\\n  background-size: 26px 26px;\\r\\n  background-image: repeating-linear-gradient(0deg, #fff, #fff 2px, transparent 2px, transparent 26px), repeating-linear-gradient(-90deg,';\n  builder.string += ' transparent, transparent 2px, #9e9e9e 2px, #9e9e9e 26px);\\r\\n}\\r\\n\\r\\n.note-popover .popover .popover-content .note-style h1,\\r\\n.note-toolbar .note-style h1,\\r\\n.note-popover .popover .popover-content .note-style h2,\\r\\n.note-toolbar .note-style h2,\\r\\n.note-popover .popover .popover-content .note-style h3,\\r\\n.note-toolbar .note-style h3,\\r\\n.note-popover .popover .popover-content .note-style h4,\\r\\n.note-toolbar .note-style h4,\\r\\n.note-popover .popover .popover-content .note-style h5,\\r\\n.note-toolbar .note-style h5,\\r\\n.note-popover .popover .popover-content .note-style h6,\\r\\n.note-toolbar .note-style h6,\\r\\n.note-popover .popover .popover-content .note-style blockquote,\\r\\n.note-toolbar .note-style blockquote {\\r\\n  margin: 0; }\\r\\n\\r\\n.note-popover .popover .popover-content .note-color .dropdown-toggle,\\r\\n.note-toolbar .note-color .dropdown-toggle {\\r\\n  width: 20px;\\r\\n  padding-left: 5px; }\\r\\n\\r\\n.note-popover .popover .popover-content .note-color .dropdown-menu .btn-group,\\r\\n.note-toolbar .note-color .dropdown-menu .btn-group {\\r\\n  margin: 0; }\\r\\n\\r\\n.note-popover .popover .popover-content .note-color .dropdown-menu .btn-group:first-child,\\r\\n.note-toolbar .note-color .dropdown-menu .btn-group:first-child {\\r\\n  margin: 0 5px; }\\r\\n\\r\\n.note-popover .popover .popover-content .note-color .dropdown-menu .btn-group .note-palette-title,\\r\\n.note-toolbar .note-color .dropdown-menu .btn-group .note-palette-title {\\r\\n  margin: 2px 7px;\\r\\n  font-size: 12px;\\r\\n  text-align: center;\\r\\n  border-bottom: 1px solid #eee; }\\r\\n\\r\\n.note-popover .popover .popover-content .note-color .dropdown-menu .btn-group .note-color-reset,\\r\\n.note-toolbar .note-color .dropdown-menu .btn-group .note-color-reset {\\r\\n  padding: 0 3px;\\r\\n  margin: 3px;\\r\\n  font-size: 11px;\\r\\n  cursor: pointer;\\r\\n  -webkit-border-radius: 5px;\\r\\n  -moz-border-radius: 5px;\\r\\n  border-radius: 5px; }\\r\\n\\r\\n.note-popover .popover .popover-content .note-color .dropdown-menu .btn-group .note-color-row,\\r\\n.note-toolbar .note-color .dropdown-menu .btn-group .note-color-row {\\r\\n  height: 20px; }\\r\\n\\r\\n.note-popover .popover .popover-content .note-color .dropdown-menu .btn-group .note-color-reset:hover,\\r\\n.note-toolbar .note-color .dropdown-menu .btn-group .note-color-reset:hover {\\r\\n  background: #eee; }\\r\\n\\r\\n/*.note-popover .popover .popover-content .dropdown-menu,\\r\\n.note-toolbar .dropdown-menu {\\r\\n    min-width: 90px\\r\\n}*/\\r\\n.note-popover .popover .popover-content .dropdown-menu.right,\\r\\n.note-toolbar .dropdown-menu.right {\\r\\n  right: 0;\\r\\n  left: auto; }\\r\\n\\r\\n.note-popover .popover .popover-content .dropdown-menu.right::before,\\r\\n.note-toolbar .dropdown-menu.right::before {\\r\\n  right: 9px;\\r\\n  left: auto !important; }\\r\\n\\r\\n.note-popover .popover .popover-content .dropdown-menu.right::after,\\r\\n.note-toolbar .dropdown-menu.right::after {\\r\\n  right: 10px;\\r\\n  left: auto !important; }\\r\\n\\r\\n.note-popover .popover .popover-content .dropdown-menu.note-check li a i,\\r\\n.note-toolbar .dropdown-menu.note-check li a i {\\r\\n  color: deepskyblue;\\r\\n  visibility: hidden; }\\r\\n\\r\\n.note-popover .popover .popover-content .dropdown-menu.note-check li a.checked i,\\r\\n.note-toolbar .dropdown-menu.note-check li a.checked i {\\r\\n  visibility: visible; }\\r\\n\\r\\n.note-popover .popover .popover-content .note-fontsize-10,\\r\\n.note-toolbar .note-fontsize-10 {\\r\\n  font-size: 10px; }\\r\\n\\r\\n.codeview .note-style, .codeview .note-fonts,  .codeview .note-color, .codeview .note-undo, .codeview .note-para, .codeview .note-height {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.codeview .note-misc{\\r\\n  background: #E0E0E0 !important;\\r\\n  padding-right: 12px !important;\\r\\n}';\n  return builder.string;\n}\n;\nvar Lgwt_material_design_addins_client_richeditor_MaterialRichEditorDebugClientBundle_1default_1InlineClientBundleGenerator$1_2_classLit = createForClass('gwt.material.design.addins.client.richeditor', 'MaterialRichEditorDebugClientBundle_default_InlineClientBundleGenerator/1', 1725);\nfunction MaterialRichEditorDebugClientBundle_default_InlineClientBundleGenerator$2(){\n}\n\ndefineClass(1726, 1, {}, MaterialRichEditorDebugClientBundle_default_InlineClientBundleGenerator$2);\n_.getName = function getName_35(){\n  return 'richEditorDebugJs';\n}\n;\n_.getText = function getText_26(){\n  var builder;\n  builder = new StringBuilder;\n  builder.string += \"/**\\r\\n * MaterialNote v1.2.1\\r\\n * Super simple wysiwyg editor on Materialize\\r\\n * a fork of materialnote.js => http://materialnote.org/\\r\\n *\\r\\n * original summernote credits:\\r\\n * summernote.js\\r\\n * Copyright 2013-2015 Alan Hong. and other contributors\\r\\n * summernote (and so materialNote) may be freely distributed under the MIT license./\\r\\n * (https://raw.githubusercontent.com/Cerealkillerway/materialNote/master/license.txt)\\r\\n *\\r\\n * edited by CK (http://www.web-forge.info)\\r\\n * thanks to Tox for code review (http://emanuele.itoscano.com/)\\r\\n */\\r\\n(function(factory) {\\r\\n    /* global define */\\r\\n    if (typeof define === 'function' && define.amd) {\\r\\n        // AMD. Register as an anonymous module.\\r\\n        define(['jquery'], factory);\\r\\n    } else {\\r\\n        // Browser globals: jQuery\\r\\n        factory(window.jQuery);\\r\\n    }\\r\\n}(function($) {\\r\\n\\r\\n    if (!Array.prototype.reduce) {\\r\\n        /**\\r\\n         * Array.prototype.reduce polyfill\\r\\n         * @param {Function} callback\\r\\n         * @param {Value} [initialValue]\\r\\n         * @return {Value}\\r\\n         * @see http://goo.gl/WNriQD\\r\\n         */\\r\\n        Array.prototype.reduce = function(callback) {\\r\\n            var t = Object(this), len = t.length >>> 0, k = 0, value;\\r\\n\\r\\n            if (arguments.length === 2) {\\r\\n                value = arguments[1];\\r\\n            } else {\\r\\n                while (k < len && !(k in t)) {\\r\\n                    k++;\\r\\n                }\\r\\n                if (k >= len) {\\r\\n                    throw new TypeError('Reduce of empty array with no initial value');\\r\\n                }\\r\\n                value = t[k++];\\r\\n            }\\r\\n            for (; k < len; k++) {\\r\\n                if (k in t) {\\r\\n                    value = callback(value, t[k], k, t);\\r\\n                }\\r\\n            }\\r\\n            return value;\\r\\n        };\\r\\n    }\\r\\n\\r\\n    if ('function' !== typeof Array.prototype.filter) {\\r\\n        /**\\r\\n         * Array.prototype.filter polyfill\\r\\n         * @param {Function} func\\r\\n         * @return {Array}\\r\\n         * @see http://goo.gl/T1KFnq\\r\\n         */\\r\\n        Array.prototype.filter = function(func) {\\r\\n            var t = Object(this), len = t.length >>> 0;\\r\\n            var res = [];\\r\\n            var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\\r\\n\\r\\n            for (var i = 0; i < len; i++) {\\r\\n                if (i in t) {\\r\\n                    var val = t[i];\\r\\n\\r\\n                    if (func.call(thisArg, val, i, t)) {\\r\\n                        res.push(val);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            return res;\\r\\n        };\\r\\n    }\\r\\n\\r\\n    var isSupportAmd = typeof define === 'function' && define.amd;\\r\\n\\r\\n    /**\\r\\n     * returns whether font is installed or not.\\r\\n     * @param {String} fontName\\r\\n     * @return {Boolean}\\r\\n     */\\r\\n    var isFontInstalled = function(fontName) {\\r\\n        if (fontName === \\\"Roboto\\\") return true;\\r\\n        var testFontName = fontName === 'Comic Sans MS' ? 'Courier New' : 'Comic Sans MS';\\r\\n        var $tester = $('<div>').css({\\r\\n            position: 'absolute',\\r\\n            left: '-9999px',\\r\\n            top: '-9999px',\\r\\n            fontSize: '200px'\\r\\n        }).text('mmmmmmmmmwwwwwww').appendTo(document.body);\\r\\n\\r\\n        var originalWidth = $tester.css('fontFamily', testFontName).width();\\r\\n        var width = $tester.css('fontFamily', fontName + ',' + testFontName).width();\\r\\n\\r\\n        $tester.remove();\\r\\n\\r\\n        return originalWidth !== width;\\r\\n    };\\r\\n\\r\\n\\r\\n    var userAgent = navigator.userAgent;\\r\\n\\r\\n    /**\\r\\n     * @class core.agent\\r\\n     * Object which check platform and agent\\r\\n     * @singleton\\r\\n     * @alternateClassName agent\\r\\n     */\\r\\n    var agent = {\\r\\n        /** @property {Boolean} [isMac=false] true if this agent is Mac  */\\r\\n        isMac: navigator.appVersion.indexOf('Mac') > -1,\\r\\n        /** @property {Boolean} [isMSIE=false] true if this agent is a Internet Explorer  */\\r\\n        isMSIE: /MSIE|Trident/i.test(userAgent),\\r\\n        /** @property {Boolean} [isFF=false] true if this agent is a Firefox  */\\r\\n        isFF: /firefox/i.test(userAgent),\\r\\n        isWebkit: /webkit/i.test(userAgent),\\r\\n        /** @property {Boolean} [isSafari=false] true if this agent is a Safari  */\\r\\n        isSafari: /safari/i.test(userAgent),\\r\\n        /** @property {String} jqueryVersion current jQuery version string  */\\r\\n        jqueryVersion: parseFloat($.fn.jquery),\\r\\n        isSupportAmd: isSupportAmd,\\r\\n        hasCodeMirror: isSupportAmd ? require.specified('CodeMirror') : !!window.CodeMirror,\\r\\n        isFontInstalled: isFontInstalled,\\r\\n        isW3CRangeSupport: !!document.createRange\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @class core.func\\r\\n     * func utils (for high-order func's arg)\\r\\n     * @singleton\\r\\n     * @alternateClassName func\\r\\n     */\\r\\n    var func = (function() {\\r\\n        var eq = function(itemA) {\\r\\n            return function(itemB) {\\r\\n                return itemA === itemB;\\r\\n            };\\r\\n        };\\r\\n\\r\\n        var eq2 = function(itemA, itemB) {\\r\\n            return itemA === itemB;\\r\\n        };\\r\\n\\r\\n        var peq2 = function(propName) {\\r\\n            return function(itemA, itemB) {\\r\\n                return itemA[propName] === itemB[propName];\\r\\n            };\\r\\n        };\\r\\n\\r\\n        var ok = function() {\\r\\n            return true;\\r\\n        };\\r\\n\\r\\n        var fail = function() {\\r\\n            return false;\\r\\n        };\\r\\n\\r\\n        var not = function(f) {\\r\\n            return function() {\\r\\n                return !f.apply(f, arguments);\\r\\n            };\\r\\n        };\\r\\n\\r\\n        var and = function(fA, fB) {\\r\\n            return function(item) {\\r\\n                return fA(item) && fB(item);\\r\\n            };\\r\\n        };\\r\\n\\r\\n        var self = function(a) {\\r\\n            return a;\\r\\n        };\\r\\n\\r\\n        var idCounter = 0;\\r\\n\\r\\n        /**\\r\\n         * generate a globally-unique id\\r\\n         * @param {String} [prefix]\\r\\n         */\\r\\n        var uniqueId = function(prefix) {\\r\\n            var id = ++idCounter + '';\\r\\n\\r\\n            return prefix ? prefix + id : id;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns bnd (bounds) from rect\\r\\n         * - IE Compatability Issue: http://goo.gl/sRLOAo\\r\\n         * - Scroll Issue: http://goo.gl/sNjUc\\r\\n         * @param {Rect} rect\\r\\n         * @return {Object} bounds\\r\\n         * @return {Number} bounds.top\\r\\n         * @return {Number} bounds.left\\r\\n         * @return {Number} bounds.width\\r\\n         * @return {Number} bounds.height\\r\\n         */\\r\\n        var rect2bnd = function(rect) {\\r\\n            var $document = $(document);\\r\\n            return {\\r\\n                top: rect.top + $document.scrollTop(),\\r\\n                left: rect.left + $document.scrollLeft(),\\r\\n                width: rect.right - rect.left,\\r\\n                height: rect.bottom - rect.top\\r\\n            };\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns a copy of the object where the keys have become the values and the values the keys.\\r\\n         * @param {Object} obj\\r\\n         * @return {Object}\\r\\n         */\\r\\n        var invertObject = function(obj) {\\r\\n            var inverted = {};\\r\\n\\r\\n            for (var key in obj) {\\r\\n                if (obj.hasOwnProperty(key)) {\\r\\n                    inverted[obj[key]] = key;\\r\\n                }\\r\\n            }\\r\\n            return inverted;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @param {String} namespace\\r\\n         * @param {String} [prefix]\\r\\n         * @return {String}\\r\\n         */\\r\\n        var namespaceToCamel = function(namespace, prefix) {\\r\\n            prefix = prefix || '';\\r\\n            return prefix + namespace.split('.').map(function(name) {\\r\\n                    return name.substring(0, 1).toUpperCase() + name.substring(1);\\r\\n                }).join('');\\r\\n        };\\r\\n\\r\\n        return {\\r\\n            eq: eq,\\r\\n            eq2: eq2,\\r\\n            peq2: peq2,\\r\\n            ok: ok,\\r\\n            fail: fail,\\r\\n            self: self,\\r\\n            not: not,\\r\\n            and: and,\\r\\n            uniqueId: uniqueId,\\r\\n            rect2bnd: rect2bnd,\\r\\n            invertObject: invertObject,\\r\\n            namespaceToCamel: namespaceToCamel\\r\\n        };\\r\\n    })(); //end func\\r\\n\\r\\n\\r\\n    /**\\r\\n     * @class core.list\\r\\n     * list utils\\r\\n     * @singleton\\r\\n     * @alternateClassName list\\r\\n     */\\r\\n    var list = (function() {\\r\\n        /**\\r\\n         * returns the first item of an array.\\r\\n         * @param {Array} array\\r\\n         */\\r\\n        var head = function(array) {\\r\\n            return array[0];\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns the last item of an array.\\r\\n         * @param {Array} array\\r\\n         */\\r\\n        var last = function(array) {\\r\\n            return array[array.length - 1];\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns everything but the last entry of the array.\\r\\n         * @param {Array} array\\r\\n         */\\r\\n        var initial = function(array) {\\r\\n            return array.slice(0, array.length - 1);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns the rest of the items in an array.\\r\\n         * @param {Array} array\\r\\n         */\\r\\n        var tail = function(array) {\\r\\n            return array.slice(1);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns item of array\\r\\n         */\\r\\n        var find = function(array, pred) {\\r\\n            for (var idx = 0, len = array.length; idx < len; idx ++) {\\r\\n                var item = array[idx];\\r\\n\\r\\n                if (pred(item)) {\\r\\n                    return item;\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns true if all of the values in the array pass the predicate truth test.\\r\\n         */\\r\\n        var all = function(array, pred) {\\r\\n            for (var idx = 0, len = array.length; idx < len; idx ++) {\\r\\n                if (!pred(array[idx])) {\\r\\n                    return false;\\r\\n                }\\r\\n            }\\r\\n            return true;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns true if the value is present in the list.\\r\\n         */\\r\\n        var contains = function(array, item) {\\r\\n            return $.inArray(item, array) !== -1;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * get sum from a list\\r\\n         * @param {Array} array - array\\r\\n         * @param {Function} fn - iterator\\r\\n         */\\r\\n        var sum = function(array, fn) {\\r\\n            fn = fn || func.self;\\r\\n            return array.reduce(function(memo, v) {\\r\\n                return memo + fn(v);\\r\\n            }, 0);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns a copy of the collection with array type.\\r\\n         * @param {Collection} collection - collection eg) node.childNodes, ...\\r\\n         */\\r\\n        var from = function(collection) {\\r\\n            var result = [], idx = -1, length = collection.length;\\r\\n            while (++idx < length) {\\r\\n                result[idx] = collection[idx];\\r\\n            }\\r\\n            return result;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * cluster elements by predicate function.\\r\\n         * @param {Array} array - array\\r\\n         * @param {Function} fn - predicate function for cluster rule\\r\\n         * @param {Array[]}\\r\\n         */\\r\\n        var clusterBy = function(array, fn) {\\r\\n            if (!array.length) { return []; }\\r\\n            var aTail = tail(array);\\r\\n\\r\\n            return aTail.reduce(function(memo, v) {\\r\\n                var aLast = last(memo);\\r\\n                if (fn(last(aLast), v)) {\\r\\n                    aLast[aLast.length] = v;\\r\\n                } else {\\r\\n                    memo[memo.length] = [v];\\r\\n                }\\r\\n                return memo;\\r\\n            }, [[head(array)]]);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns a copy of the array with all falsy values removed\\r\\n         * @param {Array} array - array\\r\\n         * @param {Function} fn - predicate function for cluster rule\\r\\n         */\\r\\n        var compact = function(array) {\\r\\n            var aResult = [];\\r\\n\\r\\n            for (var idx = 0, len = array.length; idx < len; idx ++) {\\r\\n                if (array[idx]) { aResult.push(array[idx]); }\\r\\n            }\\r\\n            return aResult;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * produces a duplicate-free version of the array\\r\\n         * @param {Array} array\\r\\n         */\\r\\n        var unique = function(array) {\\r\\n            var results = [];\\r\\n\\r\\n            for (var idx = 0, len = array.length; idx < len; idx ++) {\\r\\n                if (!contains(results, array[idx])) {\\r\\n                    results.push(array[idx]);\\r\\n                }\\r\\n            }\\r\\n            return results;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns next item.\\r\\n         * @param {Array} array\\r\\n         */\\r\\n        var next = function(array, item) {\\r\\n            var idx = array.indexOf(item);\\r\\n\\r\\n            if (idx === -1) {return null;}\\r\\n            return array[idx + 1];\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns prev item.\\r\\n         * @param {Array} array\\r\\n         */\\r\\n        var prev = function(array, item) {\\r\\n            var idx = array.indexOf(item);\\r\\n\\r\\n            if (idx === -1) {return null;}\\r\\n            return array[idx - 1];\\r\\n        };\\r\\n\\r\\n\\r\\n        return {head: head, last: last, initial: initial, tail: tail, prev: prev, next: next, find: find, contains: contains, all: all, sum: sum, from: from, clusterBy: clusterBy, compact: compact, unique: unique};\\r\\n    })(); //end list\\r\\n\\r\\n\\r\\n    var NBSP_CHAR = String.fromCharCode(160);\\r\\n    var ZERO_WIDTH_NBSP_CHAR = '\\\\ufeff';\\r\\n\\r\\n    /**\\r\\n     * @class core.dom\\r\\n     * Dom functions\\r\\n     * @singleton\\r\\n     * @alternateClassName dom\\r\\n     */\\r\\n    var dom = (function() {\\r\\n        /**\\r\\n         * @method isEditable\\r\\n         * returns whether node is `note-editable` or not.\\r\\n         * @param {Node} node\\r\\n         * @return {Boolean}\\r\\n         */\\r\\n        var isEditable = function(node) {\\r\\n            return node && $(node).hasClass('note-editable');\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method isControlSizing\\r\\n         * returns whether node is `note-control-sizing` or not.\\r\\n         * @param {Node} node\\r\\n         * @return {Boolean}\\r\\n         */\\r\\n        var isControlSizing = function(node) {\\r\\n            return node && $(node).hasClass('note-control-sizing');\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method  buildLayoutInfo\\r\\n         * build layoutInfo from $editor(.note-editor)\\r\\n         * @param {jQuery} $editor\\r\\n         * @return {Object}\\r\\n         * @return {Function} return.editor\\r\\n         * @return {Node} return.dropzone\\r\\n         * @return {Node} return.toolbar\\r\\n         * @return {Node} return.editable\\r\\n         * @return {Node} return.codable\\r\\n         * @return {Node} return.popover\\r\\n         * @return {Node} return.handle\\r\\n         * @return {Node} return.dialog\\r\\n         */\\r\\n        var buildLayoutInfo = function($editor) {\\r\\n            var makeFinder;\\r\\n\\r\\n            // air mode\\r\\n            if ($editor.hasClass('note-air-editor')) {\\r\\n                var id = list.last($editor.attr('id').split('-'));\\r\\n\\r\\n                makeFinder = function(sIdPrefix) {\\r\\n                    return function() { return $(sIdPrefix + id); };\\r\\n                };\\r\\n\\r\\n                return {\\r\\n                    editor: function() { return $editor; },\\r\\n                    holder : function() { return $editor.data('holder'); },\\r\\n                    editable: function() { return $editor; },\\r\\n                    popover: makeFinder('#note-popover-'),\\r\\n                    handle: makeFinder('#note-handle-'),\\r\\n                    dialog: makeFinder('#note-dialog-')\\r\\n                };\\r\\n                // frame mode\\r\\n            } else {\\r\\n                makeFinder = function(sClassName) {\\r\\n                    return function() { return $editor.find(sClassName); };\\r\\n                };\\r\\n                return {\\r\\n                    editor: function() { return $editor; },\\r\\n                    holder : function() { return $editor.data('holder'); },\\r\\n                    dropzone: makeFinder('.note-dropzone'),\\r\\n                    toolbar: makeFinder('.note-toolbar'),\\r\\n                    editable: makeFinder('.note-editable'),\\r\\n                    codable: makeFinder('.note-codable'),\\r\\n                    statusbar: makeFinder('.note-statusbar'),\\r\\n                    popover: makeFinder('.note-popover'),\\r\\n                    handle: makeFinder('.note-handle'),\\r\\n                    dialog: makeFinder('.note-dialog')\\r\\n                };\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns makeLayoutInfo from editor's descendant node.\\r\\n         * @private\\r\\n         * @param {Node} descendant\\r\\n         * @return {Object}\\r\\n         */\\r\\n        var makeLayoutInfo = function(descenda\";\n  builder.string += \"nt) {\\r\\n            var $target = $(descendant).closest('.note-editor, .note-air-editor, .note-air-layout');\\r\\n\\r\\n            if (!$target.length) {\\r\\n                return null;\\r\\n            }\\r\\n            var $editor;\\r\\n\\r\\n            if ($target.is('.note-editor, .note-air-editor')) {\\r\\n                $editor = $target;\\r\\n            } else {\\r\\n                $editor = $('#note-editor-' + list.last($target.attr('id').split('-')));\\r\\n            }\\r\\n            return buildLayoutInfo($editor);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method makePredByNodeName\\r\\n         * returns predicate which judge whether nodeName is same\\r\\n         * @param {String} nodeName\\r\\n         * @return {Function}\\r\\n         */\\r\\n        var makePredByNodeName = function(nodeName) {\\r\\n            nodeName = nodeName.toUpperCase();\\r\\n            return function(node) {\\r\\n                return node && node.nodeName.toUpperCase() === nodeName;\\r\\n            };\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method isText\\r\\n         * @param {Node} node\\r\\n         * @return {Boolean} true if node's type is text(3)\\r\\n         */\\r\\n        var isText = function(node) {\\r\\n            return node && node.nodeType === 3;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * ex) br, col, embed, hr, img, input, ...\\r\\n         * @see http://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements\\r\\n         */\\r\\n        var isVoid = function(node) {\\r\\n            return node && /^BR|^IMG|^HR/.test(node.nodeName.toUpperCase());\\r\\n        };\\r\\n\\r\\n        var isPara = function(node) {\\r\\n            if (isEditable(node)) {\\r\\n                return false;\\r\\n            }\\r\\n            // Chrome(v31.0), FF(v25.0.1) use DIV for paragraph\\r\\n            return node && /^DIV|^P|^LI|^H[1-7]/.test(node.nodeName.toUpperCase());\\r\\n        };\\r\\n\\r\\n        var isLi = makePredByNodeName('LI');\\r\\n\\r\\n        var isPurePara = function(node) {\\r\\n            return isPara(node) && !isLi(node);\\r\\n        };\\r\\n\\r\\n        var isTable = makePredByNodeName('TABLE');\\r\\n\\r\\n        var isInline = function(node) {\\r\\n            return !isBodyContainer(node) && !isList(node) && !isPara(node) && !isTable(node) && !isBlockquote(node);\\r\\n        };\\r\\n\\r\\n        var isList = function(node) {\\r\\n            return node && /^UL|^OL/.test(node.nodeName.toUpperCase());\\r\\n        };\\r\\n\\r\\n        var isCell = function(node) {\\r\\n            return node && /^TD|^TH/.test(node.nodeName.toUpperCase());\\r\\n        };\\r\\n\\r\\n        var isBlockquote = makePredByNodeName('BLOCKQUOTE');\\r\\n\\r\\n        var isBodyContainer = function(node) {\\r\\n            return isCell(node) || isBlockquote(node) || isEditable(node);\\r\\n        };\\r\\n\\r\\n        var isAnchor = makePredByNodeName('A');\\r\\n\\r\\n        var isParaInline = function(node) {\\r\\n            return isInline(node) && !!ancestor(node, isPara);\\r\\n        };\\r\\n\\r\\n        var isBodyInline = function(node) {\\r\\n            return isInline(node) && !ancestor(node, isPara);\\r\\n        };\\r\\n\\r\\n        var isBody = makePredByNodeName('BODY');\\r\\n\\r\\n        /**\\r\\n         * returns whether nodeB is closest sibling of nodeA\\r\\n         * @param {Node} nodeA\\r\\n         * @param {Node} nodeB\\r\\n         * @return {Boolean}\\r\\n         */\\r\\n        var isClosestSibling = function(nodeA, nodeB) {\\r\\n            return nodeA.nextSibling === nodeB || nodeA.previousSibling === nodeB;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns array of closest siblings with node\\r\\n         * @param {Node} node\\r\\n         * @param {function} [pred] - predicate function\\r\\n         * @return {Node[]}\\r\\n         */\\r\\n        var withClosestSiblings = function(node, pred) {\\r\\n            pred = pred || func.ok;\\r\\n            var siblings = [];\\r\\n\\r\\n            if (node.previousSibling && pred(node.previousSibling)) {\\r\\n                siblings.push(node.previousSibling);\\r\\n            }\\r\\n            siblings.push(node);\\r\\n            if (node.nextSibling && pred(node.nextSibling)) {\\r\\n                siblings.push(node.nextSibling);\\r\\n            }\\r\\n            return siblings;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * blank HTML for cursor position\\r\\n         * - [workaround] for MSIE IE doesn't works with bogus br\\r\\n         */\\r\\n        var blankHTML = agent.isMSIE ? '&nbsp;' : '<br>';\\r\\n\\r\\n        /**\\r\\n         * @method nodeLength\\r\\n         * returns #text's text size or element's childNodes size\\r\\n         * @param {Node} node\\r\\n         */\\r\\n        var nodeLength = function(node) {\\r\\n            if (isText(node)) {\\r\\n                return node.nodeValue.length;\\r\\n            }\\r\\n            return node.childNodes.length;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns whether node is empty or not.\\r\\n         * @param {Node} node\\r\\n         * @return {Boolean}\\r\\n         */\\r\\n        var isEmpty = function(node) {\\r\\n            var len = nodeLength(node);\\r\\n\\r\\n            if (len === 0) {\\r\\n                return true;\\r\\n            } else if (!isText(node) && len === 1 && node.innerHTML === blankHTML) {\\r\\n                return true;\\r\\n            } else if (list.all(node.childNodes, isText) && node.innerHTML === '') {\\r\\n                return true;\\r\\n            }\\r\\n            return false;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * padding blankHTML if node is empty (for cursor position)\\r\\n         */\\r\\n        var paddingBlankHTML = function(node) {\\r\\n            if (!isVoid(node) && !nodeLength(node)) {\\r\\n                node.innerHTML = blankHTML;\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * find nearest ancestor predicate hit\\r\\n         *\\r\\n         * @param {Node} node\\r\\n         * @param {Function} pred - predicate function\\r\\n         */\\r\\n        var ancestor = function(node, pred) {\\r\\n            while (node) {\\r\\n                if (pred(node)) { return node; }\\r\\n                if (isEditable(node)) { break; }\\r\\n\\r\\n                node = node.parentNode;\\r\\n            }\\r\\n            return null;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * find nearest ancestor only single child blood line and predicate hit\\r\\n         *\\r\\n         * @param {Node} node\\r\\n         * @param {Function} pred - predicate function\\r\\n         */\\r\\n        var singleChildAncestor = function(node, pred) {\\r\\n            node = node.parentNode;\\r\\n\\r\\n            while (node) {\\r\\n                if (nodeLength(node) !== 1) { break; }\\r\\n                if (pred(node)) { return node; }\\r\\n                if (isEditable(node)) { break; }\\r\\n\\r\\n                node = node.parentNode;\\r\\n            }\\r\\n            return null;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns new array of ancestor nodes (until predicate hit).\\r\\n         *\\r\\n         * @param {Node} node\\r\\n         * @param {Function} [optional] pred - predicate function\\r\\n         */\\r\\n        var listAncestor = function(node, pred) {\\r\\n            pred = pred || func.fail;\\r\\n\\r\\n            var ancestors = [];\\r\\n            ancestor(node, function(el) {\\r\\n                if (!isEditable(el)) {\\r\\n                    ancestors.push(el);\\r\\n                }\\r\\n\\r\\n                return pred(el);\\r\\n            });\\r\\n            return ancestors;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * find farthest ancestor predicate hit\\r\\n         */\\r\\n        var lastAncestor = function(node, pred) {\\r\\n            var ancestors = listAncestor(node);\\r\\n            return list.last(ancestors.filter(pred));\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns common ancestor node between two nodes.\\r\\n         *\\r\\n         * @param {Node} nodeA\\r\\n         * @param {Node} nodeB\\r\\n         */\\r\\n        var commonAncestor = function(nodeA, nodeB) {\\r\\n            var ancestors = listAncestor(nodeA);\\r\\n            for (var n = nodeB; n; n = n.parentNode) {\\r\\n                if ($.inArray(n, ancestors) > -1) { return n; }\\r\\n            }\\r\\n            return null; // difference document area\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * listing all previous siblings (until predicate hit).\\r\\n         *\\r\\n         * @param {Node} node\\r\\n         * @param {Function} [optional] pred - predicate function\\r\\n         */\\r\\n        var listPrev = function(node, pred) {\\r\\n            pred = pred || func.fail;\\r\\n\\r\\n            var nodes = [];\\r\\n            while (node) {\\r\\n                if (pred(node)) { break; }\\r\\n                nodes.push(node);\\r\\n                node = node.previousSibling;\\r\\n            }\\r\\n            return nodes;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * listing next siblings (until predicate hit).\\r\\n         *\\r\\n         * @param {Node} node\\r\\n         * @param {Function} [pred] - predicate function\\r\\n         */\\r\\n        var listNext = function(node, pred) {\\r\\n            pred = pred || func.fail;\\r\\n\\r\\n            var nodes = [];\\r\\n            while (node) {\\r\\n                if (pred(node)) { break; }\\r\\n                nodes.push(node);\\r\\n                node = node.nextSibling;\\r\\n            }\\r\\n            return nodes;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * listing descendant nodes\\r\\n         *\\r\\n         * @param {Node} node\\r\\n         * @param {Function} [pred] - predicate function\\r\\n         */\\r\\n        var listDescendant = function(node, pred) {\\r\\n            var descendents = [];\\r\\n            pred = pred || func.ok;\\r\\n\\r\\n            // start DFS(depth first search) with node\\r\\n            (function fnWalk(current) {\\r\\n                if (node !== current && pred(current)) {\\r\\n                    descendents.push(current);\\r\\n                }\\r\\n                for (var idx = 0, len = current.childNodes.length; idx < len; idx++) {\\r\\n                    fnWalk(current.childNodes[idx]);\\r\\n                }\\r\\n            })(node);\\r\\n\\r\\n            return descendents;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * wrap node with new tag.\\r\\n         *\\r\\n         * @param {Node} node\\r\\n         * @param {Node} tagName of wrapper\\r\\n         * @return {Node} - wrapper\\r\\n         */\\r\\n        var wrap = function(node, wrapperName) {\\r\\n            var parent = node.parentNode;\\r\\n            var wrapper = $('<' + wrapperName + '>')[0];\\r\\n\\r\\n            parent.insertBefore(wrapper, node);\\r\\n            wrapper.appendChild(node);\\r\\n\\r\\n            return wrapper;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * insert node after preceding\\r\\n         *\\r\\n         * @param {Node} node\\r\\n         * @param {Node} preceding - predicate function\\r\\n         */\\r\\n        var insertAfter = function(node, preceding) {\\r\\n            var next = preceding.nextSibling, parent = preceding.parentNode;\\r\\n            if (next) {\\r\\n                parent.insertBefore(node, next);\\r\\n            } else {\\r\\n                parent.appendChild(node);\\r\\n            }\\r\\n            return node;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * append elements.\\r\\n         *\\r\\n         * @param {Node} node\\r\\n         * @param {Collection} aChild\\r\\n         */\\r\\n        var appendChildNodes = function(node, aChild) {\\r\\n            $.each(aChild, function(idx, child) {\\r\\n                node.appendChild(child);\\r\\n            });\\r\\n            return node;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns whether boundaryPoint is left edge or not.\\r\\n         *\\r\\n         * @param {BoundaryPoint} point\\r\\n         * @return {Boolean}\\r\\n         */\\r\\n        var isLeftEdgePoint = function(point) {\\r\\n            return point.offset === 0;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns whether boundaryPoint is right edge or not.\\r\\n         *\\r\\n         * @param {BoundaryPoint} point\\r\\n         * @return {Boolean}\\r\\n         */\\r\\n        var isRightEdgePoint = function(point) {\\r\\n            return point.offset === nodeLength(point.node);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns whether boundaryPoint is edge or not.\\r\\n         *\\r\\n         * @param {BoundaryPoint} point\\r\\n         * @return {Boolean}\\r\\n         */\\r\\n        var isEdgePoint = function(point) {\\r\\n            return isLeftEdgePoint(point) || isRightEdgePoint(point);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns wheter node is left edge of ancestor or not.\\r\\n         *\\r\\n         * @param {Node} node\\r\\n         * @param {Node} ancestor\\r\\n         * @return {Boolean}\\r\\n         */\\r\\n        var isLeftEdgeOf = function(node, ancestor) {\\r\\n            while (node && node !== ancestor) {\\r\\n                if (position(node) !== 0) {\\r\\n                    return false;\\r\\n                }\\r\\n                node = node.parentNode;\\r\\n            }\\r\\n\\r\\n            return true;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns whether node is right edge of ancestor or not.\\r\\n         *\\r\\n         * @param {Node} node\\r\\n         * @param {Node} ancestor\\r\\n         * @return {Boolean}\\r\\n         */\\r\\n        var isRightEdgeOf = function(node, ancestor) {\\r\\n            while (node && node !== ancestor) {\\r\\n                if (position(node) !== nodeLength(node.parentNode) - 1) {\\r\\n                    return false;\\r\\n                }\\r\\n                node = node.parentNode;\\r\\n            }\\r\\n\\r\\n            return true;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns offset from parent.\\r\\n         *\\r\\n         * @param {Node} node\\r\\n         */\\r\\n        var position = function(node) {\\r\\n            var offset = 0;\\r\\n            while ((node = node.previousSibling)) {\\r\\n                offset += 1;\\r\\n            }\\r\\n            return offset;\\r\\n        };\\r\\n\\r\\n        var hasChildren = function(node) {\\r\\n            return !!(node && node.childNodes && node.childNodes.length);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns previous boundaryPoint\\r\\n         *\\r\\n         * @param {BoundaryPoint} point\\r\\n         * @param {Boolean} isSkipInnerOffset\\r\\n         * @return {BoundaryPoint}\\r\\n         */\\r\\n        var prevPoint = function(point, isSkipInnerOffset) {\\r\\n            var node, offset;\\r\\n\\r\\n            if (point.offset === 0) {\\r\\n                if (isEditable(point.node)) {\\r\\n                    return null;\\r\\n                }\\r\\n\\r\\n                node = point.node.parentNode;\\r\\n                offset = position(point.node);\\r\\n            } else if (hasChildren(point.node)) {\\r\\n                node = point.node.childNodes[point.offset - 1];\\r\\n                offset = nodeLength(node);\\r\\n            } else {\\r\\n                node = point.node;\\r\\n                offset = isSkipInnerOffset ? 0 : point.offset - 1;\\r\\n            }\\r\\n\\r\\n            return {\\r\\n                node: node,\\r\\n                offset: offset\\r\\n            };\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns next boundaryPoint\\r\\n         *\\r\\n         * @param {BoundaryPoint} point\\r\\n         * @param {Boolean} isSkipInnerOffset\\r\\n         * @return {BoundaryPoint}\\r\\n         */\\r\\n        var nextPoint = function(point, isSkipInnerOffset) {\\r\\n            var node, offset;\\r\\n\\r\\n            if (nodeLength(point.node) === point.offset) {\\r\\n                if (isEditable(point.node)) {\\r\\n                    return null;\\r\\n                }\\r\\n\\r\\n                node = point.node.parentNode;\\r\\n                offset = position(point.node) + 1;\\r\\n            } else if (hasChildren(point.node)) {\\r\\n                node = point.node.childNodes[point.offset];\\r\\n                offset = 0;\\r\\n            } else {\\r\\n                node = point.node;\\r\\n                offset = isSkipInnerOffset ? nodeLength(point.node) : point.offset + 1;\\r\\n            }\\r\\n\\r\\n            return {\\r\\n                node: node,\\r\\n                offset: offset\\r\\n            };\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns whether pointA and pointB is same or not.\\r\\n         *\\r\\n         * @param {BoundaryPoint} pointA\\r\\n         * @param {BoundaryPoint} pointB\\r\\n         * @return {Boolean}\\r\\n         */\\r\\n        var isSamePoint = function(pointA, pointB) {\\r\\n            return pointA.node === pointB.node && pointA.offset === pointB.offset;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns whether point is visible (can set cursor) or not.\\r\\n         *\\r\\n         * @param {BoundaryPoint} point\\r\\n         * @return {Boolean}\\r\\n         */\\r\\n        var isVisiblePoint = function(point) {\\r\\n            if (isText(point.node) || !hasChildren(point.node) || isEmpty(point.node)) {\\r\\n                return true;\\r\\n            }\\r\\n\\r\\n            var leftNode = point.node.childNodes[point.offset - 1];\\r\\n            var rightNode = point.node.childNodes[point.offset];\\r\\n            if ((!leftNode || isVoid(leftNode)) && (!rightNode || isVoid(rightNode))) {\\r\\n                return true;\\r\\n            }\\r\\n\\r\\n            return false;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method prevPointUtil\\r\\n         *\\r\\n         * @param {BoundaryPoint} point\\r\\n         * @param {Function} pred\\r\\n         * @return {BoundaryPoint}\\r\\n         */\\r\\n        var prevPointUntil = function(point, pred) {\\r\\n            while (point) {\\r\\n               \";\n  builder.string += \" if (pred(point)) {\\r\\n                    return point;\\r\\n                }\\r\\n\\r\\n                point = prevPoint(point);\\r\\n            }\\r\\n\\r\\n            return null;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method nextPointUntil\\r\\n         *\\r\\n         * @param {BoundaryPoint} point\\r\\n         * @param {Function} pred\\r\\n         * @return {BoundaryPoint}\\r\\n         */\\r\\n        var nextPointUntil = function(point, pred) {\\r\\n            while (point) {\\r\\n                if (pred(point)) {\\r\\n                    return point;\\r\\n                }\\r\\n\\r\\n                point = nextPoint(point);\\r\\n            }\\r\\n\\r\\n            return null;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns whether point has character or not.\\r\\n         *\\r\\n         * @param {Point} point\\r\\n         * @return {Boolean}\\r\\n         */\\r\\n        var isCharPoint = function(point) {\\r\\n            if (!isText(point.node)) {\\r\\n                return false;\\r\\n            }\\r\\n\\r\\n            var ch = point.node.nodeValue.charAt(point.offset - 1);\\r\\n            return ch && (ch !== ' ' && ch !== NBSP_CHAR);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method walkPoint\\r\\n         *\\r\\n         * @param {BoundaryPoint} startPoint\\r\\n         * @param {BoundaryPoint} endPoint\\r\\n         * @param {Function} handler\\r\\n         * @param {Boolean} isSkipInnerOffset\\r\\n         */\\r\\n        var walkPoint = function(startPoint, endPoint, handler, isSkipInnerOffset) {\\r\\n            var point = startPoint;\\r\\n\\r\\n            while (point) {\\r\\n                handler(point);\\r\\n\\r\\n                if (isSamePoint(point, endPoint)) {\\r\\n                    break;\\r\\n                }\\r\\n\\r\\n                var isSkipOffset = isSkipInnerOffset &&\\r\\n                    startPoint.node !== point.node &&\\r\\n                    endPoint.node !== point.node;\\r\\n                point = nextPoint(point, isSkipOffset);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method makeOffsetPath\\r\\n         *\\r\\n         * return offsetPath(array of offset) from ancestor\\r\\n         *\\r\\n         * @param {Node} ancestor - ancestor node\\r\\n         * @param {Node} node\\r\\n         */\\r\\n        var makeOffsetPath = function(ancestor, node) {\\r\\n            var ancestors = listAncestor(node, func.eq(ancestor));\\r\\n            return $.map(ancestors, position).reverse();\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method fromOffsetPath\\r\\n         *\\r\\n         * return element from offsetPath(array of offset)\\r\\n         *\\r\\n         * @param {Node} ancestor - ancestor node\\r\\n         * @param {array} offsets - offsetPath\\r\\n         */\\r\\n        var fromOffsetPath = function(ancestor, offsets) {\\r\\n            var current = ancestor;\\r\\n            for (var i = 0, len = offsets.length; i < len; i++) {\\r\\n                if (current.childNodes.length <= offsets[i]) {\\r\\n                    current = current.childNodes[current.childNodes.length - 1];\\r\\n                } else {\\r\\n                    current = current.childNodes[offsets[i]];\\r\\n                }\\r\\n            }\\r\\n            return current;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method splitNode\\r\\n         *\\r\\n         * split element or #text\\r\\n         *\\r\\n         * @param {BoundaryPoint} point\\r\\n         * @param {Object} [options]\\r\\n         * @param {Boolean} [options.isSkipPaddingBlankHTML] - default: false\\r\\n         * @param {Boolean} [options.isNotSplitEdgePoint] - default: false\\r\\n         * @return {Node} right node of boundaryPoint\\r\\n         */\\r\\n        var splitNode = function(point, options) {\\r\\n            var isSkipPaddingBlankHTML = options && options.isSkipPaddingBlankHTML;\\r\\n            var isNotSplitEdgePoint = options && options.isNotSplitEdgePoint;\\r\\n\\r\\n            // edge case\\r\\n            if (isEdgePoint(point) && (isText(point.node) || isNotSplitEdgePoint)) {\\r\\n                if (isLeftEdgePoint(point)) {\\r\\n                    return point.node;\\r\\n                } else if (isRightEdgePoint(point)) {\\r\\n                    return point.node.nextSibling;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            // split #text\\r\\n            if (isText(point.node)) {\\r\\n                return point.node.splitText(point.offset);\\r\\n            } else {\\r\\n                var childNode = point.node.childNodes[point.offset];\\r\\n                var clone = insertAfter(point.node.cloneNode(false), point.node);\\r\\n                appendChildNodes(clone, listNext(childNode));\\r\\n\\r\\n                if (!isSkipPaddingBlankHTML) {\\r\\n                    paddingBlankHTML(point.node);\\r\\n                    paddingBlankHTML(clone);\\r\\n                }\\r\\n\\r\\n                return clone;\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method splitTree\\r\\n         *\\r\\n         * split tree by point\\r\\n         *\\r\\n         * @param {Node} root - split root\\r\\n         * @param {BoundaryPoint} point\\r\\n         * @param {Object} [options]\\r\\n         * @param {Boolean} [options.isSkipPaddingBlankHTML] - default: false\\r\\n         * @param {Boolean} [options.isNotSplitEdgePoint] - default: false\\r\\n         * @return {Node} right node of boundaryPoint\\r\\n         */\\r\\n        var splitTree = function(root, point, options) {\\r\\n            // ex) [#text, <span>, <p>]\\r\\n            var ancestors = listAncestor(point.node, func.eq(root));\\r\\n\\r\\n            if (!ancestors.length) {\\r\\n                return null;\\r\\n            } else if (ancestors.length === 1) {\\r\\n                return splitNode(point, options);\\r\\n            }\\r\\n\\r\\n            return ancestors.reduce(function(node, parent) {\\r\\n                if (node === point.node) {\\r\\n                    node = splitNode(point, options);\\r\\n                }\\r\\n\\r\\n                return splitNode({\\r\\n                    node: parent,\\r\\n                    offset: node ? dom.position(node) : nodeLength(parent)\\r\\n                }, options);\\r\\n            });\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * split point\\r\\n         *\\r\\n         * @param {Point} point\\r\\n         * @param {Boolean} isInline\\r\\n         * @return {Object}\\r\\n         */\\r\\n        var splitPoint = function(point, isInline) {\\r\\n            // find splitRoot, container\\r\\n            //  - inline: splitRoot is a child of paragraph\\r\\n            //  - block: splitRoot is a child of bodyContainer\\r\\n            var pred = isInline ? isPara : isBodyContainer;\\r\\n            var ancestors = listAncestor(point.node, pred);\\r\\n            var topAncestor = list.last(ancestors) || point.node;\\r\\n\\r\\n            var splitRoot, container;\\r\\n            if (pred(topAncestor)) {\\r\\n                splitRoot = ancestors[ancestors.length - 2];\\r\\n                container = topAncestor;\\r\\n            } else {\\r\\n                splitRoot = topAncestor;\\r\\n                container = splitRoot.parentNode;\\r\\n            }\\r\\n\\r\\n            // if splitRoot is exists, split with splitTree\\r\\n            var pivot = splitRoot && splitTree(splitRoot, point, {\\r\\n                    isSkipPaddingBlankHTML: isInline,\\r\\n                    isNotSplitEdgePoint: isInline\\r\\n                });\\r\\n\\r\\n            // if container is point.node, find pivot with point.offset\\r\\n            if (!pivot && container === point.node) {\\r\\n                pivot = point.node.childNodes[point.offset];\\r\\n            }\\r\\n\\r\\n            return {\\r\\n                rightNode: pivot,\\r\\n                container: container\\r\\n            };\\r\\n        };\\r\\n\\r\\n        var create = function(nodeName) {\\r\\n            return document.createElement(nodeName);\\r\\n        };\\r\\n\\r\\n        var createText = function(text) {\\r\\n            return document.createTextNode(text);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method remove\\r\\n         *\\r\\n         * remove node, (isRemoveChild: remove child or not)\\r\\n         *\\r\\n         * @param {Node} node\\r\\n         * @param {Boolean} isRemoveChild\\r\\n         */\\r\\n        var remove = function(node, isRemoveChild) {\\r\\n            if (!node || !node.parentNode) { return; }\\r\\n            if (node.removeNode) { return node.removeNode(isRemoveChild); }\\r\\n\\r\\n            var parent = node.parentNode;\\r\\n            if (!isRemoveChild) {\\r\\n                var nodes = [];\\r\\n                var i, len;\\r\\n                for (i = 0, len = node.childNodes.length; i < len; i++) {\\r\\n                    nodes.push(node.childNodes[i]);\\r\\n                }\\r\\n\\r\\n                for (i = 0, len = nodes.length; i < len; i++) {\\r\\n                    parent.insertBefore(nodes[i], node);\\r\\n                }\\r\\n            }\\r\\n\\r\\n            parent.removeChild(node);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method removeWhile\\r\\n         *\\r\\n         * @param {Node} node\\r\\n         * @param {Function} pred\\r\\n         */\\r\\n        var removeWhile = function(node, pred) {\\r\\n            while (node) {\\r\\n                if (isEditable(node) || !pred(node)) {\\r\\n                    break;\\r\\n                }\\r\\n\\r\\n                var parent = node.parentNode;\\r\\n                remove(node);\\r\\n                node = parent;\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method replace\\r\\n         *\\r\\n         * replace node with provided nodeName\\r\\n         *\\r\\n         * @param {Node} node\\r\\n         * @param {String} nodeName\\r\\n         * @return {Node} - new node\\r\\n         */\\r\\n        var replace = function(node, nodeName) {\\r\\n            if (node.nodeName.toUpperCase() === nodeName.toUpperCase()) {\\r\\n                return node;\\r\\n            }\\r\\n\\r\\n            var newNode = create(nodeName);\\r\\n\\r\\n            if (node.style.cssText) {\\r\\n                newNode.style.cssText = node.style.cssText;\\r\\n            }\\r\\n\\r\\n            appendChildNodes(newNode, list.from(node.childNodes));\\r\\n            insertAfter(newNode, node);\\r\\n            remove(node);\\r\\n\\r\\n            return newNode;\\r\\n        };\\r\\n\\r\\n        var isTextarea = makePredByNodeName('TEXTAREA');\\r\\n\\r\\n        /**\\r\\n         * @param {jQuery} $node\\r\\n         * @param {Boolean} [stripLinebreaks] - default: false\\r\\n         */\\r\\n        var value = function($node, stripLinebreaks) {\\r\\n            var val = isTextarea($node[0]) ? $node.val() : $node.html();\\r\\n            if (stripLinebreaks) {\\r\\n                return val.replace(/[\\\\n\\\\r]/g, '');\\r\\n            }\\r\\n            return val;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method html\\r\\n         *\\r\\n         * get the HTML contents of node\\r\\n         *\\r\\n         * @param {jQuery} $node\\r\\n         * @param {Boolean} [isNewlineOnBlock]\\r\\n         */\\r\\n        var html = function($node, isNewlineOnBlock) {\\r\\n            var markup = value($node);\\r\\n\\r\\n            if (isNewlineOnBlock) {\\r\\n                var regexTag = /<(\\\\/?)(\\\\b(?!!)[^>\\\\s]*)(.*?)(\\\\s*\\\\/?>)/g;\\r\\n                markup = markup.replace(regexTag, function(match, endSlash, name) {\\r\\n                    name = name.toUpperCase();\\r\\n                    var isEndOfInlineContainer = /^DIV|^TD|^TH|^P|^LI|^H[1-7]/.test(name) &&\\r\\n                        !!endSlash;\\r\\n                    var isBlockNode = /^BLOCKQUOTE|^TABLE|^TBODY|^TR|^HR|^UL|^OL/.test(name);\\r\\n\\r\\n                    return match + ((isEndOfInlineContainer || isBlockNode) ? '\\\\n' : '');\\r\\n                });\\r\\n                markup = $.trim(markup);\\r\\n            }\\r\\n\\r\\n            return markup;\\r\\n        };\\r\\n\\r\\n        return {\\r\\n            /** @property {String} NBSP_CHAR */\\r\\n            NBSP_CHAR: NBSP_CHAR,\\r\\n            /** @property {String} ZERO_WIDTH_NBSP_CHAR */\\r\\n            ZERO_WIDTH_NBSP_CHAR: ZERO_WIDTH_NBSP_CHAR,\\r\\n            /** @property {String} blank */\\r\\n            blank: blankHTML,\\r\\n            /** @property {String} emptyPara */\\r\\n            emptyPara: '<p>' + blankHTML + '<\\/p>',\\r\\n            makePredByNodeName: makePredByNodeName,\\r\\n            isEditable: isEditable,\\r\\n            isControlSizing: isControlSizing,\\r\\n            buildLayoutInfo: buildLayoutInfo,\\r\\n            makeLayoutInfo: makeLayoutInfo,\\r\\n            isText: isText,\\r\\n            isVoid: isVoid,\\r\\n            isPara: isPara,\\r\\n            isPurePara: isPurePara,\\r\\n            isInline: isInline,\\r\\n            isBlock: func.not(isInline),\\r\\n            isBodyInline: isBodyInline,\\r\\n            isBody: isBody,\\r\\n            isParaInline: isParaInline,\\r\\n            isList: isList,\\r\\n            isTable: isTable,\\r\\n            isCell: isCell,\\r\\n            isBlockquote: isBlockquote,\\r\\n            isBodyContainer: isBodyContainer,\\r\\n            isAnchor: isAnchor,\\r\\n            isDiv: makePredByNodeName('DIV'),\\r\\n            isLi: isLi,\\r\\n            isBR: makePredByNodeName('BR'),\\r\\n            isSpan: makePredByNodeName('SPAN'),\\r\\n            isB: makePredByNodeName('B'),\\r\\n            isU: makePredByNodeName('U'),\\r\\n            isS: makePredByNodeName('S'),\\r\\n            isI: makePredByNodeName('I'),\\r\\n            isImg: makePredByNodeName('IMG'),\\r\\n            isTextarea: isTextarea,\\r\\n            isEmpty: isEmpty,\\r\\n            isEmptyAnchor: func.and(isAnchor, isEmpty),\\r\\n            isClosestSibling: isClosestSibling,\\r\\n            withClosestSiblings: withClosestSiblings,\\r\\n            nodeLength: nodeLength,\\r\\n            isLeftEdgePoint: isLeftEdgePoint,\\r\\n            isRightEdgePoint: isRightEdgePoint,\\r\\n            isEdgePoint: isEdgePoint,\\r\\n            isLeftEdgeOf: isLeftEdgeOf,\\r\\n            isRightEdgeOf: isRightEdgeOf,\\r\\n            prevPoint: prevPoint,\\r\\n            nextPoint: nextPoint,\\r\\n            isSamePoint: isSamePoint,\\r\\n            isVisiblePoint: isVisiblePoint,\\r\\n            prevPointUntil: prevPointUntil,\\r\\n            nextPointUntil: nextPointUntil,\\r\\n            isCharPoint: isCharPoint,\\r\\n            walkPoint: walkPoint,\\r\\n            ancestor: ancestor,\\r\\n            singleChildAncestor: singleChildAncestor,\\r\\n            listAncestor: listAncestor,\\r\\n            lastAncestor: lastAncestor,\\r\\n            listNext: listNext,\\r\\n            listPrev: listPrev,\\r\\n            listDescendant: listDescendant,\\r\\n            commonAncestor: commonAncestor,\\r\\n            wrap: wrap,\\r\\n            insertAfter: insertAfter,\\r\\n            appendChildNodes: appendChildNodes,\\r\\n            position: position,\\r\\n            hasChildren: hasChildren,\\r\\n            makeOffsetPath: makeOffsetPath,\\r\\n            fromOffsetPath: fromOffsetPath,\\r\\n            splitTree: splitTree,\\r\\n            splitPoint: splitPoint,\\r\\n            create: create,\\r\\n            createText: createText,\\r\\n            remove: remove,\\r\\n            removeWhile: removeWhile,\\r\\n            replace: replace,\\r\\n            html: html,\\r\\n            value: value\\r\\n        };\\r\\n    })();\\r\\n\\r\\n\\r\\n    var range = (function() {\\r\\n\\r\\n        /**\\r\\n         * return boundaryPoint from TextRange, inspired by Andy Na's HuskyRange.js\\r\\n         *\\r\\n         * @param {TextRange} textRange\\r\\n         * @param {Boolean} isStart\\r\\n         * @return {BoundaryPoint}\\r\\n         *\\r\\n         * @see http://msdn.microsoft.com/en-us/library/ie/ms535872(v=vs.85).aspx\\r\\n         */\\r\\n        var textRangeToPoint = function(textRange, isStart) {\\r\\n            var container = textRange.parentElement(), offset;\\r\\n\\r\\n            var tester = document.body.createTextRange(), prevContainer;\\r\\n            var childNodes = list.from(container.childNodes);\\r\\n            for (offset = 0; offset < childNodes.length; offset++) {\\r\\n                if (dom.isText(childNodes[offset])) {\\r\\n                    continue;\\r\\n                }\\r\\n                tester.moveToElementText(childNodes[offset]);\\r\\n                if (tester.compareEndPoints('StartToStart', textRange) >= 0) {\\r\\n                    break;\\r\\n                }\\r\\n                prevContainer = childNodes[offset];\\r\\n            }\\r\\n\\r\\n            if (offset !== 0 && dom.isText(childNodes[offset - 1])) {\\r\\n                var textRangeStart = document.body.createTextRange(), curTextNode = null;\\r\\n                textRangeStart.moveToElementText(prevContainer || container);\\r\\n                textRangeStart.collapse(!prevContainer);\\r\\n                curTextNode = prevContainer ? prevContainer.nextSibling : container.firstChild;\\r\\n\\r\\n                var pointTester = textRange.duplicate();\\r\\n                pointTester.setEndPoint('StartToStart', textRangeStart);\\r\\n                var textCount = pointTester.text.replace(/[\\\\r\\\\n]/g, '').length;\\r\\n\\r\\n                while (textCount > curTextNode.nodeValue.length && curTextNode.nextSibling) {\\r\\n                    textCount -= curTextNode.nodeValue.length;\\r\\n                    curTextNode = curTextNode.nextSibling;\\r\\n                }\\r\\n\\r\\n                /* jshint ignore:start */\\r\\n                var dummy = curTextNode.nodeValue; // enforce IE to re-reference curTextNode, hack\\r\\n                /* jshint ignore:end */\\r\\n\\r\\n                if (isStart && curTextN\";\n  builder.string += \"ode.nextSibling && dom.isText(curTextNode.nextSibling) &&\\r\\n                    textCount === curTextNode.nodeValue.length) {\\r\\n                    textCount -= curTextNode.nodeValue.length;\\r\\n                    curTextNode = curTextNode.nextSibling;\\r\\n                }\\r\\n\\r\\n                container = curTextNode;\\r\\n                offset = textCount;\\r\\n            }\\r\\n\\r\\n            return {\\r\\n                cont: container,\\r\\n                offset: offset\\r\\n            };\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * return TextRange from boundary point (inspired by google closure-library)\\r\\n         * @param {BoundaryPoint} point\\r\\n         * @return {TextRange}\\r\\n         */\\r\\n        var pointToTextRange = function(point) {\\r\\n            var textRangeInfo = function(container, offset) {\\r\\n                var node, isCollapseToStart;\\r\\n\\r\\n                if (dom.isText(container)) {\\r\\n                    var prevTextNodes = dom.listPrev(container, func.not(dom.isText));\\r\\n                    var prevContainer = list.last(prevTextNodes).previousSibling;\\r\\n                    node =  prevContainer || container.parentNode;\\r\\n                    offset += list.sum(list.tail(prevTextNodes), dom.nodeLength);\\r\\n                    isCollapseToStart = !prevContainer;\\r\\n                } else {\\r\\n                    node = container.childNodes[offset] || container;\\r\\n                    if (dom.isText(node)) {\\r\\n                        return textRangeInfo(node, 0);\\r\\n                    }\\r\\n\\r\\n                    offset = 0;\\r\\n                    isCollapseToStart = false;\\r\\n                }\\r\\n\\r\\n                return {\\r\\n                    node: node,\\r\\n                    collapseToStart: isCollapseToStart,\\r\\n                    offset: offset\\r\\n                };\\r\\n            };\\r\\n\\r\\n            var textRange = document.body.createTextRange();\\r\\n            var info = textRangeInfo(point.node, point.offset);\\r\\n\\r\\n            textRange.moveToElementText(info.node);\\r\\n            textRange.collapse(info.collapseToStart);\\r\\n            textRange.moveStart('character', info.offset);\\r\\n            return textRange;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * Wrapped Range\\r\\n         *\\r\\n         * @constructor\\r\\n         * @param {Node} sc - start container\\r\\n         * @param {Number} so - start offset\\r\\n         * @param {Node} ec - end container\\r\\n         * @param {Number} eo - end offset\\r\\n         */\\r\\n        var WrappedRange = function(sc, so, ec, eo) {\\r\\n            this.sc = sc;\\r\\n            this.so = so;\\r\\n            this.ec = ec;\\r\\n            this.eo = eo;\\r\\n\\r\\n            // nativeRange: get nativeRange from sc, so, ec, eo\\r\\n            var nativeRange = function() {\\r\\n                if (agent.isW3CRangeSupport) {\\r\\n                    var w3cRange = document.createRange();\\r\\n                    w3cRange.setStart(sc, so);\\r\\n                    w3cRange.setEnd(ec, eo);\\r\\n\\r\\n                    return w3cRange;\\r\\n                } else {\\r\\n                    var textRange = pointToTextRange({\\r\\n                        node: sc,\\r\\n                        offset: so\\r\\n                    });\\r\\n\\r\\n                    textRange.setEndPoint('EndToEnd', pointToTextRange({\\r\\n                        node: ec,\\r\\n                        offset: eo\\r\\n                    }));\\r\\n\\r\\n                    return textRange;\\r\\n                }\\r\\n            };\\r\\n\\r\\n            this.getPoints = function() {\\r\\n                return {\\r\\n                    sc: sc,\\r\\n                    so: so,\\r\\n                    ec: ec,\\r\\n                    eo: eo\\r\\n                };\\r\\n            };\\r\\n\\r\\n            this.getStartPoint = function() {\\r\\n                return {\\r\\n                    node: sc,\\r\\n                    offset: so\\r\\n                };\\r\\n            };\\r\\n\\r\\n            this.getEndPoint = function() {\\r\\n                return {\\r\\n                    node: ec,\\r\\n                    offset: eo\\r\\n                };\\r\\n            };\\r\\n\\r\\n            /**\\r\\n             * select update visible range\\r\\n             */\\r\\n            this.select = function() {\\r\\n                var nativeRng = nativeRange();\\r\\n                if (agent.isW3CRangeSupport) {\\r\\n                    var selection = document.getSelection();\\r\\n                    if (selection.rangeCount > 0) {\\r\\n                        selection.removeAllRanges();\\r\\n                    }\\r\\n                    selection.addRange(nativeRng);\\r\\n                } else {\\r\\n                    nativeRng.select();\\r\\n                }\\r\\n\\r\\n                return this;\\r\\n            };\\r\\n\\r\\n            /**\\r\\n             * @return {WrappedRange}\\r\\n             */\\r\\n            this.normalize = function() {\\r\\n\\r\\n                /**\\r\\n                 * @param {BoundaryPoint} point\\r\\n                 * @return {BoundaryPoint}\\r\\n                 */\\r\\n                var getVisiblePoint = function(point) {\\r\\n                    if (!dom.isVisiblePoint(point)) {\\r\\n                        if (dom.isLeftEdgePoint(point)) {\\r\\n                            point = dom.nextPointUntil(point, dom.isVisiblePoint);\\r\\n                        } else {\\r\\n                            point = dom.prevPointUntil(point, dom.isVisiblePoint);\\r\\n                        }\\r\\n                    }\\r\\n                    return point;\\r\\n                };\\r\\n\\r\\n                var startPoint = getVisiblePoint(this.getStartPoint());\\r\\n                var endPoint = getVisiblePoint(this.getEndPoint());\\r\\n\\r\\n                return new WrappedRange(\\r\\n                    startPoint.node,\\r\\n                    startPoint.offset,\\r\\n                    endPoint.node,\\r\\n                    endPoint.offset\\r\\n                );\\r\\n            };\\r\\n\\r\\n            /**\\r\\n             * returns matched nodes on range\\r\\n             *\\r\\n             * @param {Function} [pred] - predicate function\\r\\n             * @param {Object} [options]\\r\\n             * @param {Boolean} [options.includeAncestor]\\r\\n             * @param {Boolean} [options.fullyContains]\\r\\n             * @return {Node[]}\\r\\n             */\\r\\n            this.nodes = function(pred, options) {\\r\\n                pred = pred || func.ok;\\r\\n\\r\\n                var includeAncestor = options && options.includeAncestor;\\r\\n                var fullyContains = options && options.fullyContains;\\r\\n\\r\\n                // TODO compare points and sort\\r\\n                var startPoint = this.getStartPoint();\\r\\n                var endPoint = this.getEndPoint();\\r\\n\\r\\n                var nodes = [];\\r\\n                var leftEdgeNodes = [];\\r\\n\\r\\n                dom.walkPoint(startPoint, endPoint, function(point) {\\r\\n                    if (dom.isEditable(point.node)) {\\r\\n                        return;\\r\\n                    }\\r\\n\\r\\n                    var node;\\r\\n                    if (fullyContains) {\\r\\n                        if (dom.isLeftEdgePoint(point)) {\\r\\n                            leftEdgeNodes.push(point.node);\\r\\n                        }\\r\\n                        if (dom.isRightEdgePoint(point) && list.contains(leftEdgeNodes, point.node)) {\\r\\n                            node = point.node;\\r\\n                        }\\r\\n                    } else if (includeAncestor) {\\r\\n                        node = dom.ancestor(point.node, pred);\\r\\n                    } else {\\r\\n                        node = point.node;\\r\\n                    }\\r\\n\\r\\n                    if (node && pred(node)) {\\r\\n                        nodes.push(node);\\r\\n                    }\\r\\n                }, true);\\r\\n\\r\\n                return list.unique(nodes);\\r\\n            };\\r\\n\\r\\n            /**\\r\\n             * returns commonAncestor of range\\r\\n             * @return {Element} - commonAncestor\\r\\n             */\\r\\n            this.commonAncestor = function() {\\r\\n                return dom.commonAncestor(sc, ec);\\r\\n            };\\r\\n\\r\\n            /**\\r\\n             * returns expanded range by pred\\r\\n             *\\r\\n             * @param {Function} pred - predicate function\\r\\n             * @return {WrappedRange}\\r\\n             */\\r\\n            this.expand = function(pred) {\\r\\n                var startAncestor = dom.ancestor(sc, pred);\\r\\n                var endAncestor = dom.ancestor(ec, pred);\\r\\n\\r\\n                if (!startAncestor && !endAncestor) {\\r\\n                    return new WrappedRange(sc, so, ec, eo);\\r\\n                }\\r\\n\\r\\n                var boundaryPoints = this.getPoints();\\r\\n\\r\\n                if (startAncestor) {\\r\\n                    boundaryPoints.sc = startAncestor;\\r\\n                    boundaryPoints.so = 0;\\r\\n                }\\r\\n\\r\\n                if (endAncestor) {\\r\\n                    boundaryPoints.ec = endAncestor;\\r\\n                    boundaryPoints.eo = dom.nodeLength(endAncestor);\\r\\n                }\\r\\n\\r\\n                return new WrappedRange(\\r\\n                    boundaryPoints.sc,\\r\\n                    boundaryPoints.so,\\r\\n                    boundaryPoints.ec,\\r\\n                    boundaryPoints.eo\\r\\n                );\\r\\n            };\\r\\n\\r\\n            /**\\r\\n             * @param {Boolean} isCollapseToStart\\r\\n             * @return {WrappedRange}\\r\\n             */\\r\\n            this.collapse = function(isCollapseToStart) {\\r\\n                if (isCollapseToStart) {\\r\\n                    return new WrappedRange(sc, so, sc, so);\\r\\n                } else {\\r\\n                    return new WrappedRange(ec, eo, ec, eo);\\r\\n                }\\r\\n            };\\r\\n\\r\\n            /**\\r\\n             * splitText on range\\r\\n             */\\r\\n            this.splitText = function() {\\r\\n                var isSameContainer = sc === ec;\\r\\n                var boundaryPoints = this.getPoints();\\r\\n\\r\\n                if (dom.isText(ec) && !dom.isEdgePoint(this.getEndPoint())) {\\r\\n                    ec.splitText(eo);\\r\\n                }\\r\\n\\r\\n                if (dom.isText(sc) && !dom.isEdgePoint(this.getStartPoint())) {\\r\\n                    boundaryPoints.sc = sc.splitText(so);\\r\\n                    boundaryPoints.so = 0;\\r\\n\\r\\n                    if (isSameContainer) {\\r\\n                        boundaryPoints.ec = boundaryPoints.sc;\\r\\n                        boundaryPoints.eo = eo - so;\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                return new WrappedRange(\\r\\n                    boundaryPoints.sc,\\r\\n                    boundaryPoints.so,\\r\\n                    boundaryPoints.ec,\\r\\n                    boundaryPoints.eo\\r\\n                );\\r\\n            };\\r\\n\\r\\n            /**\\r\\n             * delete contents on range\\r\\n             * @return {WrappedRange}\\r\\n             */\\r\\n            this.deleteContents = function() {\\r\\n                if (this.isCollapsed()) {\\r\\n                    return this;\\r\\n                }\\r\\n\\r\\n                var rng = this.splitText();\\r\\n                var nodes = rng.nodes(null, {\\r\\n                    fullyContains: true\\r\\n                });\\r\\n\\r\\n                // find new cursor point\\r\\n                var point = dom.prevPointUntil(rng.getStartPoint(), function(point) {\\r\\n                    return !list.contains(nodes, point.node);\\r\\n                });\\r\\n\\r\\n                var emptyParents = [];\\r\\n                $.each(nodes, function(idx, node) {\\r\\n                    // find empty parents\\r\\n                    var parent = node.parentNode;\\r\\n                    if (point.node !== parent && dom.nodeLength(parent) === 1) {\\r\\n                        emptyParents.push(parent);\\r\\n                    }\\r\\n                    dom.remove(node, false);\\r\\n                });\\r\\n\\r\\n                // remove empty parents\\r\\n                $.each(emptyParents, function(idx, node) {\\r\\n                    dom.remove(node, false);\\r\\n                });\\r\\n\\r\\n                return new WrappedRange(\\r\\n                    point.node,\\r\\n                    point.offset,\\r\\n                    point.node,\\r\\n                    point.offset\\r\\n                ).normalize();\\r\\n            };\\r\\n\\r\\n            /**\\r\\n             * makeIsOn: return isOn(pred) function\\r\\n             */\\r\\n            var makeIsOn = function(pred) {\\r\\n                return function() {\\r\\n                    var ancestor = dom.ancestor(sc, pred);\\r\\n                    return !!ancestor && (ancestor === dom.ancestor(ec, pred));\\r\\n                };\\r\\n            };\\r\\n\\r\\n            // isOnEditable: judge whether range is on editable or not\\r\\n            this.isOnEditable = makeIsOn(dom.isEditable);\\r\\n            // isOnList: judge whether range is on list node or not\\r\\n            this.isOnList = makeIsOn(dom.isList);\\r\\n            // isOnAnchor: judge whether range is on anchor node or not\\r\\n            this.isOnAnchor = makeIsOn(dom.isAnchor);\\r\\n            // isOnAnchor: judge whether range is on cell node or not\\r\\n            this.isOnCell = makeIsOn(dom.isCell);\\r\\n\\r\\n            /**\\r\\n             * @param {Function} pred\\r\\n             * @return {Boolean}\\r\\n             */\\r\\n            this.isLeftEdgeOf = function(pred) {\\r\\n                if (!dom.isLeftEdgePoint(this.getStartPoint())) {\\r\\n                    return false;\\r\\n                }\\r\\n\\r\\n                var node = dom.ancestor(this.sc, pred);\\r\\n                return node && dom.isLeftEdgeOf(this.sc, node);\\r\\n            };\\r\\n\\r\\n            /**\\r\\n             * returns whether range was collapsed or not\\r\\n             */\\r\\n            this.isCollapsed = function() {\\r\\n                return sc === ec && so === eo;\\r\\n            };\\r\\n\\r\\n            /**\\r\\n             * wrap inline nodes which children of body with paragraph\\r\\n             *\\r\\n             * @return {WrappedRange}\\r\\n             */\\r\\n            this.wrapBodyInlineWithPara = function() {\\r\\n                if (dom.isBodyContainer(sc) && dom.isEmpty(sc)) {\\r\\n                    sc.innerHTML = dom.emptyPara;\\r\\n                    return new WrappedRange(sc.firstChild, 0, sc.firstChild, 0);\\r\\n                }\\r\\n\\r\\n                if (dom.isParaInline(sc) || dom.isPara(sc)) {\\r\\n                    return this.normalize();\\r\\n                }\\r\\n\\r\\n                // find inline top ancestor\\r\\n                var topAncestor;\\r\\n                if (dom.isInline(sc)) {\\r\\n                    var ancestors = dom.listAncestor(sc, func.not(dom.isInline));\\r\\n                    topAncestor = list.last(ancestors);\\r\\n                    if (!dom.isInline(topAncestor)) {\\r\\n                        topAncestor = ancestors[ancestors.length - 2] || sc.childNodes[so];\\r\\n                    }\\r\\n                } else {\\r\\n                    topAncestor = sc.childNodes[so > 0 ? so - 1 : 0];\\r\\n                }\\r\\n\\r\\n                // siblings not in paragraph\\r\\n                var inlineSiblings = dom.listPrev(topAncestor, dom.isParaInline).reverse();\\r\\n                inlineSiblings = inlineSiblings.concat(dom.listNext(topAncestor.nextSibling, dom.isParaInline));\\r\\n\\r\\n                // wrap with paragraph\\r\\n                if (inlineSiblings.length) {\\r\\n                    var para = dom.wrap(list.head(inlineSiblings), 'p');\\r\\n                    dom.appendChildNodes(para, list.tail(inlineSiblings));\\r\\n                }\\r\\n\\r\\n                return this.normalize();\\r\\n            };\\r\\n\\r\\n            /**\\r\\n             * insert node at current cursor\\r\\n             *\\r\\n             * @param {Node} node\\r\\n             * @return {Node}\\r\\n             */\\r\\n            this.insertNode = function(node) {\\r\\n                var rng = this.wrapBodyInlineWithPara().deleteContents();\\r\\n                var info = dom.splitPoint(rng.getStartPoint(), dom.isInline(node));\\r\\n\\r\\n                if (info.rightNode) {\\r\\n                    info.rightNode.parentNode.insertBefore(node, info.rightNode);\\r\\n                } else {\\r\\n                    info.container.appendChild(node);\\r\\n                }\\r\\n\\r\\n                return node;\\r\\n            };\\r\\n\\r\\n\\r\\n            /**\\r\\n             * insert html at current cursor\\r\\n             */\\r\\n            this.pasteHTML = function(markup) {\\r\\n                var self = this;\\r\\n                var contentsContainer = $('<div><\\/div>').html(markup)[0];\\r\\n                var childNodes = list.from(contentsContainer.childNodes);\\r\\n\\r\\n                this.wrapBodyInlineWithPara().deleteContents();\\r\\n\\r\\n                return $.map(childNodes.reverse(), function(childNode) {\\r\\n                    return self.insertNode(childNode);\\r\\n                }).reverse();\\r\\n            };\\r\\n\\r\\n            /**\\r\\n             * returns text in range\\r\\n             *\\r\\n             * @return {String}\\r\\n             */\\r\\n            this.toString = function() {\\r\\n                var nativeRng = nativeRange();\\r\\n                return agent.isW3CRangeSupport ? nativeRng.toString() : nativeRng.text;\\r\\n            };\\r\\n\\r\\n            /**\\r\\n             * ret\";\n  builder.string += \"urns range for word before cursor\\r\\n             *\\r\\n             * @param {Boolean} [findAfter] - find after cursor, default: false\\r\\n             * @return {WrappedRange}\\r\\n             */\\r\\n            this.getWordRange = function(findAfter) {\\r\\n                var endPoint = this.getEndPoint();\\r\\n\\r\\n                if (!dom.isCharPoint(endPoint)) {\\r\\n                    return this;\\r\\n                }\\r\\n\\r\\n                var startPoint = dom.prevPointUntil(endPoint, function(point) {\\r\\n                    return !dom.isCharPoint(point);\\r\\n                });\\r\\n\\r\\n                if (findAfter) {\\r\\n                    endPoint = dom.nextPointUntil(endPoint, function(point) {\\r\\n                        return !dom.isCharPoint(point);\\r\\n                    });\\r\\n                }\\r\\n\\r\\n                return new WrappedRange(\\r\\n                    startPoint.node,\\r\\n                    startPoint.offset,\\r\\n                    endPoint.node,\\r\\n                    endPoint.offset\\r\\n                );\\r\\n            };\\r\\n\\r\\n            /**\\r\\n             * create offsetPath bookmark\\r\\n             *\\r\\n             * @param {Node} editable\\r\\n             */\\r\\n            this.bookmark = function(editable) {\\r\\n                return {\\r\\n                    s: {\\r\\n                        path: dom.makeOffsetPath(editable, sc),\\r\\n                        offset: so\\r\\n                    },\\r\\n                    e: {\\r\\n                        path: dom.makeOffsetPath(editable, ec),\\r\\n                        offset: eo\\r\\n                    }\\r\\n                };\\r\\n            };\\r\\n\\r\\n            /**\\r\\n             * create offsetPath bookmark base on paragraph\\r\\n             *\\r\\n             * @param {Node[]} paras\\r\\n             */\\r\\n            this.paraBookmark = function(paras) {\\r\\n                return {\\r\\n                    s: {\\r\\n                        path: list.tail(dom.makeOffsetPath(list.head(paras), sc)),\\r\\n                        offset: so\\r\\n                    },\\r\\n                    e: {\\r\\n                        path: list.tail(dom.makeOffsetPath(list.last(paras), ec)),\\r\\n                        offset: eo\\r\\n                    }\\r\\n                };\\r\\n            };\\r\\n\\r\\n            /**\\r\\n             * getClientRects\\r\\n             * @return {Rect[]}\\r\\n             */\\r\\n            this.getClientRects = function() {\\r\\n                var nativeRng = nativeRange();\\r\\n                return nativeRng.getClientRects();\\r\\n            };\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @class core.range\\r\\n         *\\r\\n         * Data structure\\r\\n         *  * BoundaryPoint: a point of dom tree\\r\\n         *  * BoundaryPoints: two boundaryPoints corresponding to the start and the end of the Range\\r\\n         *\\r\\n         * See to http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-Position\\r\\n         *\\r\\n         * @singleton\\r\\n         * @alternateClassName range\\r\\n         */\\r\\n        return {\\r\\n            /**\\r\\n             * @method\\r\\n             *\\r\\n             * create Range Object From arguments or Browser Selection\\r\\n             *\\r\\n             * @param {Node} sc - start container\\r\\n             * @param {Number} so - start offset\\r\\n             * @param {Node} ec - end container\\r\\n             * @param {Number} eo - end offset\\r\\n             * @return {WrappedRange}\\r\\n             */\\r\\n            create : function(sc, so, ec, eo) {\\r\\n                if (!arguments.length) { // from Browser Selection\\r\\n                    if (agent.isW3CRangeSupport) {\\r\\n                        var selection = document.getSelection();\\r\\n                        if (!selection || selection.rangeCount === 0) {\\r\\n                            return null;\\r\\n                        } else if (dom.isBody(selection.anchorNode)) {\\r\\n                            // Firefox: returns entire body as range on initialization. We won't never need it.\\r\\n                            return null;\\r\\n                        }\\r\\n\\r\\n                        var nativeRng = selection.getRangeAt(0);\\r\\n                        sc = nativeRng.startContainer;\\r\\n                        so = nativeRng.startOffset;\\r\\n                        ec = nativeRng.endContainer;\\r\\n                        eo = nativeRng.endOffset;\\r\\n                    } else { // IE8: TextRange\\r\\n                        var textRange = document.selection.createRange();\\r\\n                        var textRangeEnd = textRange.duplicate();\\r\\n                        textRangeEnd.collapse(false);\\r\\n                        var textRangeStart = textRange;\\r\\n                        textRangeStart.collapse(true);\\r\\n\\r\\n                        var startPoint = textRangeToPoint(textRangeStart, true),\\r\\n                            endPoint = textRangeToPoint(textRangeEnd, false);\\r\\n\\r\\n                        // same visible point case: range was collapsed.\\r\\n                        if (dom.isText(startPoint.node) && dom.isLeftEdgePoint(startPoint) &&\\r\\n                            dom.isTextNode(endPoint.node) && dom.isRightEdgePoint(endPoint) &&\\r\\n                            endPoint.node.nextSibling === startPoint.node) {\\r\\n                            startPoint = endPoint;\\r\\n                        }\\r\\n\\r\\n                        sc = startPoint.cont;\\r\\n                        so = startPoint.offset;\\r\\n                        ec = endPoint.cont;\\r\\n                        eo = endPoint.offset;\\r\\n                    }\\r\\n                } else if (arguments.length === 2) { //collapsed\\r\\n                    ec = sc;\\r\\n                    eo = so;\\r\\n                }\\r\\n                return new WrappedRange(sc, so, ec, eo);\\r\\n            },\\r\\n\\r\\n            /**\\r\\n             * @method\\r\\n             *\\r\\n             * create WrappedRange from node\\r\\n             *\\r\\n             * @param {Node} node\\r\\n             * @return {WrappedRange}\\r\\n             */\\r\\n            createFromNode: function(node) {\\r\\n                var sc = node;\\r\\n                var so = 0;\\r\\n                var ec = node;\\r\\n                var eo = dom.nodeLength(ec);\\r\\n\\r\\n                // browsers can't target a picture or void node\\r\\n                if (dom.isVoid(sc)) {\\r\\n                    so = dom.listPrev(sc).length - 1;\\r\\n                    sc = sc.parentNode;\\r\\n                }\\r\\n                if (dom.isBR(ec)) {\\r\\n                    eo = dom.listPrev(ec).length - 1;\\r\\n                    ec = ec.parentNode;\\r\\n                } else if (dom.isVoid(ec)) {\\r\\n                    eo = dom.listPrev(ec).length;\\r\\n                    ec = ec.parentNode;\\r\\n                }\\r\\n\\r\\n                return this.create(sc, so, ec, eo);\\r\\n            },\\r\\n\\r\\n            /**\\r\\n             * create WrappedRange from node after position\\r\\n             *\\r\\n             * @param {Node} node\\r\\n             * @return {WrappedRange}\\r\\n             */\\r\\n            createFromNodeBefore: function(node) {\\r\\n                return this.createFromNode(node).collapse(true);\\r\\n            },\\r\\n\\r\\n            /**\\r\\n             * create WrappedRange from node after position\\r\\n             *\\r\\n             * @param {Node} node\\r\\n             * @return {WrappedRange}\\r\\n             */\\r\\n            createFromNodeAfter: function(node) {\\r\\n                return this.createFromNode(node).collapse();\\r\\n            },\\r\\n\\r\\n            /**\\r\\n             * @method\\r\\n             *\\r\\n             * create WrappedRange from bookmark\\r\\n             *\\r\\n             * @param {Node} editable\\r\\n             * @param {Object} bookmark\\r\\n             * @return {WrappedRange}\\r\\n             */\\r\\n            createFromBookmark : function(editable, bookmark) {\\r\\n                var sc = dom.fromOffsetPath(editable, bookmark.s.path);\\r\\n                var so = bookmark.s.offset;\\r\\n                var ec = dom.fromOffsetPath(editable, bookmark.e.path);\\r\\n                var eo = bookmark.e.offset;\\r\\n                return new WrappedRange(sc, so, ec, eo);\\r\\n            },\\r\\n\\r\\n            /**\\r\\n             * @method\\r\\n             *\\r\\n             * create WrappedRange from paraBookmark\\r\\n             *\\r\\n             * @param {Object} bookmark\\r\\n             * @param {Node[]} paras\\r\\n             * @return {WrappedRange}\\r\\n             */\\r\\n            createFromParaBookmark: function(bookmark, paras) {\\r\\n                var so = bookmark.s.offset;\\r\\n                var eo = bookmark.e.offset;\\r\\n                var sc = dom.fromOffsetPath(list.head(paras), bookmark.s.path);\\r\\n                var ec = dom.fromOffsetPath(list.last(paras), bookmark.e.path);\\r\\n\\r\\n                return new WrappedRange(sc, so, ec, eo);\\r\\n            }\\r\\n        };\\r\\n    })();\\r\\n\\r\\n    /**\\r\\n     * @class defaults\\r\\n     * @singleton\\r\\n     */\\r\\n    // >>>>>>> CK\\r\\n    var defaults = {\\r\\n        /** @property */\\r\\n        version: '0.6.9',\\r\\n\\r\\n        /**\\r\\n         * for event options, reference to EventHandler.attach\\r\\n         * @property {Object} options\\r\\n         * @property {String/Number} [options.width=null] set editor width\\r\\n         * @property {String/Number} [options.height=null] set editor height, ex) 300\\r\\n         * @property {String/Number} options.minHeight set minimum height of editor\\r\\n         * @property {String/Number} options.maxHeight\\r\\n         * @property {String/Number} options.focus\\r\\n         * @property {Number} options.tabsize\\r\\n         * @property {Boolean} options.styleWithSpan\\r\\n         * @property {Object} options.codemirror\\r\\n         * @property {Object} [options.codemirror.mode='text/html']\\r\\n         * @property {Object} [options.codemirror.htmlMode=true]\\r\\n         * @property {Object} [options.codemirror.lineNumbers=true]\\r\\n         * @property {String} [options.lang=en-US] language 'en-US', 'ko-KR', ...\\r\\n         * @property {String} [options.direction=null] text direction, ex) 'rtl'\\r\\n         * @property {Array} [options.toolbar]\\r\\n         * @property {Boolean} [options.airMode=false]\\r\\n         * @property {Array} [options.airPopover]\\r\\n         * @property {Fucntion} [options.onInit] initialize\\r\\n         * @property {Fucntion} [options.onsubmit]\\r\\n         */\\r\\n        options: {\\r\\n            // >>>>>>> CK extra options\\r\\n            defaultTextColor: '#212121',       // default text color (used by color tool)\\r\\n            defaultBackColor: '#ddd',          // default text color (used by color tool)\\r\\n            followingToolbar: true,            // make the toolbar follow on window scroll\\r\\n            otherStaticBarClass: \\\"staticTop\\\",  // default class for other static bars eventually used on webapp\\r\\n\\r\\n            width: null,                  // set editor width\\r\\n            height: null,                 // set editor height, ex) 300\\r\\n\\r\\n            minHeight: null,              // set minimum height of editor\\r\\n            maxHeight: null,              // set maximum height of editor\\r\\n\\r\\n            focus: false,                 // set focus to editable area after initializing materialnote\\r\\n\\r\\n            tabsize: 4,                   // size of tab ex) 2 or 4\\r\\n            styleWithSpan: true,          // style with span (Chrome and FF only)\\r\\n\\r\\n            disableLinkTarget: false,     // hide link Target Checkbox\\r\\n            disableDragAndDrop: false,    // disable drag and drop event\\r\\n            disableResizeEditor: false,   // disable resizing editor\\r\\n\\r\\n            shortcuts: true,              // enable keyboard shortcuts\\r\\n\\r\\n            placeholder: false,           // enable placeholder text\\r\\n            prettifyHtml: true,           // enable prettifying html while toggling codeview\\r\\n\\r\\n            iconPrefix: '',               // prefix for css icon classes\\r\\n            icons: {\\r\\n                font: {\\r\\n                    bold: 'format_bold',\\r\\n                    italic: 'format_italic',\\r\\n                    underline: 'format_underlined',\\r\\n                    clear: 'clear',\\r\\n                    height: 'format_size',\\r\\n                    strikethrough: 'strikethrough_s',\\r\\n                    superscript: 'vertical_align_top',\\r\\n                    subscript: 'vertical_align_bottom'\\r\\n                },\\r\\n                image: {\\r\\n                    image: 'image',\\r\\n                    floatLeft: 'format_align_left',\\r\\n                    floatRight: 'format_align_right',\\r\\n                    floatNone: 'format_align_justify',\\r\\n                    shapeRounded: 'crop_3_2',\\r\\n                    shapeCircle: 'panorama_fish_eye',\\r\\n                    shapeThumbnail: 'collections',\\r\\n                    bordered: 'border_outer',\\r\\n                    shapeNone: 'image',\\r\\n                    remove: 'delete'\\r\\n                },\\r\\n                link: {\\r\\n                    link: 'insert_link',\\r\\n                    unlink: 'clear',\\r\\n                    edit: 'create'\\r\\n                },\\r\\n                table: {\\r\\n                    table: 'border_all'\\r\\n                },\\r\\n                hr: {\\r\\n                    insert: 'add'\\r\\n                },\\r\\n                style: {\\r\\n                    style: 'border_color'\\r\\n                },\\r\\n                lists: {\\r\\n                    unordered: 'format_list_bulleted',\\r\\n                    ordered: 'format_list_numbered'\\r\\n                },\\r\\n                options: {\\r\\n                    help: 'help',\\r\\n                    fullscreen: 'settings_overscan',\\r\\n                    codeview: 'code'\\r\\n                },\\r\\n                paragraph: {\\r\\n                    paragraph: 'format_textdirection_l_to_r',\\r\\n                    outdent: 'format_indent_decrease',\\r\\n                    indent: 'format_indent_increase',\\r\\n                    left: 'format_align_left',\\r\\n                    center: 'format_align_center',\\r\\n                    right: 'format_align_right',\\r\\n                    justify: 'format_align_justify'\\r\\n                },\\r\\n                color: {\\r\\n                    recent: 'format_color_text'\\r\\n                },\\r\\n                history: {\\r\\n                    undo: 'undo',\\r\\n                    redo: 'redo'\\r\\n                },\\r\\n                misc: {\\r\\n                    check: 'check'\\r\\n                }\\r\\n            },\\r\\n\\r\\n            codemirror: {                 // codemirror options\\r\\n                mode: 'text/html',\\r\\n                htmlMode: true,\\r\\n                indentWithTabs: true,\\r\\n                tabSize: 4,\\r\\n                lineNumbers: true,\\r\\n                theme: 'monokai',\\r\\n                maxHighlightLength: 'Infinity'\\r\\n            },\\r\\n\\r\\n            // language\\r\\n            lang: 'en-US',                // language 'en-US', 'ko-KR', ...\\r\\n            direction: null,              // text direction, ex) 'rtl'\\r\\n\\r\\n            // toolbar\\r\\n            toolbar: [\\r\\n                ['style', ['style']],\\r\\n                ['font', ['bold', 'italic', 'underline', 'clear']],\\r\\n                // ['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']],\\r\\n                ['fontname', ['fontname']],\\r\\n                ['fontsize', ['fontsize']],\\r\\n                ['color', ['color']],\\r\\n                ['para', ['ul', 'ol', 'paragraph']],\\r\\n                ['height', ['height']],\\r\\n                ['table', ['table']],\\r\\n                ['insert', ['link', 'picture', 'hr']],\\r\\n                ['view', ['fullscreen', 'codeview']],\\r\\n                ['help', ['help']]\\r\\n            ],\\r\\n\\r\\n            plugin : {},\\r\\n\\r\\n            // air mode: inline editor\\r\\n            airMode: false,\\r\\n            // airPopover: [\\r\\n            //   ['style', ['style']],\\r\\n            //   ['font', ['bold', 'italic', 'underline', 'clear']],\\r\\n            //   ['fontname', ['fontname']],\\r\\n            //   ['color', ['color']],\\r\\n            //   ['para', ['ul', 'ol', 'paragraph']],\\r\\n            //   ['height', ['height']],\\r\\n            //   ['table', ['table']],\\r\\n            //   ['insert', ['link', 'picture']],\\r\\n            //   ['help', ['help']]\\r\\n            // ],\\r\\n            airPopover: [\\r\\n                ['color', ['color']],\\r\\n                ['font', ['bold', 'underline', 'clear']],\\r\\n                ['para', ['ul', 'paragraph']],\\r\\n                ['table', ['table']],\\r\\n                ['insert', ['link', 'picture']]\\r\\n            ],\\r\\n\\r\\n            // style tag\\r\\n            styleTags: ['p', 'blockquote', 'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\\r\\n\\r\\n            // default fontName\\r\\n            defaultFontName: 'Roboto',\\r\\n\\r\\n            // fontName\\r\\n            fontNames: [\\r\\n                'Roboto', 'Arial', 'Arial Black', 'Comic Sans MS', 'Courier New',\\r\\n                'Helvetica Neue', 'Helvetica', 'Impact', 'Times New Roman', 'Verdana'\\r\\n\";\n  builder.string += \"            ],\\r\\n            fontNamesIgnoreCheck: [],\\r\\n\\r\\n            fontSizes: ['12', '13', '14', '15', '16', '17', '18', '25', '37'],\\r\\n\\r\\n            // pallete colors(n x n)\\r\\n            colors: [//grey      brown      dpurple    purple     indigo     blue       cyan       green      lgreen     yellow     amber      orange     dorange    red        pink\\r\\n                ['#fafafa', '#efebe9', '#7e57c2', '#ab47bc', '#5c6bc0', '#42a5f5', '#26c6da', '#66bb6a', '#9ccc65', '#ffee58', '#ffca28', '#ffa726', '#ff7043', '#ef5350', '#ec407a'],\\r\\n                ['#f5f5f5', '#d7ccc8', '#673ab7', '#9c27b0', '#3f51b5', '#2196f3', '#00bcd4', '#4caf50', '#8bc34a', '#ffeb3b', '#ffc107', '#ff9800', '#ff5722', '#f44336', '#e91e63'],\\r\\n                ['#eeeeee', '#bcaaa4', '#5e35b1', '#8e24aa', '#3949ab', '#1e88e5', '#00acc1', '#43a047', '#7cb342', '#fdd835', '#ffb300', '#fb8c00', '#f4511e', '#e53935', '#d81b60'],\\r\\n                ['#e0e0e0', '#a1887f', '#512da8', '#7b1fa2', '#303f9f', '#1976d2', '#0097a7', '#388e3c', '#689f38', '#fbc02d', '#ffa000', '#f57c00', '#e64a19', '#d32f2f', '#c2185b'],\\r\\n                ['#bdbdbd', '#8d6e63', '#4527a0', '#6a1b9a', '#283593', '#1565c0', '#00838f', '#2e7d32', '#558b2f', '#f9a825', '#ff8f00', '#ef6c00', '#d84315', '#c62828', '#ad1457'],\\r\\n                ['#9e9e9e', '#795548', '#311b92', '#4a148c', '#1a237e', '#0d47a1', '#006064', '#1b5e20', '#33691e', '#f57f17', '#ff6f00', '#e65100', '#bf360c', '#b71c1c', '#880e4f'],\\r\\n                ['#757575', '#6d4c41', '#b388ff', '#ea80fc', '#8c9eff', '#82b1ff', '#84ffff', '#b9f6ca', '#ccff90', '#ffff8d', '#ffe57f', '#ffd180', '#ff9e80', '#ff8a80', '#ff80ab'],\\r\\n                ['#616161', '#5d4037', '#7c4dff', '#e040fb', '#536dfe', '#448aff', '#18ffff', '#69f0ae', '#b2ff59', '#ffff00', '#ffd740', '#ffab40', '#ff6e40', '#ff5252', '#ff4081'],\\r\\n                ['#424242', '#4e342e', '#651fff', '#d500f9', '#3d5afe', '#2979ff', '#00e5ff', '#00e676', '#76ff03', '#ffea00', '#ffc400', '#ff9100', '#ff3d00', '#ff1744', '#f50057'],\\r\\n                ['#212121', '#3e2723', '#6200ea', '#aa00ff', '#304ffe', '#2962ff', '#00b8d4', '#00c853', '#64dd17', '#ffd600', '#ffab00', '#ff6d00', '#dd2c00', '#d50000', '#c51162'],\\r\\n            ],\\r\\n            // pallete colors(n x n)\\r\\n            colorTitles: [\\r\\n                //grey            brown             dpurple                 purple             indigo             blue             cyan             green             lgreen                  yellow             amber             orange             dorange                 red             pink\\r\\n                ['grey lighten5', 'brown lighten5', 'deep-purple lighten1', 'purple lighten1', 'indigo lighten1', 'blue lighten1', 'cyan lighten1', 'green lighten1', 'light-green lighten1', 'yellow lighten1', 'amber lighten1', 'orange lighten1', 'deep-orange lighten1', 'red lighten1', 'pink lighten1'],\\r\\n                ['grey lighten4', 'brown lighten4', 'deep-purple',          'purple',          'indigo',          'blue',          'cyan',          'green',          'light-green',          'yellow',          'amber',          'orange',          'deep-orange',          'red',          'pink'         ],\\r\\n                ['grey lighten3', 'brown lighten3', 'deep-purple darken1',  'purple darken1',  'indigo darken1',  'blue darken1',  'cyan darken1',  'green darken1',  'light-green darken1',  'yellow darken1',  'amber darken1',  'orange darken1',  'deep-orange darken1',  'red darken1',  'pink darken1' ],\\r\\n                ['grey lighten2', 'brown lighten2', 'deep-purple darken2',  'purple darken2',  'indigo darken2',  'blue darken2',  'cyan darken2',  'green darken2',  'light-green darken2',  'yellow darken2',  'amber darken2',  'orange darken2',  'deep-orange darken2',  'red darken2',  'pink darken2' ],\\r\\n                ['grey lighten1', 'brown lighten1', 'deep-purple darken3',  'purple darken3',  'indigo darken3',  'blue darken3',  'cyan darken3',  'green darken3',  'light-green darken3',  'yellow darken3',  'amber darken3',  'orange darken3',  'deep-orange darken3',  'red darken3',  'pink darken3' ],\\r\\n                ['grey',          'brown',          'deep-purple darken4',  'purple darken4',  'indigo darken4',  'blue darken4',  'cyan darken4',  'green darken4',  'light-green darken4',  'yellow darken4',  'amber darken4',  'orange darken4',  'deep-orange darken4',  'red darken4',  'pink darken4' ],\\r\\n                ['grey darken1',  'brown darken1',  'deep-purple accent1',  'purple accent1',  'indigo accent1',  'blue accent1',  'cyan accent1',  'green accent1',  'light-green accent1',  'yellow accent1',  'amber accent1',  'orange accent1',  'deep-orange accent1',  'red accent1',  'pink accent1' ],\\r\\n                ['grey darken2',  'brown darken2',  'deep-purple accent2',  'purple accent2',  'indigo accent2',  'blue accent2',  'cyan accent2',  'green accent2',  'light-green accent2',  'yellow accent2',  'amber accent2',  'orange accent2',  'deep-orange accent2',  'red accent2',  'pink accent2' ],\\r\\n                ['grey darken3',  'brown darken3',  'deep-purple accent3',  'purple accent3',  'indigo accent3',  'blue accent3',  'cyan accent3',  'green accent3',  'light-green accent3',  'yellow accent3',  'amber accent3',  'orange accent3',  'deep-orange accent3',  'red accent3',  'pink accent3' ],\\r\\n                ['grey darken4',  'brown darken4',  'deep-purple accent4',  'purple accent4',  'indigo accent4',  'blue accent4',  'cyan accent4',  'green accent4',  'light-green accent4',  'yellow accent4',  'amber accent4',  'orange accent4',  'deep-orange accent4',  'red accent4',  'pink accent4' ],\\r\\n            ],\\r\\n\\r\\n            // lineHeight\\r\\n            lineHeights: ['1.0', '1.2', '1.4', '1.5', '1.6', '1.8', '2.0', '3.0'],\\r\\n\\r\\n            // insertTable max size\\r\\n            insertTableMaxSize: {\\r\\n                col: 12,\\r\\n                row: 10\\r\\n            },\\r\\n\\r\\n            // image\\r\\n            maximumImageFileSize: null, // size in bytes, null = no limit\\r\\n\\r\\n            // callbacks\\r\\n            oninit: null,             // initialize\\r\\n            onfocus: null,            // editable has focus\\r\\n            onblur: null,             // editable out of focus\\r\\n            onenter: null,            // enter key pressed\\r\\n            onkeyup: null,            // keyup\\r\\n            onkeydown: null,          // keydown\\r\\n            onImageUpload: null,      // imageUpload\\r\\n            onImageUploadError: null, // imageUploadError\\r\\n            onMediaDelete: null,      // media delete\\r\\n            onToolbarClick: null,\\r\\n            onsubmit: null,\\r\\n\\r\\n            /**\\r\\n             * manipulate link address when user create link\\r\\n             * @param {String} sLinkUrl\\r\\n             * @return {String}\\r\\n             */\\r\\n            onCreateLink: function(sLinkUrl) {\\r\\n                if (sLinkUrl.indexOf('@') !== -1 && sLinkUrl.indexOf(':') === -1) {\\r\\n                    sLinkUrl =  'mailto:' + sLinkUrl;\\r\\n                }\\r\\n\\r\\n                return sLinkUrl;\\r\\n            },\\r\\n\\r\\n            keyMap: {\\r\\n                pc: {\\r\\n                    'ENTER': 'insertParagraph',\\r\\n                    'CTRL+Z': 'undo',\\r\\n                    'CTRL+Y': 'redo',\\r\\n                    'TAB': 'tab',\\r\\n                    'SHIFT+TAB': 'untab',\\r\\n                    'CTRL+B': 'bold',\\r\\n                    'CTRL+I': 'italic',\\r\\n                    'CTRL+U': 'underline',\\r\\n                    'CTRL+SHIFT+S': 'strikethrough',\\r\\n                    'CTRL+BACKSLASH': 'removeFormat',\\r\\n                    'CTRL+SHIFT+L': 'justifyLeft',\\r\\n                    'CTRL+SHIFT+E': 'justifyCenter',\\r\\n                    'CTRL+SHIFT+R': 'justifyRight',\\r\\n                    'CTRL+SHIFT+J': 'justifyFull',\\r\\n                    'CTRL+SHIFT+NUM7': 'insertUnorderedList',\\r\\n                    'CTRL+SHIFT+NUM8': 'insertOrderedList',\\r\\n                    'CTRL+LEFTBRACKET': 'outdent',\\r\\n                    'CTRL+RIGHTBRACKET': 'indent',\\r\\n                    'CTRL+NUM0': 'formatPara',\\r\\n                    'CTRL+NUM1': 'formatH1',\\r\\n                    'CTRL+NUM2': 'formatH2',\\r\\n                    'CTRL+NUM3': 'formatH3',\\r\\n                    'CTRL+NUM4': 'formatH4',\\r\\n                    'CTRL+NUM5': 'formatH5',\\r\\n                    'CTRL+NUM6': 'formatH6',\\r\\n                    'CTRL+ENTER': 'insertHorizontalRule',\\r\\n                    'CTRL+K': 'showLinkDialog'\\r\\n                },\\r\\n\\r\\n                mac: {\\r\\n                    'ENTER': 'insertParagraph',\\r\\n                    'CMD+Z': 'undo',\\r\\n                    'CMD+SHIFT+Z': 'redo',\\r\\n                    'TAB': 'tab',\\r\\n                    'SHIFT+TAB': 'untab',\\r\\n                    'CMD+B': 'bold',\\r\\n                    'CMD+I': 'italic',\\r\\n                    'CMD+U': 'underline',\\r\\n                    'CMD+SHIFT+S': 'strikethrough',\\r\\n                    'CMD+BACKSLASH': 'removeFormat',\\r\\n                    'CMD+SHIFT+L': 'justifyLeft',\\r\\n                    'CMD+SHIFT+E': 'justifyCenter',\\r\\n                    'CMD+SHIFT+R': 'justifyRight',\\r\\n                    'CMD+SHIFT+J': 'justifyFull',\\r\\n                    'CMD+SHIFT+NUM7': 'insertUnorderedList',\\r\\n                    'CMD+SHIFT+NUM8': 'insertOrderedList',\\r\\n                    'CMD+LEFTBRACKET': 'outdent',\\r\\n                    'CMD+RIGHTBRACKET': 'indent',\\r\\n                    'CMD+NUM0': 'formatPara',\\r\\n                    'CMD+NUM1': 'formatH1',\\r\\n                    'CMD+NUM2': 'formatH2',\\r\\n                    'CMD+NUM3': 'formatH3',\\r\\n                    'CMD+NUM4': 'formatH4',\\r\\n                    'CMD+NUM5': 'formatH5',\\r\\n                    'CMD+NUM6': 'formatH6',\\r\\n                    'CMD+ENTER': 'insertHorizontalRule',\\r\\n                    'CMD+K': 'showLinkDialog'\\r\\n                }\\r\\n            }\\r\\n        },\\r\\n\\r\\n        // default language: en-US\\r\\n        lang: {\\r\\n            'en-US': {\\r\\n                font: {\\r\\n                    bold: 'Bold',\\r\\n                    italic: 'Italic',\\r\\n                    underline: 'Underline',\\r\\n                    clear: 'Remove Font Style',\\r\\n                    height: 'Line Height',\\r\\n                    name: 'Font Family',\\r\\n                    strikethrough: 'Strikethrough',\\r\\n                    subscript: 'Subscript',\\r\\n                    superscript: 'Superscript',\\r\\n                    size: 'Font Size'\\r\\n                },\\r\\n                image: {\\r\\n                    image: 'Picture',\\r\\n                    insert: 'Insert Image',\\r\\n                    resizeFull: 'Resize Full',\\r\\n                    resizeHalf: 'Resize Half',\\r\\n                    resizeQuarter: 'Resize Quarter',\\r\\n                    floatLeft: 'Float Left',\\r\\n                    floatRight: 'Float Right',\\r\\n                    floatNone: 'Float None',\\r\\n                    shapeRounded: 'Shape: Rounded',\\r\\n                    shapeCircle: 'Shape: Circle',\\r\\n                    bordered: 'Bordered',\\r\\n                    shapeThumbnail: 'Shape: Thumbnail',\\r\\n                    shapeNone: 'Shape: None',\\r\\n                    dragImageHere: 'Drag image or text here',\\r\\n                    dropImage: 'Drop image or Text',\\r\\n                    selectFromFiles: 'Select from files',\\r\\n                    maximumFileSize: 'Maximum file size',\\r\\n                    maximumFileSizeError: 'Maximum file size exceeded.',\\r\\n                    url: 'Image URL',\\r\\n                    remove: 'Remove Image'\\r\\n                },\\r\\n                link: {\\r\\n                    link: 'Link',\\r\\n                    insert: 'Insert Link',\\r\\n                    unlink: 'Unlink',\\r\\n                    edit: 'Edit',\\r\\n                    textToDisplay: 'Text to display',\\r\\n                    url: 'To what URL should this link go?',\\r\\n                    openInNewWindow: 'Open in new window'\\r\\n                },\\r\\n                table: {\\r\\n                    table: 'Table',\\r\\n                    striped: 'Striped',\\r\\n                    hoverable: 'Hoverable',\\r\\n                    responsive: 'Responsive',\\r\\n                    bordered: 'Bordered'\\r\\n                },\\r\\n                hr: {\\r\\n                    insert: 'Insert Horizontal Rule'\\r\\n                },\\r\\n                style: {\\r\\n                    style: 'Style',\\r\\n                    normal: 'Normal',\\r\\n                    blockquote: 'Quote',\\r\\n                    pre: 'Code',\\r\\n                    h1: 'Header 1',\\r\\n                    h2: 'Header 2',\\r\\n                    h3: 'Header 3',\\r\\n                    h4: 'Header 4',\\r\\n                    h5: 'Header 5',\\r\\n                    h6: 'Header 6'\\r\\n                },\\r\\n                lists: {\\r\\n                    unordered: 'Unordered list',\\r\\n                    ordered: 'Ordered list'\\r\\n                },\\r\\n                options: {\\r\\n                    help: 'Help',\\r\\n                    fullscreen: 'Full Screen',\\r\\n                    codeview: 'Code View'\\r\\n                },\\r\\n                paragraph: {\\r\\n                    paragraph: 'Paragraph',\\r\\n                    outdent: 'Outdent',\\r\\n                    indent: 'Indent',\\r\\n                    left: 'Align left',\\r\\n                    center: 'Align center',\\r\\n                    right: 'Align right',\\r\\n                    justify: 'Justify full'\\r\\n                },\\r\\n                color: {\\r\\n                    recent: 'Recent Color',\\r\\n                    more: 'More Color',\\r\\n                    background: 'Back',\\r\\n                    foreground: 'Text',\\r\\n                    transparent: 'Transparent',\\r\\n                    setTransparent: 'Transparent',\\r\\n                    reset: 'Reset',\\r\\n                    resetToDefault: 'Default'\\r\\n                },\\r\\n                shortcut: {\\r\\n                    shortcuts: 'Keyboard shortcuts',\\r\\n                    close: 'Close',\\r\\n                    textFormatting: 'Text formatting',\\r\\n                    action: 'Action',\\r\\n                    paragraphFormatting: 'Paragraph formatting',\\r\\n                    documentStyle: 'Document Style',\\r\\n                    extraKeys: 'Extra keys'\\r\\n                },\\r\\n                history: {\\r\\n                    undo: 'Undo',\\r\\n                    redo: 'Redo'\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @class core.async\\r\\n     *\\r\\n     * Async functions which returns `Promise`\\r\\n     *\\r\\n     * @singleton\\r\\n     * @alternateClassName async\\r\\n     */\\r\\n    var async = (function() {\\r\\n        /**\\r\\n         * @method readFileAsDataURL\\r\\n         *\\r\\n         * read contents of file as representing URL\\r\\n         *\\r\\n         * @param {File} file\\r\\n         * @return {Promise} - then: sDataUrl\\r\\n         */\\r\\n        var readFileAsDataURL = function(file) {\\r\\n            return $.Deferred(function(deferred) {\\r\\n                $.extend(new FileReader(), {\\r\\n                    onload: function(e) {\\r\\n                        var sDataURL = e.target.result;\\r\\n                        deferred.resolve(sDataURL);\\r\\n                    },\\r\\n                    onerror: function() {\\r\\n                        deferred.reject(this);\\r\\n                    }\\r\\n                }).readAsDataURL(file);\\r\\n            }).promise();\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method createImage\\r\\n         *\\r\\n         * create `<image>` from url string\\r\\n         *\\r\\n         * @param {String} sUrl\\r\\n         * @param {String} filename\\r\\n         * @return {Promise} - then: $image\\r\\n         */\\r\\n        var createImage = function(sUrl, filename) {\\r\\n            return $.Deferred(function(deferred) {\\r\\n                var $img = $('<img>');\\r\\n\\r\\n                $img.one('load', function() {\\r\\n                    $img.off('error abort');\\r\\n                    deferred.resolve($img);\\r\\n                }).one('error abort', function() {\\r\\n                    $img.off('load').detach();\\r\\n                    deferred.reject($img);\\r\\n                }).css({\\r\\n                    display: 'none'\\r\\n                }).appendTo(document.body).attr({\\r\\n                    'src': sUrl,\\r\\n                    'data-filename': filename\\r\\n                });\\r\\n            }).promise();\\r\\n        };\\r\\n\\r\\n        return {\\r\\n            readFileAsDataURL: readFileAsDataURL,\\r\\n            createImage: createImage\\r\\n        };\\r\\n    })();\\r\\n\\r\\n    /**\\r\\n     * @class core.key\\r\\n     *\\r\\n     * Object for keycodes.\\r\\n     *\\r\\n     * @singleton\\r\\n     * @alternateClassName key\\r\\n     */\\r\\n    var key = (function() {\\r\\n        var keyMap = {\\r\\n            'BACKSPACE': 8,\\r\\n            'TAB': 9,\\r\";\n  builder.string += \"\\n            'ENTER': 13,\\r\\n            'SPACE': 32,\\r\\n\\r\\n            // Number: 0-9\\r\\n            'NUM0': 48,\\r\\n            'NUM1': 49,\\r\\n            'NUM2': 50,\\r\\n            'NUM3': 51,\\r\\n            'NUM4': 52,\\r\\n            'NUM5': 53,\\r\\n            'NUM6': 54,\\r\\n            'NUM7': 55,\\r\\n            'NUM8': 56,\\r\\n\\r\\n            // Alphabet: a-z\\r\\n            'B': 66,\\r\\n            'E': 69,\\r\\n            'I': 73,\\r\\n            'J': 74,\\r\\n            'K': 75,\\r\\n            'L': 76,\\r\\n            'R': 82,\\r\\n            'S': 83,\\r\\n            'U': 85,\\r\\n            'Y': 89,\\r\\n            'Z': 90,\\r\\n\\r\\n            'SLASH': 191,\\r\\n            'LEFTBRACKET': 219,\\r\\n            'BACKSLASH': 220,\\r\\n            'RIGHTBRACKET': 221\\r\\n        };\\r\\n\\r\\n        return {\\r\\n            /**\\r\\n             * @method isEdit\\r\\n             *\\r\\n             * @param {Number} keyCode\\r\\n             * @return {Boolean}\\r\\n             */\\r\\n            isEdit: function(keyCode) {\\r\\n                return list.contains([8, 9, 13, 32], keyCode);\\r\\n            },\\r\\n            /**\\r\\n             * @method isMove\\r\\n             *\\r\\n             * @param {Number} keyCode\\r\\n             * @return {Boolean}\\r\\n             */\\r\\n            isMove: function(keyCode) {\\r\\n                return list.contains([37, 38, 39, 40], keyCode);\\r\\n            },\\r\\n            /**\\r\\n             * @property {Object} nameFromCode\\r\\n             * @property {String} nameFromCode.8 \\\"BACKSPACE\\\"\\r\\n             */\\r\\n            nameFromCode: func.invertObject(keyMap),\\r\\n            code: keyMap\\r\\n        };\\r\\n    })();\\r\\n\\r\\n    /**\\r\\n     * @class editing.History\\r\\n     *\\r\\n     * Editor History\\r\\n     *\\r\\n     */\\r\\n    var History = function($editable) {\\r\\n        var stack = [], stackOffset = -1;\\r\\n        var editable = $editable[0];\\r\\n\\r\\n        var makeSnapshot = function() {\\r\\n            var rng = range.create();\\r\\n            var emptyBookmark = {s: {path: [], offset: 0}, e: {path: [], offset: 0}};\\r\\n\\r\\n            return {\\r\\n                contents: $editable.html(),\\r\\n                bookmark: (rng ? rng.bookmark(editable) : emptyBookmark)\\r\\n            };\\r\\n        };\\r\\n\\r\\n        var applySnapshot = function(snapshot) {\\r\\n            if (snapshot.contents !== null) {\\r\\n                $editable.html(snapshot.contents);\\r\\n            }\\r\\n            if (snapshot.bookmark !== null) {\\r\\n                range.createFromBookmark(editable, snapshot.bookmark).select();\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * undo\\r\\n         */\\r\\n        this.undo = function() {\\r\\n            if (0 < stackOffset) {\\r\\n                stackOffset--;\\r\\n                applySnapshot(stack[stackOffset]);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * redo\\r\\n         */\\r\\n        this.redo = function() {\\r\\n            if (stack.length - 1 > stackOffset) {\\r\\n                stackOffset++;\\r\\n                applySnapshot(stack[stackOffset]);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * recorded undo\\r\\n         */\\r\\n        this.recordUndo = function() {\\r\\n            stackOffset++;\\r\\n\\r\\n            // Wash out stack after stackOffset\\r\\n            if (stack.length > stackOffset) {\\r\\n                stack = stack.slice(0, stackOffset);\\r\\n            }\\r\\n\\r\\n            // Create new snapshot and push it to the end\\r\\n            stack.push(makeSnapshot());\\r\\n        };\\r\\n\\r\\n        // Create first undo stack\\r\\n        this.recordUndo();\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @class editing.Style\\r\\n     *\\r\\n     * Style\\r\\n     *\\r\\n     */\\r\\n    var Style = function() {\\r\\n        /**\\r\\n         * @method jQueryCSS\\r\\n         *\\r\\n         * [workaround] for old jQuery\\r\\n         * passing an array of style properties to .css()\\r\\n         * will result in an object of property-value pairs.\\r\\n         * (compability with version < 1.9)\\r\\n         *\\r\\n         * @private\\r\\n         * @param  {jQuery} $obj\\r\\n         * @param  {Array} propertyNames - An array of one or more CSS properties.\\r\\n         * @return {Object}\\r\\n         */\\r\\n        var jQueryCSS = function($obj, propertyNames) {\\r\\n            if (agent.jqueryVersion < 1.9) {\\r\\n                var result = {};\\r\\n                $.each(propertyNames, function(idx, propertyName) {\\r\\n                    result[propertyName] = $obj.css(propertyName);\\r\\n                });\\r\\n                return result;\\r\\n            }\\r\\n            return $obj.css.call($obj, propertyNames);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * paragraph level style\\r\\n         *\\r\\n         * @param {WrappedRange} rng\\r\\n         * @param {Object} styleInfo\\r\\n         */\\r\\n        this.stylePara = function(rng, styleInfo) {\\r\\n            $.each(rng.nodes(dom.isPara, {\\r\\n                includeAncestor: true\\r\\n            }), function(idx, para) {\\r\\n                $(para).css(styleInfo);\\r\\n            });\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * insert and returns styleNodes on range.\\r\\n         *\\r\\n         * @param {WrappedRange} rng\\r\\n         * @param {Object} [options] - options for styleNodes\\r\\n         * @param {String} [options.nodeName] - default: `SPAN`\\r\\n         * @param {Boolean} [options.expandClosestSibling] - default: `false`\\r\\n         * @param {Boolean} [options.onlyPartialContains] - default: `false`\\r\\n         * @return {Node[]}\\r\\n         */\\r\\n        this.styleNodes = function(rng, options) {\\r\\n            rng = rng.splitText();\\r\\n\\r\\n            var nodeName = options && options.nodeName || 'SPAN';\\r\\n            var expandClosestSibling = !!(options && options.expandClosestSibling);\\r\\n            var onlyPartialContains = !!(options && options.onlyPartialContains);\\r\\n\\r\\n            if (rng.isCollapsed()) {\\r\\n                return [rng.insertNode(dom.create(nodeName))];\\r\\n            }\\r\\n\\r\\n            var pred = dom.makePredByNodeName(nodeName);\\r\\n            var nodes = $.map(rng.nodes(dom.isText, {\\r\\n                fullyContains: true\\r\\n            }), function(text) {\\r\\n                return dom.singleChildAncestor(text, pred) || dom.wrap(text, nodeName);\\r\\n            });\\r\\n\\r\\n            if (expandClosestSibling) {\\r\\n                if (onlyPartialContains) {\\r\\n                    var nodesInRange = rng.nodes();\\r\\n                    // compose with partial contains predication\\r\\n                    pred = func.and(pred, function(node) {\\r\\n                        return list.contains(nodesInRange, node);\\r\\n                    });\\r\\n                }\\r\\n\\r\\n                return $.map(nodes, function(node) {\\r\\n                    var siblings = dom.withClosestSiblings(node, pred);\\r\\n                    var head = list.head(siblings);\\r\\n                    var tails = list.tail(siblings);\\r\\n                    $.each(tails, function(idx, elem) {\\r\\n                        dom.appendChildNodes(head, elem.childNodes);\\r\\n                        dom.remove(elem);\\r\\n                    });\\r\\n                    return list.head(siblings);\\r\\n                });\\r\\n            } else {\\r\\n                return nodes;\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * get current style on cursor\\r\\n         *\\r\\n         * @param {WrappedRange} rng\\r\\n         * @param {Node} target - target element on event\\r\\n         * @return {Object} - object contains style properties.\\r\\n         */\\r\\n        this.current = function(rng, target) {\\r\\n            var $cont = $(dom.isText(rng.sc) ? rng.sc.parentNode : rng.sc);\\r\\n            var properties = ['font-family', 'font-size', 'text-align', 'list-style-type', 'line-height'];\\r\\n            var styleInfo = jQueryCSS($cont, properties) || {};\\r\\n\\r\\n            styleInfo['font-size'] = parseInt(styleInfo['font-size'], 10);\\r\\n\\r\\n            // document.queryCommandState for toggle state\\r\\n            styleInfo['font-bold'] = document.queryCommandState('bold') ? 'bold' : 'normal';\\r\\n            styleInfo['font-italic'] = document.queryCommandState('italic') ? 'italic' : 'normal';\\r\\n            styleInfo['font-underline'] = document.queryCommandState('underline') ? 'underline' : 'normal';\\r\\n            styleInfo['font-strikethrough'] = document.queryCommandState('strikeThrough') ? 'strikethrough' : 'normal';\\r\\n            styleInfo['font-superscript'] = document.queryCommandState('superscript') ? 'superscript' : 'normal';\\r\\n            styleInfo['font-subscript'] = document.queryCommandState('subscript') ? 'subscript' : 'normal';\\r\\n\\r\\n            // list-style-type to list-style(unordered, ordered)\\r\\n            if (!rng.isOnList()) {\\r\\n                styleInfo['list-style'] = 'none';\\r\\n            } else {\\r\\n                var aOrderedType = ['circle', 'disc', 'disc-leading-zero', 'square'];\\r\\n                var isUnordered = $.inArray(styleInfo['list-style-type'], aOrderedType) > -1;\\r\\n                styleInfo['list-style'] = isUnordered ? 'unordered' : 'ordered';\\r\\n            }\\r\\n\\r\\n            var para = dom.ancestor(rng.sc, dom.isPara);\\r\\n            if (para && para.style['line-height']) {\\r\\n                styleInfo['line-height'] = para.style.lineHeight;\\r\\n            } else {\\r\\n                var lineHeight = parseInt(styleInfo['line-height'], 10) / parseInt(styleInfo['font-size'], 10);\\r\\n                styleInfo['line-height'] = lineHeight.toFixed(1);\\r\\n            }\\r\\n\\r\\n            styleInfo.image = dom.isImg(target) && target;\\r\\n            styleInfo.anchor = rng.isOnAnchor() && dom.ancestor(rng.sc, dom.isAnchor);\\r\\n            styleInfo.ancestors = dom.listAncestor(rng.sc, dom.isEditable);\\r\\n            styleInfo.range = rng;\\r\\n\\r\\n            return styleInfo;\\r\\n        };\\r\\n    };\\r\\n\\r\\n\\r\\n    /**\\r\\n     * @class editing.Bullet\\r\\n     *\\r\\n     * @alternateClassName Bullet\\r\\n     */\\r\\n    var Bullet = function() {\\r\\n        /**\\r\\n         * @method insertOrderedList\\r\\n         *\\r\\n         * toggle ordered list\\r\\n         *\\r\\n         * @type command\\r\\n         */\\r\\n        this.insertOrderedList = function() {\\r\\n            this.toggleList('OL');\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method insertUnorderedList\\r\\n         *\\r\\n         * toggle unordered list\\r\\n         *\\r\\n         * @type command\\r\\n         */\\r\\n        this.insertUnorderedList = function() {\\r\\n            this.toggleList('UL');\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method indent\\r\\n         *\\r\\n         * indent\\r\\n         *\\r\\n         * @type command\\r\\n         */\\r\\n        this.indent = function() {\\r\\n            var self = this;\\r\\n            var rng = range.create().wrapBodyInlineWithPara();\\r\\n\\r\\n            var paras = rng.nodes(dom.isPara, { includeAncestor: true });\\r\\n            var clustereds = list.clusterBy(paras, func.peq2('parentNode'));\\r\\n\\r\\n            $.each(clustereds, function(idx, paras) {\\r\\n                var head = list.head(paras);\\r\\n                if (dom.isLi(head)) {\\r\\n                    self.wrapList(paras, head.parentNode.nodeName);\\r\\n                } else {\\r\\n                    $.each(paras, function(idx, para) {\\r\\n                        $(para).css('marginLeft', function(idx, val) {\\r\\n                            return (parseInt(val, 10) || 0) + 25;\\r\\n                        });\\r\\n                    });\\r\\n                }\\r\\n            });\\r\\n\\r\\n            rng.select();\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method outdent\\r\\n         *\\r\\n         * outdent\\r\\n         *\\r\\n         * @type command\\r\\n         */\\r\\n        this.outdent = function() {\\r\\n            var self = this;\\r\\n            var rng = range.create().wrapBodyInlineWithPara();\\r\\n\\r\\n            var paras = rng.nodes(dom.isPara, { includeAncestor: true });\\r\\n            var clustereds = list.clusterBy(paras, func.peq2('parentNode'));\\r\\n\\r\\n            $.each(clustereds, function(idx, paras) {\\r\\n                var head = list.head(paras);\\r\\n                if (dom.isLi(head)) {\\r\\n                    self.releaseList([paras]);\\r\\n                } else {\\r\\n                    $.each(paras, function(idx, para) {\\r\\n                        $(para).css('marginLeft', function(idx, val) {\\r\\n                            val = (parseInt(val, 10) || 0);\\r\\n                            return val > 25 ? val - 25 : '';\\r\\n                        });\\r\\n                    });\\r\\n                }\\r\\n            });\\r\\n\\r\\n            rng.select();\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method toggleList\\r\\n         *\\r\\n         * toggle list\\r\\n         *\\r\\n         * @param {String} listName - OL or UL\\r\\n         */\\r\\n        this.toggleList = function(listName) {\\r\\n            var self = this;\\r\\n            var rng = range.create().wrapBodyInlineWithPara();\\r\\n\\r\\n            var paras = rng.nodes(dom.isPara, { includeAncestor: true });\\r\\n            var bookmark = rng.paraBookmark(paras);\\r\\n            var clustereds = list.clusterBy(paras, func.peq2('parentNode'));\\r\\n\\r\\n            // paragraph to list\\r\\n            if (list.find(paras, dom.isPurePara)) {\\r\\n                var wrappedParas = [];\\r\\n                $.each(clustereds, function(idx, paras) {\\r\\n                    wrappedParas = wrappedParas.concat(self.wrapList(paras, listName));\\r\\n                });\\r\\n                paras = wrappedParas;\\r\\n                // list to paragraph or change list style\\r\\n            } else {\\r\\n                var diffLists = rng.nodes(dom.isList, {\\r\\n                    includeAncestor: true\\r\\n                }).filter(function(listNode) {\\r\\n                    return !$.nodeName(listNode, listName);\\r\\n                });\\r\\n\\r\\n                if (diffLists.length) {\\r\\n                    $.each(diffLists, function(idx, listNode) {\\r\\n                        dom.replace(listNode, listName);\\r\\n                    });\\r\\n                } else {\\r\\n                    paras = this.releaseList(clustereds, true);\\r\\n                }\\r\\n            }\\r\\n\\r\\n            range.createFromParaBookmark(bookmark, paras).select();\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method wrapList\\r\\n         *\\r\\n         * @param {Node[]} paras\\r\\n         * @param {String} listName\\r\\n         * @return {Node[]}\\r\\n         */\\r\\n        this.wrapList = function(paras, listName) {\\r\\n            var head = list.head(paras);\\r\\n            var last = list.last(paras);\\r\\n\\r\\n            var prevList = dom.isList(head.previousSibling) && head.previousSibling;\\r\\n            var nextList = dom.isList(last.nextSibling) && last.nextSibling;\\r\\n\\r\\n            var listNode = prevList || dom.insertAfter(dom.create(listName || 'UL'), last);\\r\\n\\r\\n            // P to LI\\r\\n            paras = $.map(paras, function(para) {\\r\\n                return dom.isPurePara(para) ? dom.replace(para, 'LI') : para;\\r\\n            });\\r\\n\\r\\n            // append to list(<ul>, <ol>)\\r\\n            dom.appendChildNodes(listNode, paras);\\r\\n\\r\\n            if (nextList) {\\r\\n                dom.appendChildNodes(listNode, list.from(nextList.childNodes));\\r\\n                dom.remove(nextList);\\r\\n            }\\r\\n\\r\\n            return paras;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method releaseList\\r\\n         *\\r\\n         * @param {Array[]} clustereds\\r\\n         * @param {Boolean} isEscapseToBody\\r\\n         * @return {Node[]}\\r\\n         */\\r\\n        this.releaseList = function(clustereds, isEscapseToBody) {\\r\\n            var releasedParas = [];\\r\\n\\r\\n            $.each(clustereds, function(idx, paras) {\\r\\n                var head = list.head(paras);\\r\\n                var last = list.last(paras);\\r\\n\\r\\n                var headList = isEscapseToBody ? dom.lastAncestor(head, dom.isList) :\\r\\n                    head.parentNode;\\r\\n                var lastList = headList.childNodes.length > 1 ? dom.splitTree(headList, {\\r\\n                    node: last.parentNode,\\r\\n                    offset: dom.position(last) + 1\\r\\n                }, {\\r\\n                    isSkipPaddingBlankHTML: true\\r\\n                }) : null;\\r\\n\\r\\n                var middleList = dom.splitTree(headList, {\\r\\n                    node: head.parentNode,\\r\\n                    offset: dom.position(head)\\r\\n                }, {\\r\\n                    isSkipPaddingBlankHTML: true\\r\\n                });\\r\\n\\r\\n                paras = isEscapseToBody ? dom.listDescendant(middleList, dom.isLi) :\\r\\n                    list.from(middleList.childNodes).filter(dom.isLi);\\r\\n\\r\\n                // LI to P\\r\\n                if (isEscapseToBody || !dom.isList(headList.parentNode)) {\\r\\n                    paras = $.map(paras, function(para) {\\r\\n                        return dom.replace(para, 'P');\\r\\n                    });\\r\\n                }\\r\\n\\r\\n                $.each(list.from(paras).reverse(), function(idx, para) {\\r\\n                    dom.insertAfter(para, headList);\\r\\n                });\\r\\n\\r\\n                // remove empty lists\\r\\n                var rootLists = list.compact([headList, middleList, lastList]);\\r\\n                $.each(roo\";\n  builder.string += \"tLists, function(idx, rootList) {\\r\\n                    var listNodes = [rootList].concat(dom.listDescendant(rootList, dom.isList));\\r\\n                    $.each(listNodes.reverse(), function(idx, listNode) {\\r\\n                        if (!dom.nodeLength(listNode)) {\\r\\n                            dom.remove(listNode, true);\\r\\n                        }\\r\\n                    });\\r\\n                });\\r\\n\\r\\n                releasedParas = releasedParas.concat(paras);\\r\\n            });\\r\\n\\r\\n            return releasedParas;\\r\\n        };\\r\\n    };\\r\\n\\r\\n\\r\\n    /**\\r\\n     * @class editing.Typing\\r\\n     *\\r\\n     * Typing\\r\\n     *\\r\\n     */\\r\\n    var Typing = function() {\\r\\n\\r\\n        // a Bullet instance to toggle lists off\\r\\n        var bullet = new Bullet();\\r\\n\\r\\n        /**\\r\\n         * insert tab\\r\\n         *\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {WrappedRange} rng\\r\\n         * @param {Number} tabsize\\r\\n         */\\r\\n        this.insertTab = function($editable, rng, tabsize) {\\r\\n            var tab = dom.createText(new Array(tabsize + 1).join(dom.NBSP_CHAR));\\r\\n            rng = rng.deleteContents();\\r\\n            rng.insertNode(tab, true);\\r\\n\\r\\n            rng = range.create(tab, tabsize);\\r\\n            rng.select();\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * insert paragraph\\r\\n         */\\r\\n        this.insertParagraph = function() {\\r\\n            var rng = range.create();\\r\\n\\r\\n            // deleteContents on range.\\r\\n            rng = rng.deleteContents();\\r\\n\\r\\n            // Wrap range if it needs to be wrapped by paragraph\\r\\n            rng = rng.wrapBodyInlineWithPara();\\r\\n\\r\\n            // finding paragraph\\r\\n            var splitRoot = dom.ancestor(rng.sc, dom.isPara);\\r\\n\\r\\n            var nextPara;\\r\\n            // on paragraph: split paragraph\\r\\n            if (splitRoot) {\\r\\n                // if it is an empty line with li\\r\\n                if (dom.isEmpty(splitRoot) && dom.isLi(splitRoot)) {\\r\\n                    // disable UL/OL and escape!\\r\\n                    bullet.toggleList(splitRoot.parentNode.nodeName);\\r\\n                    return;\\r\\n                    // if new line has content (not a line break)\\r\\n                } else {\\r\\n                    nextPara = dom.splitTree(splitRoot, rng.getStartPoint());\\r\\n\\r\\n                    var emptyAnchors = dom.listDescendant(splitRoot, dom.isEmptyAnchor);\\r\\n                    emptyAnchors = emptyAnchors.concat(dom.listDescendant(nextPara, dom.isEmptyAnchor));\\r\\n\\r\\n                    $.each(emptyAnchors, function(idx, anchor) {\\r\\n                        dom.remove(anchor);\\r\\n                    });\\r\\n                }\\r\\n                // no paragraph: insert empty paragraph\\r\\n            } else {\\r\\n                var next = rng.sc.childNodes[rng.so];\\r\\n                nextPara = $(dom.emptyPara)[0];\\r\\n                if (next) {\\r\\n                    rng.sc.insertBefore(nextPara, next);\\r\\n                } else {\\r\\n                    rng.sc.appendChild(nextPara);\\r\\n                }\\r\\n            }\\r\\n\\r\\n            range.create(nextPara, 0).normalize().select();\\r\\n\\r\\n        };\\r\\n\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @class editing.Table\\r\\n     *\\r\\n     * Table\\r\\n     *\\r\\n     */\\r\\n    var Table = function() {\\r\\n        /**\\r\\n         * handle tab key\\r\\n         *\\r\\n         * @param {WrappedRange} rng\\r\\n         * @param {Boolean} isShift\\r\\n         */\\r\\n        this.tab = function(rng, isShift) {\\r\\n            var cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\\r\\n            var table = dom.ancestor(cell, dom.isTable);\\r\\n            var cells = dom.listDescendant(table, dom.isCell);\\r\\n\\r\\n            var nextCell = list[isShift ? 'prev' : 'next'](cells, cell);\\r\\n            if (nextCell) {\\r\\n                range.create(nextCell, 0).select();\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * create empty table element\\r\\n         *\\r\\n         * @param {Number} rowCount\\r\\n         * @param {Number} colCount\\r\\n         * @return {Node}\\r\\n         */\\r\\n        this.createTable = function(tOptions) {\\r\\n            var tds = [], tdHTML;\\r\\n            var theaders = [];\\r\\n            var colCount = tOptions[0];\\r\\n            var rowCount = tOptions[1];\\r\\n            var classes = tOptions.slice(2, tOptions.length);\\r\\n\\r\\n            for (var idxCol = 0; idxCol < colCount; idxCol++) {\\r\\n                //tds.push('<td>' + dom.blank + '<\\/td>');\\r\\n                tds.push('<td>(item)<\\/td>');\\r\\n                theaders.push('<th>header<\\/th>');\\r\\n            }\\r\\n            tdHTML = tds.join('');\\r\\n            theaders = theaders.join('');\\r\\n\\r\\n            var trs = [], trHTML;\\r\\n            for (var idxRow = 0; idxRow < rowCount; idxRow++) {\\r\\n                trs.push('<tr>' + tdHTML + '<\\/tr>');\\r\\n            }\\r\\n            trHTML = trs.join('');\\r\\n\\r\\n            return $('<table class=\\\"' + classes.join(' ') + '\\\"><thead><tr>' + theaders + '<\\/tr><\\/thead><tbody>' + trHTML + '<\\/tbody><\\/table>')[0];\\r\\n        };\\r\\n    };\\r\\n\\r\\n\\r\\n    var KEY_BOGUS = 'bogus';\\r\\n\\r\\n    /**\\r\\n     * @class editing.Editor\\r\\n     *\\r\\n     * Editor\\r\\n     *\\r\\n     */\\r\\n    var Editor = function(handler) {\\r\\n\\r\\n        var style = new Style();\\r\\n        var table = new Table();\\r\\n        var typing = new Typing();\\r\\n        var bullet = new Bullet();\\r\\n\\r\\n        /**\\r\\n         * @method createRange\\r\\n         *\\r\\n         * create range\\r\\n         *\\r\\n         * @param {jQuery} $editable\\r\\n         * @return {WrappedRange}\\r\\n         */\\r\\n        this.createRange = function($editable) {\\r\\n            this.focus($editable);\\r\\n            return range.create();\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method saveRange\\r\\n         *\\r\\n         * save current range\\r\\n         *\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {Boolean} [thenCollapse=false]\\r\\n         */\\r\\n        this.saveRange = function($editable, thenCollapse) {\\r\\n            this.focus($editable);\\r\\n            $editable.data('range', range.create());\\r\\n            if (thenCollapse) {\\r\\n                range.create().collapse().select();\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method saveRange\\r\\n         *\\r\\n         * save current node list to $editable.data('childNodes')\\r\\n         *\\r\\n         * @param {jQuery} $editable\\r\\n         */\\r\\n        this.saveNode = function($editable) {\\r\\n            // copy child node reference\\r\\n            var copy = [];\\r\\n            for (var key  = 0, len = $editable[0].childNodes.length; key < len; key++) {\\r\\n                copy.push($editable[0].childNodes[key]);\\r\\n            }\\r\\n            $editable.data('childNodes', copy);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method restoreRange\\r\\n         *\\r\\n         * restore lately range\\r\\n         *\\r\\n         * @param {jQuery} $editable\\r\\n         */\\r\\n        this.restoreRange = function($editable) {\\r\\n            var rng = $editable.data('range');\\r\\n            if (rng) {\\r\\n                rng.select();\\r\\n                this.focus($editable);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method restoreNode\\r\\n         *\\r\\n         * restore lately node list\\r\\n         *\\r\\n         * @param {jQuery} $editable\\r\\n         */\\r\\n        this.restoreNode = function($editable) {\\r\\n            $editable.html('');\\r\\n            var child = $editable.data('childNodes');\\r\\n            for (var index = 0, len = child.length; index < len; index++) {\\r\\n                $editable[0].appendChild(child[index]);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        this.reset = function($editable) {\\r\\n            $editable.html('');\\r\\n        };\\r\\n\\r\\n        this.html = function($editable, html) {\\r\\n            $editable.html(html);\\r\\n        };\\r\\n\\r\\n        this.getHTML = function($editable) {\\r\\n            return $editable.html();\\r\\n        };\\r\\n        /**\\r\\n         * @method currentStyle\\r\\n         *\\r\\n         * current style\\r\\n         *\\r\\n         * @param {Node} target\\r\\n         * @return {Boolean} false if range is no\\r\\n         */\\r\\n        this.currentStyle = function(target) {\\r\\n            var rng = range.create();\\r\\n            return rng ? rng.isOnEditable() && style.current(rng, target) : false;\\r\\n        };\\r\\n\\r\\n        var triggerOnBeforeChange = function($editable) {\\r\\n            var $holder = dom.makeLayoutInfo($editable).holder();\\r\\n            handler.bindCustomEvent(\\r\\n                $holder, $editable.data('callbacks'), 'before.command'\\r\\n            )($editable.html(), $editable);\\r\\n        };\\r\\n\\r\\n        var triggerOnChange = function($editable) {\\r\\n            var $holder = dom.makeLayoutInfo($editable).holder();\\r\\n            handler.bindCustomEvent(\\r\\n                $holder, $editable.data('callbacks'), 'change'\\r\\n            )($editable.html(), $editable);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method undo\\r\\n         * undo\\r\\n         * @param {jQuery} $editable\\r\\n         */\\r\\n        this.undo = function($editable) {\\r\\n            triggerOnBeforeChange($editable);\\r\\n            $editable.data('NoteHistory').undo();\\r\\n            triggerOnChange($editable);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method redo\\r\\n         * redo\\r\\n         * @param {jQuery} $editable\\r\\n         */\\r\\n        this.redo = function($editable) {\\r\\n            triggerOnBeforeChange($editable);\\r\\n            $editable.data('NoteHistory').redo();\\r\\n            triggerOnChange($editable);\\r\\n        };\\r\\n\\r\\n        var self = this;\\r\\n        /**\\r\\n         * @method beforeCommand\\r\\n         * before command\\r\\n         * @param {jQuery} $editable\\r\\n         */\\r\\n        var beforeCommand = this.beforeCommand = function($editable) {\\r\\n            triggerOnBeforeChange($editable);\\r\\n            // keep focus on editable before command execution\\r\\n            self.focus($editable);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method afterCommand\\r\\n         * after command\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {Boolean} isPreventTrigger\\r\\n         */\\r\\n        var afterCommand = this.afterCommand = function($editable, isPreventTrigger) {\\r\\n            $editable.data('NoteHistory').recordUndo();\\r\\n            if (!isPreventTrigger) {\\r\\n                triggerOnChange($editable);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method bold\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {Mixed} value\\r\\n         */\\r\\n\\r\\n        /**\\r\\n         * @method italic\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {Mixed} value\\r\\n         */\\r\\n\\r\\n        /**\\r\\n         * @method underline\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {Mixed} value\\r\\n         */\\r\\n\\r\\n        /**\\r\\n         * @method strikethrough\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {Mixed} value\\r\\n         */\\r\\n\\r\\n        /**\\r\\n         * @method formatBlock\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {Mixed} value\\r\\n         */\\r\\n\\r\\n        /**\\r\\n         * @method superscript\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {Mixed} value\\r\\n         */\\r\\n\\r\\n        /**\\r\\n         * @method subscript\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {Mixed} value\\r\\n         */\\r\\n\\r\\n        /**\\r\\n         * @method justifyLeft\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {Mixed} value\\r\\n         */\\r\\n\\r\\n        /**\\r\\n         * @method justifyCenter\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {Mixed} value\\r\\n         */\\r\\n\\r\\n        /**\\r\\n         * @method justifyRight\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {Mixed} value\\r\\n         */\\r\\n\\r\\n        /**\\r\\n         * @method justifyFull\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {Mixed} value\\r\\n         */\\r\\n\\r\\n        /**\\r\\n         * @method formatBlock\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {Mixed} value\\r\\n         */\\r\\n\\r\\n        /**\\r\\n         * @method removeFormat\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {Mixed} value\\r\\n         */\\r\\n\\r\\n        /**\\r\\n         * @method backColor\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {Mixed} value\\r\\n         */\\r\\n\\r\\n        /**\\r\\n         * @method foreColor\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {Mixed} value\\r\\n         */\\r\\n\\r\\n        /**\\r\\n         * @method insertHorizontalRule\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {Mixed} value\\r\\n         */\\r\\n\\r\\n        /**\\r\\n         * @method fontName\\r\\n         *\\r\\n         * change font name\\r\\n         *\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {Mixed} value\\r\\n         */\\r\\n\\r\\n        /* jshint ignore:start */\\r\\n        // native commands(with execCommand), generate function for execCommand\\r\\n        // >>>>>>> CK\\r\\n        var commands = ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript',\\r\\n            'justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull',\\r\\n            'formatBlock', 'removeFormat',\\r\\n            'backColor', 'foreColor', 'fontName'];\\r\\n\\r\\n        for (var idx = 0, len = commands.length; idx < len; idx ++) {\\r\\n            this[commands[idx]] = (function(sCmd) {\\r\\n                return function($editable, value) {\\r\\n                    beforeCommand($editable);\\r\\n\\r\\n                    document.execCommand(sCmd, false, value);\\r\\n\\r\\n                    afterCommand($editable, true);\\r\\n                };\\r\\n            })(commands[idx]);\\r\\n        }\\r\\n        /* jshint ignore:end */\\r\\n\\r\\n        this.insertHorizontalRule = function() {\\r\\n            var hrNode = $('<div />');\\r\\n            hrNode.addClass('divider');\\r\\n\\r\\n            range.create().insertNode(hrNode[0]);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method tab\\r\\n         *\\r\\n         * handle tab key\\r\\n         *\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {Object} options\\r\\n         */\\r\\n        this.tab = function($editable, options) {\\r\\n            var rng = this.createRange($editable);\\r\\n            if (rng.isCollapsed() && rng.isOnCell()) {\\r\\n                table.tab(rng);\\r\\n            } else {\\r\\n                beforeCommand($editable);\\r\\n                typing.insertTab($editable, rng, options.tabsize);\\r\\n                afterCommand($editable);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method untab\\r\\n         *\\r\\n         * handle shift+tab key\\r\\n         *\\r\\n         */\\r\\n        this.untab = function($editable) {\\r\\n            var rng = this.createRange($editable);\\r\\n            if (rng.isCollapsed() && rng.isOnCell()) {\\r\\n                table.tab(rng, true);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method insertParagraph\\r\\n         *\\r\\n         * insert paragraph\\r\\n         *\\r\\n         * @param {Node} $editable\\r\\n         */\\r\\n        this.insertParagraph = function($editable) {\\r\\n            beforeCommand($editable);\\r\\n            typing.insertParagraph($editable);\\r\\n            afterCommand($editable);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method insertOrderedList\\r\\n         *\\r\\n         * @param {jQuery} $editable\\r\\n         */\\r\\n        this.insertOrderedList = function($editable) {\\r\\n            beforeCommand($editable);\\r\\n            bullet.insertOrderedList($editable);\\r\\n            afterCommand($editable);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @param {jQuery} $editable\\r\\n         */\\r\\n        this.insertUnorderedList = function($editable) {\\r\\n            beforeCommand($editable);\\r\\n            bullet.insertUnorderedList($editable);\\r\\n            afterCommand($editable);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @param {jQuery} $editable\\r\\n         */\\r\\n        this.indent = function($editable) {\\r\\n            beforeCommand($editable);\\r\\n            bullet.indent($editable);\\r\\n            afterCommand($editable);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @param {jQuery} $editable\\r\\n         */\\r\\n        this.outdent = function($editable) {\\r\\n            beforeCommand($editable);\\r\\n            bullet.outdent($editable);\\r\\n            afterCommand($editable);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * insert image\\r\\n         *\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {String} sUrl\\r\\n         */\\r\\n        this.insertImage = function($editable, sUrl, filename) {\\r\\n            async.createImage(sUrl, filename).then(function($image) {\\r\\n                beforeCommand($editable);\\r\\n                $image.css({\\r\\n                    display: '',\\r\\n                    width: Math.min($editable.width(), $image.width())\\r\\n                });\\r\\n                range.create().insertNode($image[0]);\\r\\n                range.createFromNodeAfter($image[0]).select();\\r\\n                afterCommand($editable);\\r\\n            }).fail(function() {\\r\\n                var $holder = dom.makeLayoutInfo($editable).holder();\\r\\n                handler.bindCustomEvent(\\r\\n                    $holder, $editable.\";\n  builder.string += \"data('callbacks'), 'image.upload.error'\\r\\n                )();\\r\\n            });\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @method insertNode\\r\\n         * insert node\\r\\n         * @param {Node} $editable\\r\\n         * @param {Node} node\\r\\n         */\\r\\n        this.insertNode = function($editable, node) {\\r\\n            beforeCommand($editable);\\r\\n            range.create().insertNode(node);\\r\\n            range.createFromNodeAfter(node).select();\\r\\n            afterCommand($editable);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * insert text\\r\\n         * @param {Node} $editable\\r\\n         * @param {String} text\\r\\n         */\\r\\n        this.insertText = function($editable, text) {\\r\\n            beforeCommand($editable);\\r\\n            var textNode = range.create().insertNode(dom.createText(text));\\r\\n            range.create(textNode, dom.nodeLength(textNode)).select();\\r\\n            afterCommand($editable);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * paste HTML\\r\\n         * @param {Node} $editable\\r\\n         * @param {String} markup\\r\\n         */\\r\\n        this.pasteHTML = function($editable, markup) {\\r\\n            beforeCommand($editable);\\r\\n            var contents = range.create().pasteHTML(markup);\\r\\n            range.createFromNodeAfter(list.last(contents)).select();\\r\\n            afterCommand($editable);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * formatBlock\\r\\n         *\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {String} tagName\\r\\n         */\\r\\n        this.formatBlock = function($editable, tagName) {\\r\\n            beforeCommand($editable);\\r\\n            // [workaround] for MSIE, IE need `<`\\r\\n            tagName = agent.isMSIE ? '<' + tagName + '>' : tagName;\\r\\n            document.execCommand('FormatBlock', false, tagName);\\r\\n            afterCommand($editable);\\r\\n        };\\r\\n\\r\\n        this.formatPara = function($editable) {\\r\\n            beforeCommand($editable);\\r\\n            this.formatBlock($editable, 'P');\\r\\n            afterCommand($editable);\\r\\n        };\\r\\n\\r\\n        /* jshint ignore:start */\\r\\n        for (var idx = 1; idx <= 6; idx ++) {\\r\\n            this['formatH' + idx] = function(idx) {\\r\\n                return function($editable) {\\r\\n                    this.formatBlock($editable, 'H' + idx);\\r\\n                };\\r\\n            }(idx);\\r\\n        };\\r\\n        /* jshint ignore:end */\\r\\n\\r\\n        /**\\r\\n         * fontSize\\r\\n         *\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {String} value - px\\r\\n         */\\r\\n        this.fontSize = function($editable, value) {\\r\\n            var rng = range.create();\\r\\n            var isCollapsed = rng.isCollapsed();\\r\\n\\r\\n            if (isCollapsed) {\\r\\n                var spans = style.styleNodes(rng);\\r\\n                var firstSpan = list.head(spans);\\r\\n\\r\\n                $(spans).css({\\r\\n                    'font-size': value + 'px'\\r\\n                });\\r\\n\\r\\n                // [workaround] added styled bogus span for style\\r\\n                //  - also bogus character needed for cursor position\\r\\n                if (firstSpan && !dom.nodeLength(firstSpan)) {\\r\\n                    firstSpan.innerHTML = dom.ZERO_WIDTH_NBSP_CHAR;\\r\\n                    range.createFromNodeAfter(firstSpan.firstChild).select();\\r\\n                    $editable.data(KEY_BOGUS, firstSpan);\\r\\n                }\\r\\n            } else {\\r\\n                beforeCommand($editable);\\r\\n                $(style.styleNodes(rng)).css({\\r\\n                    'font-size': value + 'px'\\r\\n                });\\r\\n                afterCommand($editable);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * remove bogus node and character\\r\\n         */\\r\\n        this.removeBogus = function($editable) {\\r\\n            var bogusNode = $editable.data(KEY_BOGUS);\\r\\n            if (!bogusNode) {\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            var textNode = list.find(list.from(bogusNode.childNodes), dom.isText);\\r\\n\\r\\n            var bogusCharIdx = textNode.nodeValue.indexOf(dom.ZERO_WIDTH_NBSP_CHAR);\\r\\n            if (bogusCharIdx !== -1) {\\r\\n                textNode.deleteData(bogusCharIdx, 1);\\r\\n            }\\r\\n\\r\\n            if (dom.isEmpty(bogusNode)) {\\r\\n                dom.remove(bogusNode);\\r\\n            }\\r\\n\\r\\n            $editable.removeData(KEY_BOGUS);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * lineHeight\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {String} value\\r\\n         */\\r\\n        this.lineHeight = function($editable, value) {\\r\\n            beforeCommand($editable);\\r\\n            style.stylePara(range.create(), {\\r\\n                lineHeight: value\\r\\n            });\\r\\n            afterCommand($editable);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * unlink\\r\\n         *\\r\\n         * @type command\\r\\n         *\\r\\n         * @param {jQuery} $editable\\r\\n         */\\r\\n        this.unlink = function($editable) {\\r\\n            var rng = this.createRange($editable);\\r\\n            if (rng.isOnAnchor()) {\\r\\n                var anchor = dom.ancestor(rng.sc, dom.isAnchor);\\r\\n                rng = range.createFromNode(anchor);\\r\\n                rng.select();\\r\\n\\r\\n                beforeCommand($editable);\\r\\n                document.execCommand('unlink');\\r\\n                afterCommand($editable);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * create link (command)\\r\\n         *\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {Object} linkInfo\\r\\n         * @param {Object} options\\r\\n         */\\r\\n        this.createLink = function($editable, linkInfo, options) {\\r\\n            var linkUrl = linkInfo.url;\\r\\n            var linkText = linkInfo.text;\\r\\n            var isNewWindow = linkInfo.newWindow;\\r\\n            var rng = linkInfo.range;\\r\\n            var isTextChanged = rng.toString() !== linkText;\\r\\n\\r\\n            beforeCommand($editable);\\r\\n\\r\\n            if (options.onCreateLink) {\\r\\n                linkUrl = options.onCreateLink(linkUrl);\\r\\n            }\\r\\n\\r\\n            var anchors = [];\\r\\n            if (isTextChanged) {\\r\\n                // Create a new link when text changed.\\r\\n                var anchor = rng.insertNode($('<A>' + linkText + '<\\/A>')[0]);\\r\\n                anchors.push(anchor);\\r\\n            } else {\\r\\n                anchors = style.styleNodes(rng, {\\r\\n                    nodeName: 'A',\\r\\n                    expandClosestSibling: true,\\r\\n                    onlyPartialContains: true\\r\\n                });\\r\\n            }\\r\\n\\r\\n            $.each(anchors, function(idx, anchor) {\\r\\n                $(anchor).attr('href', linkUrl);\\r\\n                if (isNewWindow) {\\r\\n                    $(anchor).attr('target', '_blank');\\r\\n                } else {\\r\\n                    $(anchor).removeAttr('target');\\r\\n                }\\r\\n            });\\r\\n\\r\\n            var startRange = range.createFromNodeBefore(list.head(anchors));\\r\\n            var startPoint = startRange.getStartPoint();\\r\\n            var endRange = range.createFromNodeAfter(list.last(anchors));\\r\\n            var endPoint = endRange.getEndPoint();\\r\\n\\r\\n            range.create(\\r\\n                startPoint.node,\\r\\n                startPoint.offset,\\r\\n                endPoint.node,\\r\\n                endPoint.offset\\r\\n            ).select();\\r\\n\\r\\n            afterCommand($editable);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns link info\\r\\n         *\\r\\n         * @return {Object}\\r\\n         * @return {WrappedRange} return.range\\r\\n         * @return {String} return.text\\r\\n         * @return {Boolean} [return.isNewWindow=true]\\r\\n         * @return {String} [return.url='']\\r\\n         */\\r\\n        this.getLinkInfo = function($editable) {\\r\\n            this.focus($editable);\\r\\n\\r\\n            var rng = range.create().expand(dom.isAnchor);\\r\\n\\r\\n            // Get the first anchor on range(for edit).\\r\\n            var $anchor = $(list.head(rng.nodes(dom.isAnchor)));\\r\\n\\r\\n            return {\\r\\n                range: rng,\\r\\n                text: rng.toString(),\\r\\n                isNewWindow: $anchor.length ? $anchor.attr('target') === '_blank' : false,\\r\\n                url: $anchor.length ? $anchor.attr('href') : ''\\r\\n            };\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * setting color\\r\\n         *\\r\\n         * @param {Node} $editable\\r\\n         * @param {Object} sObjColor  color code\\r\\n         * @param {String} sObjColor.foreColor foreground color\\r\\n         * @param {String} sObjColor.backColor background color\\r\\n         */\\r\\n        this.color = function($editable, sObjColor) {\\r\\n            var oColor = JSON.parse(sObjColor);\\r\\n            var foreColor = oColor.foreColor, backColor = oColor.backColor;\\r\\n\\r\\n            beforeCommand($editable);\\r\\n\\r\\n            if (foreColor) { document.execCommand('foreColor', false, foreColor); }\\r\\n            if (backColor) { document.execCommand('backColor', false, backColor); }\\r\\n\\r\\n            afterCommand($editable);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * insert Table\\r\\n         *\\r\\n         * @param {Node} $editable\\r\\n         * @param {String} sDim dimension of table (ex : \\\"5x5\\\")\\r\\n         */\\r\\n        this.insertTable = function($editable, sDim) {\\r\\n            var tOptions = sDim.split('x');\\r\\n            beforeCommand($editable);\\r\\n\\r\\n            var rng = range.create().deleteContents();\\r\\n            rng.insertNode(table.createTable(tOptions));\\r\\n            afterCommand($editable);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * float me\\r\\n         *\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {String} value\\r\\n         * @param {jQuery} $target\\r\\n         */\\r\\n        this.floatMe = function($editable, value, $target) {\\r\\n            beforeCommand($editable);\\r\\n            $target.css('float', value);\\r\\n            afterCommand($editable);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * change image shape\\r\\n         *\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {String} value css class\\r\\n         * @param {Node} $target\\r\\n         */\\r\\n        this.imageShape = function($editable, value, $target) {\\r\\n            beforeCommand($editable);\\r\\n\\r\\n            $target.removeClass('img-rounded img-circle img-thumbnail img-bordered');\\r\\n\\r\\n            if (value) {\\r\\n                $target.addClass(value);\\r\\n            }\\r\\n\\r\\n            afterCommand($editable);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * >>>>>>> CK\\r\\n         * change image class\\r\\n         *\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {String} value css class\\r\\n         * @param {Node} $target\\r\\n         */\\r\\n        this.imageClass = function($editable, value, $target) {\\r\\n            beforeCommand($editable);\\r\\n\\r\\n            if (value) {\\r\\n                if ($target.hasClass(value)) {\\r\\n                    $target.removeClass(value);\\r\\n                } else {\\r\\n                    $target.addClass(value);\\r\\n                }\\r\\n            }\\r\\n\\r\\n            afterCommand($editable);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * resize overlay element\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {String} value\\r\\n         * @param {jQuery} $target - target element\\r\\n         */\\r\\n        this.resize = function($editable, value, $target) {\\r\\n            beforeCommand($editable);\\r\\n\\r\\n            $target.css({\\r\\n                width: value * 100 + '%',\\r\\n                height: ''\\r\\n            });\\r\\n\\r\\n            afterCommand($editable);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @param {Position} pos\\r\\n         * @param {jQuery} $target - target element\\r\\n         * @param {Boolean} [bKeepRatio] - keep ratio\\r\\n         */\\r\\n        this.resizeTo = function(pos, $target, bKeepRatio) {\\r\\n            var imageSize;\\r\\n            if (bKeepRatio) {\\r\\n                var newRatio = pos.y / pos.x;\\r\\n                var ratio = $target.data('ratio');\\r\\n                imageSize = {\\r\\n                    width: ratio > newRatio ? pos.x : pos.y / ratio,\\r\\n                    height: ratio > newRatio ? pos.x * ratio : pos.y\\r\\n                };\\r\\n            } else {\\r\\n                imageSize = {\\r\\n                    width: pos.x,\\r\\n                    height: pos.y\\r\\n                };\\r\\n            }\\r\\n\\r\\n            $target.css(imageSize);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * remove media object\\r\\n         *\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {String} value - dummy argument (for keep interface)\\r\\n         * @param {jQuery} $target - target element\\r\\n         */\\r\\n        this.removeMedia = function($editable, value, $target) {\\r\\n            beforeCommand($editable);\\r\\n            $target.detach();\\r\\n\\r\\n            handler.bindCustomEvent(\\r\\n                $(), $editable.data('callbacks'), 'media.delete'\\r\\n            )($target, $editable);\\r\\n\\r\\n            afterCommand($editable);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * set focus\\r\\n         *\\r\\n         * @param $editable\\r\\n         */\\r\\n        this.focus = function($editable) {\\r\\n            $editable.focus();\\r\\n\\r\\n            // [workaround] for firefox bug http://goo.gl/lVfAaI\\r\\n            if (agent.isFF && !range.create().isOnEditable()) {\\r\\n                range.createFromNode($editable[0])\\r\\n                    .normalize()\\r\\n                    .collapse()\\r\\n                    .select();\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns whether contents is empty or not.\\r\\n         *\\r\\n         * @param {jQuery} $editable\\r\\n         * @return {Boolean}\\r\\n         */\\r\\n        this.isEmpty = function($editable) {\\r\\n            return dom.isEmpty($editable[0]) || dom.emptyPara === $editable.html();\\r\\n        };\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @class module.Button\\r\\n     *\\r\\n     * Button\\r\\n     */\\r\\n    var Button = function() {\\r\\n        /**\\r\\n         * update button status\\r\\n         *\\r\\n         * @param {jQuery} $container\\r\\n         * @param {Object} styleInfo\\r\\n         */\\r\\n        this.update = function($container, styleInfo) {\\r\\n            /**\\r\\n             * handle dropdown's check mark (for fontname, fontsize, lineHeight).\\r\\n             * @param {jQuery} $btn\\r\\n             * @param {Number} value\\r\\n             */\\r\\n            var checkDropdownMenu = function($btn, value) {\\r\\n                $btn.find('.dropdown-menu li').each(function() {\\r\\n\\r\\n                    var div = $(this).children('div');\\r\\n                    var currentValue = div.data('value');\\r\\n\\r\\n                    // always compare string to avoid creating another func.\\r\\n                    if ((currentValue + '') === (value + '')) {\\r\\n                        div.children('i').removeClass('transparent');\\r\\n                    } else {\\r\\n                        div.children('i').addClass('transparent');\\r\\n                    }\\r\\n                });\\r\\n            };\\r\\n\\r\\n            /**\\r\\n             * update button state(active or not).\\r\\n             *\\r\\n             * @private\\r\\n             * @param {String} selector\\r\\n             * @param {Function} pred\\r\\n             */\\r\\n            var btnState = function(selector, pred) {\\r\\n                var $btn = $container.find(selector);\\r\\n\\r\\n                $btn.toggleClass('active', pred());\\r\\n            };\\r\\n\\r\\n            if (styleInfo.image) {\\r\\n                var $img = $(styleInfo.image);\\r\\n\\r\\n                btnState('.btn[data-event=\\\"imageClass\\\"][data-value=\\\"img-rounded\\\"]', function() {\\r\\n                    return $img.hasClass('img-rounded');\\r\\n                });\\r\\n                btnState('.btn[data-event=\\\"imageClass\\\"][data-value=\\\"img-circle\\\"]', function() {\\r\\n                    return $img.hasClass('img-circle');\\r\\n                });\\r\\n                btnState('.btn[data-event=\\\"imageClass\\\"][data-value=\\\"img-thumbnail\\\"]', function() {\\r\\n                    return $img.hasClass('img-thumbnail');\\r\\n                });\\r\\n                btnState('.btn[data-event=\\\"imageClass\\\"][data-value=\\\"img-bordered\\\"]', function() {\\r\\n                    return $img.hasClass('img-bordered');\\r\\n                });\\r\\n                btnState('.btn[data-event=\\\"imageShape\\\"]:not([data-value])', function() {\\r\\n                    return !$img.is('.img-rounded, .img-circle, .img-thumbnail, .img-bordered');\\r\\n                });\\r\\n\\r\\n                var imgFloat = $img.css('float');\\r\\n                btnState('.btn[data-event=\\\"floatMe\\\"][data-value=\\\"left\\\"]', function() {\\r\\n                    return imgFloat === 'left';\\r\\n                });\\r\\n                btnState('.btn[data-event=\\\"floatMe\\\"][data-value=\\\"right\\\"]', function() {\\r\\n                    return imgFloat === 'right';\\r\\n                });\\r\\n                btnState('.btn[data-event=\\\"floatMe\\\"][data-value=\\\"none\\\"]', function() {\\r\\n                    return imgFloat !== 'left' && imgFloat !== 'right';\\r\\n                });\\r\\n\\r\\n                var style = $img.attr('style');\\r\\n                btnState('.btn[data-event=\\\"resize\\\"][data-value=\\\"1\";\n  builder.string += \"\\\"]', function() {\\r\\n                    return !!/(^|\\\\s)(max-)?width\\\\s*:\\\\s*100%/.test(style);\\r\\n                });\\r\\n                btnState('.btn[data-event=\\\"resize\\\"][data-value=\\\"0.5\\\"]', function() {\\r\\n                    return !!/(^|\\\\s)(max-)?width\\\\s*:\\\\s*50%/.test(style);\\r\\n                });\\r\\n                btnState('.btn[data-event=\\\"resize\\\"][data-value=\\\"0.25\\\"]', function() {\\r\\n                    return !!/(^|\\\\s)(max-)?width\\\\s*:\\\\s*25%/.test(style);\\r\\n                });\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            // fontname\\r\\n            var $fontname = $container.find('.note-fontname[data-name=fontname]');\\r\\n            if ($fontname.length) {\\r\\n                var selectedFont = styleInfo['font-family'];\\r\\n                if (!!selectedFont) {\\r\\n\\r\\n                    var list = selectedFont.split(',');\\r\\n                    for (var i = 0, len = list.length; i < len; i++) {\\r\\n                        selectedFont = list[i].replace(/[\\\\'\\\\\\\"]/g, '').replace(/\\\\s+$/, '').replace(/^\\\\s+/, '');\\r\\n                        if (agent.isFontInstalled(selectedFont)) {\\r\\n                            break;\\r\\n                        }\\r\\n                    }\\r\\n\\r\\n                    $fontname.find('.note-current-fontname').text(selectedFont);\\r\\n                    checkDropdownMenu($fontname, selectedFont);\\r\\n\\r\\n                }\\r\\n            }\\r\\n\\r\\n            // fontsize\\r\\n            var $fontsize = $container.find('.note-fontsize[data-name=fontsize]');\\r\\n            $fontsize.find('.note-current-fontsize').text(styleInfo['font-size']);\\r\\n            checkDropdownMenu($fontsize, parseFloat(styleInfo['font-size']));\\r\\n\\r\\n            // lineheight\\r\\n            var $lineHeight = $container.find('.note-height[data-name=lineheight]');\\r\\n            checkDropdownMenu($lineHeight, parseFloat(styleInfo['line-height']));\\r\\n\\r\\n            btnState('.btn[data-event=\\\"bold\\\"]', function() {\\r\\n                return styleInfo['font-bold'] === 'bold';\\r\\n            });\\r\\n            btnState('.btn[data-event=\\\"italic\\\"]', function() {\\r\\n                return styleInfo['font-italic'] === 'italic';\\r\\n            });\\r\\n            btnState('.btn[data-event=\\\"underline\\\"]', function() {\\r\\n                return styleInfo['font-underline'] === 'underline';\\r\\n            });\\r\\n            btnState('.btn[data-event=\\\"strikethrough\\\"]', function() {\\r\\n                return styleInfo['font-strikethrough'] === 'strikethrough';\\r\\n            });\\r\\n            btnState('.btn[data-event=\\\"superscript\\\"]', function() {\\r\\n                return styleInfo['font-superscript'] === 'superscript';\\r\\n            });\\r\\n            btnState('.btn[data-event=\\\"subscript\\\"]', function() {\\r\\n                return styleInfo['font-subscript'] === 'subscript';\\r\\n            });\\r\\n            btnState('.btn[data-event=\\\"justifyLeft\\\"]', function() {\\r\\n                return styleInfo['text-align'] === 'left' || styleInfo['text-align'] === 'start';\\r\\n            });\\r\\n            btnState('.btn[data-event=\\\"justifyCenter\\\"]', function() {\\r\\n                return styleInfo['text-align'] === 'center';\\r\\n            });\\r\\n            btnState('.btn[data-event=\\\"justifyRight\\\"]', function() {\\r\\n                return styleInfo['text-align'] === 'right';\\r\\n            });\\r\\n            btnState('.btn[data-event=\\\"justifyFull\\\"]', function() {\\r\\n                return styleInfo['text-align'] === 'justify';\\r\\n            });\\r\\n            btnState('.btn[data-event=\\\"insertUnorderedList\\\"]', function() {\\r\\n                return styleInfo['list-style'] === 'unordered';\\r\\n            });\\r\\n            btnState('.btn[data-event=\\\"insertOrderedList\\\"]', function() {\\r\\n                return styleInfo['list-style'] === 'ordered';\\r\\n            });\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * update recent color\\r\\n         *\\r\\n         * @param {Node} button\\r\\n         * @param {String} eventName\\r\\n         * @param {Mixed} value\\r\\n         */\\r\\n        this.updateRecentColor = function(button, eventName, value) {\\r\\n            var $color = $(button).closest('.note-color');\\r\\n            var $recentColor = $color.find('.note-recent-color');\\r\\n            var colorInfo = JSON.parse($recentColor.attr('data-value'));\\r\\n            var sKey = eventName === 'backColor' ? 'background-color' : 'color';\\r\\n\\r\\n            colorInfo[eventName] = value;\\r\\n            $recentColor.attr('data-value', JSON.stringify(colorInfo));\\r\\n            $recentColor.css(sKey, value);\\r\\n        };\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @class module.Toolbar\\r\\n     *\\r\\n     * Toolbar\\r\\n     */\\r\\n    var Toolbar = function() {\\r\\n        var button = new Button();\\r\\n\\r\\n        this.update = function($toolbar, styleInfo) {\\r\\n            button.update($toolbar, styleInfo);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @param {Node} button\\r\\n         * @param {String} eventName\\r\\n         * @param {String} value\\r\\n         */\\r\\n        this.updateRecentColor = function(buttonNode, eventName, value) {\\r\\n            button.updateRecentColor(buttonNode, eventName, value);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * activate buttons exclude codeview\\r\\n         * @param {jQuery} $toolbar\\r\\n         */\\r\\n        this.activate = function($toolbar) {\\r\\n            $toolbar.find('button, .btn')\\r\\n                .not('.btn[data-event=\\\"codeview\\\"]')\\r\\n                .removeClass('disabled');\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * deactivate buttons exclude codeview\\r\\n         * @param {jQuery} $toolbar\\r\\n         */\\r\\n        this.deactivate = function($toolbar) {\\r\\n            $toolbar.find('button, .btn')\\r\\n                .not('.btn[data-event=\\\"codeview\\\"]')\\r\\n                .addClass('disabled');\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @param {jQuery} $container\\r\\n         * @param {Boolean} [bFullscreen=false]\\r\\n         */\\r\\n        this.updateFullscreen = function($container, bFullscreen) {\\r\\n            var $btn = $container.find('.btn[data-event=\\\"fullscreen\\\"]');\\r\\n            $btn.toggleClass('active', bFullscreen);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @param {jQuery} $container\\r\\n         * @param {Boolean} [isCodeview=false]\\r\\n         */\\r\\n        this.updateCodeview = function($container, isCodeview) {\\r\\n            var $btn = $container.find('.btn[data-event=\\\"codeview\\\"]');\\r\\n            $btn.toggleClass('active', isCodeview);\\r\\n\\r\\n            if (isCodeview) {\\r\\n                this.deactivate($container);\\r\\n            } else {\\r\\n                this.activate($container);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * get button in toolbar\\r\\n         *\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {String} name\\r\\n         * @return {jQuery}\\r\\n         */\\r\\n        this.get = function($editable, name) {\\r\\n            var $toolbar = dom.makeLayoutInfo($editable).toolbar();\\r\\n\\r\\n            return $toolbar.find('[data-name=' + name + ']');\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * set button state\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {String} name\\r\\n         * @param {Boolean} [isActive=true]\\r\\n         */\\r\\n        this.setButtonState = function($editable, name, isActive) {\\r\\n            isActive = (isActive === false) ? false : true;\\r\\n\\r\\n            var $button = this.get($editable, name);\\r\\n            $button.toggleClass('active', isActive);\\r\\n        };\\r\\n    };\\r\\n\\r\\n    var EDITABLE_PADDING = 24;\\r\\n\\r\\n    var Statusbar = function() {\\r\\n        var $document = $(document);\\r\\n\\r\\n        this.attach = function(layoutInfo, options) {\\r\\n            if (!options.disableResizeEditor) {\\r\\n                layoutInfo.statusbar().on('mousedown', hStatusbarMousedown);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * `mousedown` event handler on statusbar\\r\\n         *\\r\\n         * @param {MouseEvent} event\\r\\n         */\\r\\n        var hStatusbarMousedown = function(event) {\\r\\n            event.preventDefault();\\r\\n            event.stopPropagation();\\r\\n\\r\\n            var $editable = dom.makeLayoutInfo(event.target).editable();\\r\\n            var editableTop = $editable.offset().top - $document.scrollTop();\\r\\n\\r\\n            var layoutInfo = dom.makeLayoutInfo(event.currentTarget || event.target);\\r\\n            var options = layoutInfo.editor().data('options');\\r\\n\\r\\n            $document.on('mousemove', function(event) {\\r\\n                var nHeight = event.clientY - (editableTop + EDITABLE_PADDING);\\r\\n\\r\\n                nHeight = (options.minHeight > 0) ? Math.max(nHeight, options.minHeight) : nHeight;\\r\\n                nHeight = (options.maxHeight > 0) ? Math.min(nHeight, options.maxHeight) : nHeight;\\r\\n\\r\\n                $editable.height(nHeight);\\r\\n            }).one('mouseup', function() {\\r\\n                $document.off('mousemove');\\r\\n            });\\r\\n        };\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @class module.Popover\\r\\n     *\\r\\n     * Popover (http://getbootstrap.com/javascript/#popovers)\\r\\n     *\\r\\n     */\\r\\n    var Popover = function() {\\r\\n        var button = new Button();\\r\\n\\r\\n        /**\\r\\n         * returns position from placeholder\\r\\n         *\\r\\n         * @private\\r\\n         * @param {Node} placeholder\\r\\n         * @param {Boolean} isAirMode\\r\\n         * @return {Object}\\r\\n         * @return {Number} return.left\\r\\n         * @return {Number} return.top\\r\\n         */\\r\\n        var posFromPlaceholder = function(placeholder, isAirMode) {\\r\\n            var $placeholder = $(placeholder);\\r\\n            var pos = isAirMode ? $placeholder.offset() : $placeholder.position();\\r\\n            var height = $placeholder.outerHeight(true); // include margin\\r\\n\\r\\n            // popover below placeholder.\\r\\n            return {\\r\\n                left: pos.left,\\r\\n                top: pos.top + height\\r\\n            };\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * show popover\\r\\n         *\\r\\n         * @private\\r\\n         * @param {jQuery} popover\\r\\n         * @param {Position} pos\\r\\n         */\\r\\n        var showPopover = function($popover, pos) {\\r\\n            $popover.css({\\r\\n                display: 'block',\\r\\n                left: pos.left,\\r\\n                top: pos.top\\r\\n            });\\r\\n        };\\r\\n\\r\\n        var PX_POPOVER_ARROW_OFFSET_X = 20;\\r\\n\\r\\n        /**\\r\\n         * update current state\\r\\n         * @param {jQuery} $popover - popover container\\r\\n         * @param {Object} styleInfo - style object\\r\\n         * @param {Boolean} isAirMode\\r\\n         */\\r\\n        this.update = function($popover, styleInfo, isAirMode) {\\r\\n            button.update($popover, styleInfo);\\r\\n\\r\\n            var $linkPopover = $popover.find('.note-link-popover');\\r\\n            if (styleInfo.anchor) {\\r\\n                var $anchor = $linkPopover.find('a');\\r\\n                var href = $(styleInfo.anchor).attr('href');\\r\\n                var target = $(styleInfo.anchor).attr('target');\\r\\n                $anchor.attr('href', href).html(href);\\r\\n                if (!target) {\\r\\n                    $anchor.removeAttr('target');\\r\\n                } else {\\r\\n                    $anchor.attr('target', '_blank');\\r\\n                }\\r\\n                showPopover($linkPopover, posFromPlaceholder(styleInfo.anchor, isAirMode));\\r\\n            } else {\\r\\n                $linkPopover.hide();\\r\\n            }\\r\\n\\r\\n            var $imagePopover = $popover.find('.note-image-popover');\\r\\n            if (styleInfo.image) {\\r\\n                showPopover($imagePopover, posFromPlaceholder(styleInfo.image, isAirMode));\\r\\n            } else {\\r\\n                $imagePopover.hide();\\r\\n            }\\r\\n\\r\\n            var $airPopover = $popover.find('.note-air-popover');\\r\\n            if (isAirMode && !styleInfo.range.isCollapsed()) {\\r\\n                var rect = list.last(styleInfo.range.getClientRects());\\r\\n                if (rect) {\\r\\n                    var bnd = func.rect2bnd(rect);\\r\\n                    showPopover($airPopover, {\\r\\n                        left: Math.max(bnd.left + bnd.width / 2 - PX_POPOVER_ARROW_OFFSET_X, 0),\\r\\n                        top: bnd.top + bnd.height\\r\\n                    });\\r\\n                }\\r\\n            } else {\\r\\n                $airPopover.hide();\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @param {Node} button\\r\\n         * @param {String} eventName\\r\\n         * @param {String} value\\r\\n         */\\r\\n        this.updateRecentColor = function(button, eventName, value) {\\r\\n            button.updateRecentColor(button, eventName, value);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * hide all popovers\\r\\n         * @param {jQuery} $popover - popover container\\r\\n         */\\r\\n        this.hide = function($popover) {\\r\\n            $popover.children().hide();\\r\\n        };\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @class module.Handle\\r\\n     *\\r\\n     * Handle\\r\\n     */\\r\\n    var Handle = function(handler) {\\r\\n        var $document = $(document);\\r\\n\\r\\n        /**\\r\\n         * `mousedown` event handler on $handle\\r\\n         *  - controlSizing: resize image\\r\\n         *\\r\\n         * @param {MouseEvent} event\\r\\n         */\\r\\n        var hHandleMousedown = function(event) {\\r\\n            if (dom.isControlSizing(event.target)) {\\r\\n                event.preventDefault();\\r\\n                event.stopPropagation();\\r\\n\\r\\n                var layoutInfo = dom.makeLayoutInfo(event.target),\\r\\n                    $handle = layoutInfo.handle(),\\r\\n                    $popover = layoutInfo.popover(),\\r\\n                    $editable = layoutInfo.editable(),\\r\\n                    $editor = layoutInfo.editor();\\r\\n\\r\\n                var target = $handle.find('.note-control-selection').data('target'),\\r\\n                    $target = $(target), posStart = $target.offset(),\\r\\n                    scrollTop = $document.scrollTop();\\r\\n\\r\\n                var isAirMode = $editor.data('options').airMode;\\r\\n\\r\\n                $document.on('mousemove', function(event) {\\r\\n                    handler.invoke('editor.resizeTo', {\\r\\n                        x: event.clientX - posStart.left,\\r\\n                        y: event.clientY - (posStart.top - scrollTop)\\r\\n                    }, $target, !event.shiftKey);\\r\\n\\r\\n                    handler.invoke('handle.update', $handle, {image: target}, isAirMode);\\r\\n                    handler.invoke('popover.update', $popover, {image: target}, isAirMode);\\r\\n                }).one('mouseup', function() {\\r\\n                    $document.off('mousemove');\\r\\n                    handler.invoke('editor.afterCommand', $editable);\\r\\n                });\\r\\n\\r\\n                if (!$target.data('ratio')) { // original ratio.\\r\\n                    $target.data('ratio', $target.height() / $target.width());\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n\\r\\n        this.attach = function(layoutInfo) {\\r\\n            layoutInfo.handle().on('mousedown', hHandleMousedown);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * update handle\\r\\n         * @param {jQuery} $handle\\r\\n         * @param {Object} styleInfo\\r\\n         * @param {Boolean} isAirMode\\r\\n         */\\r\\n        this.update = function($handle, styleInfo, isAirMode) {\\r\\n            var $selection = $handle.find('.note-control-selection');\\r\\n            if (styleInfo.image) {\\r\\n                var $image = $(styleInfo.image);\\r\\n                var pos = isAirMode ? $image.offset() : $image.position();\\r\\n\\r\\n                // include margin\\r\\n                var imageSize = {\\r\\n                    w: $image.outerWidth(true),\\r\\n                    h: $image.outerHeight(true)\\r\\n                };\\r\\n\\r\\n                $selection.css({\\r\\n                    display: 'block',\\r\\n                    left: pos.left,\\r\\n                    top: pos.top,\\r\\n                    width: imageSize.w,\\r\\n                    height: imageSize.h\\r\\n                }).data('target', styleInfo.image); // save current image element.\\r\\n                var sizingText = imageSize.w + 'x' + imageSize.h;\\r\\n                $selection.find('.note-control-selection-info').text(sizingText);\\r\\n            } else {\\r\\n                $selection.hide();\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * hide\\r\\n         *\\r\\n         * @param {jQuery} $handle\\r\\n         */\\r\\n        this.hide = function($handle) {\\r\\n            $handle.children().hide();\\r\\n        };\\r\\n    };\\r\\n\\r\\n    var Fullscreen = function(handler) {\\r\\n        var $window = $(window);\\r\\n        var $scrollbar = $('html, body');\\r\\n\\r\\n        /**\\r\\n         * toggle fullscreen\\r\\n         *\\r\\n         * @param {Object} layoutInfo\\r\\n         */\\r\\n        this.toggle = function(layoutInfo) {\\r\\n\\r\\n            var $editor = layoutInfo.editor(),\\r\\n                $toolbar = layoutInfo.toolbar(),\\r\\n                $editable = layoutInfo.editable(),\\r\\n                $codable = layoutInfo.codable();\\r\\n\\r\\n            var resize = function(size) {\\r\\n                $editable.css('height', size.h);\\r\\n        \";\n  builder.string += \"        $codable.css('height', size.h);\\r\\n                if ($codable.data('cmeditor')) {\\r\\n                    $codable.data('cmeditor').setsize(null, size.h);\\r\\n                }\\r\\n            };\\r\\n\\r\\n            $editor.toggleClass('fullscreen');\\r\\n            var isFullscreen = $editor.hasClass('fullscreen');\\r\\n            if (isFullscreen) {\\r\\n\\r\\n                $editable.data('orgheight', $editable.css('height'));\\r\\n\\r\\n                $window.on('resize', function() {\\r\\n                    resize({\\r\\n                        h: $window.height() - $toolbar.outerHeight()\\r\\n                    });\\r\\n                }).trigger('resize');\\r\\n\\r\\n                $scrollbar.css('overflow', 'hidden');\\r\\n                $toolbar.css('top', 0);\\r\\n            } else {\\r\\n                $window.off('resize');\\r\\n                resize({\\r\\n                    h: $editable.data('orgheight')\\r\\n                });\\r\\n                $scrollbar.css('overflow', 'visible');\\r\\n            }\\r\\n\\r\\n            handler.invoke('toolbar.updateFullscreen', $toolbar, isFullscreen);\\r\\n        };\\r\\n    };\\r\\n\\r\\n\\r\\n    var CodeMirror;\\r\\n    if (agent.hasCodeMirror) {\\r\\n        if (agent.isSupportAmd) {\\r\\n            require(['CodeMirror'], function(cm) {\\r\\n                CodeMirror = cm;\\r\\n            });\\r\\n        } else {\\r\\n            CodeMirror = window.CodeMirror;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @class Codeview\\r\\n     */\\r\\n    var Codeview = function(handler) {\\r\\n\\r\\n        this.sync = function(layoutInfo) {\\r\\n            var isCodeview = handler.invoke('codeview.isActivated', layoutInfo);\\r\\n            if (isCodeview && agent.hasCodeMirror) {\\r\\n                layoutInfo.codable().data('cmEditor').save();\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @param {Object} layoutInfo\\r\\n         * @return {Boolean}\\r\\n         */\\r\\n        this.isActivated = function(layoutInfo) {\\r\\n            var $editor = layoutInfo.editor();\\r\\n            return $editor.hasClass('codeview');\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * toggle codeview\\r\\n         *\\r\\n         * @param {Object} layoutInfo\\r\\n         */\\r\\n        this.toggle = function(layoutInfo) {\\r\\n            if (this.isActivated(layoutInfo)) {\\r\\n                this.deactivate(layoutInfo);\\r\\n            } else {\\r\\n                this.activate(layoutInfo);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        //var originalValue;\\r\\n        /**\\r\\n         * activate code view\\r\\n         *\\r\\n         * @param {Object} layoutInfo\\r\\n         */\\r\\n        this.activate = function(layoutInfo) {\\r\\n            var $editor = layoutInfo.editor(),\\r\\n                $toolbar = layoutInfo.toolbar(),\\r\\n                $editable = layoutInfo.editable(),\\r\\n                $codable = layoutInfo.codable(),\\r\\n                $popover = layoutInfo.popover(),\\r\\n                $handle = layoutInfo.handle();\\r\\n\\r\\n            var options = $editor.data('options');\\r\\n            var codeString = dom.html($editable, false);\\r\\n\\r\\n            // >>>>>>> CK indentation function\\r\\n            function beautifyHTML(code, level, insideLastBlock, dictionary) {\\r\\n                var openTag = code.indexOf('<');\\r\\n                var closeTag = code.indexOf('>');\\r\\n                var chunk;\\r\\n\\r\\n                if (openTag === 0) {\\r\\n                    //first thing is a tag\\r\\n                    chunk = code.substring(0, closeTag + 1);\\r\\n                    code = code.substring(closeTag + 1);\\r\\n\\r\\n                    if (chunk.indexOf(\\\"<\\/\\\") === 0) {\\r\\n                        level--;\\r\\n                        nsideLastBlock = false;\\r\\n                    } else {\\r\\n                        if (insideLastBlock) {\\r\\n                            level++;\\r\\n                        }\\r\\n\\r\\n                        //check if current tag is a self closing tag (no indent next line in this case)\\r\\n                        var found = false;\\r\\n\\r\\n                        for (var i = 0; i < dictionary.length; i++) {\\r\\n                            if (chunk.indexOf(dictionary[i]) === 0) {\\r\\n                                found = true;\\r\\n                                break;\\r\\n                            }\\r\\n                        }\\r\\n                        if (!found) {\\r\\n                            insideLastBlock = true;\\r\\n                        } else {\\r\\n                            insideLastBlock = false;\\r\\n                        }\\r\\n                    }\\r\\n                } else {\\r\\n                    //first thing is content\\r\\n                    chunk = code.substring(0, openTag);\\r\\n                    code = code.substring(openTag);\\r\\n\\r\\n                    if (insideLastBlock) {\\r\\n                        level++;\\r\\n                    }\\r\\n                    insideLastBlock = false;\\r\\n                }\\r\\n                chunk = new Array(level + 1).join('    ') + chunk.trim();\\r\\n\\r\\n                if (code.length === 0) {\\r\\n                    return chunk;\\r\\n                }\\r\\n                return chunk + \\\"\\\\n\\\" + beautifyHTML(code.trim(), level, insideLastBlock, dictionary);\\r\\n            }\\r\\n\\r\\n            //originalValue = codeString;\\r\\n\\r\\n            var selfCloseTags = ['<img', '<br', '<hr'];\\r\\n            codeString = beautifyHTML(codeString, 0, false, selfCloseTags);\\r\\n            // CK end -----------------------\\r\\n\\r\\n            $codable.val(codeString);\\r\\n\\r\\n            var buttonHeight = $toolbar.find('.btn[data-event=codeview]').height();\\r\\n            var areaHeight = $(window).height() - buttonHeight;\\r\\n            $codable.height($editable.height());\\r\\n\\r\\n            handler.invoke('toolbar.updateCodeview', $toolbar, true);\\r\\n            handler.invoke('popover.hide', $popover);\\r\\n            handler.invoke('handle.hide', $handle);\\r\\n\\r\\n            $editor.addClass('codeview');\\r\\n\\r\\n            $codable.focus();\\r\\n\\r\\n            // activate CodeMirror as codable\\r\\n            if (agent.hasCodeMirror) {\\r\\n                var cmEditor = CodeMirror.fromTextArea($codable[0], options.codemirror);\\r\\n\\r\\n                // CodeMirror TernServer\\r\\n                if (options.codemirror.tern) {\\r\\n                    var server = new CodeMirror.TernServer(options.codemirror.tern);\\r\\n                    cmEditor.ternServer = server;\\r\\n                    cmEditor.on('cursorActivity', function(cm) {\\r\\n                        server.updateArgHints(cm);\\r\\n                    });\\r\\n                }\\r\\n\\r\\n                // CodeMirror hasn't Padding.\\r\\n                if ($editor.hasClass('fullscreen')) {\\r\\n                    cmEditor.setSize(null, areaHeight);\\r\\n                }\\r\\n                else {\\r\\n                    cmEditor.setSize(null, $editable.outerHeight());\\r\\n                }\\r\\n\\r\\n                $codable.data('cmEditor', cmEditor);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * deactivate code view\\r\\n         *\\r\\n         * @param {Object} layoutInfo\\r\\n         */\\r\\n        this.deactivate = function(layoutInfo) {\\r\\n            var $holder = layoutInfo.holder(),\\r\\n                $editor = layoutInfo.editor(),\\r\\n                $toolbar = layoutInfo.toolbar(),\\r\\n                $editable = layoutInfo.editable(),\\r\\n                $codable = layoutInfo.codable();\\r\\n\\r\\n            var options = $editor.data('options');\\r\\n\\r\\n            // deactivate CodeMirror as codable\\r\\n            if (agent.hasCodeMirror) {\\r\\n                var cmEditor = $codable.data('cmEditor');\\r\\n                $codable.val(cmEditor.getValue());\\r\\n                cmEditor.toTextArea();\\r\\n            }\\r\\n\\r\\n            var value = dom.value($codable, options.prettifyHtml) || dom.emptyPara;\\r\\n            //var value = originalValue;\\r\\n            var isChange = $editable.html() !== value;\\r\\n\\r\\n            $editable.html(value);\\r\\n            $editable.height(options.height ? $codable.height() : 'auto');\\r\\n            $editor.removeClass('codeview');\\r\\n\\r\\n            if (isChange) {\\r\\n                handler.bindCustomEvent(\\r\\n                    $holder, $editable.data('callbacks'), 'change'\\r\\n                )($editable.html(), $editable);\\r\\n            }\\r\\n\\r\\n            $editable.focus();\\r\\n\\r\\n            handler.invoke('toolbar.updateCodeview', $toolbar, false);\\r\\n        };\\r\\n    };\\r\\n\\r\\n    var DragAndDrop = function(handler) {\\r\\n        var $document = $(document);\\r\\n\\r\\n        /**\\r\\n         * attach Drag and Drop Events\\r\\n         *\\r\\n         * @param {Object} layoutInfo - layout Informations\\r\\n         * @param {Object} options\\r\\n         */\\r\\n        this.attach = function(layoutInfo, options) {\\r\\n            if (options.airMode || options.disableDragAndDrop) {\\r\\n                // prevent default drop event\\r\\n                $document.on('drop', function(e) {\\r\\n                    e.preventDefault();\\r\\n                });\\r\\n            } else {\\r\\n                this.attachDragAndDropEvent(layoutInfo, options);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * attach Drag and Drop Events\\r\\n         *\\r\\n         * @param {Object} layoutInfo - layout Informations\\r\\n         * @param {Object} options\\r\\n         */\\r\\n        this.attachDragAndDropEvent = function(layoutInfo, options) {\\r\\n            var collection = $(),\\r\\n                $editor = layoutInfo.editor(),\\r\\n                $dropzone = layoutInfo.dropzone(),\\r\\n                $dropzoneMessage = $dropzone.find('.note-dropzone-message');\\r\\n\\r\\n            // show dropzone on dragenter when dragging a object to document\\r\\n            // -but only if the editor is visible, i.e. has a positive width and height\\r\\n            $document.on('dragenter', function(e) {\\r\\n                var isCodeview = handler.invoke('codeview.isActivated', layoutInfo);\\r\\n                var hasEditorSize = $editor.width() > 0 && $editor.height() > 0;\\r\\n                if (!isCodeview && !collection.length && hasEditorSize) {\\r\\n                    $editor.addClass('dragover');\\r\\n                    $dropzone.width($editor.width());\\r\\n                    $dropzone.height($editor.height());\\r\\n                    $dropzoneMessage.text(options.langInfo.image.dragImageHere);\\r\\n                }\\r\\n                collection = collection.add(e.target);\\r\\n            }).on('dragleave', function(e) {\\r\\n                collection = collection.not(e.target);\\r\\n                if (!collection.length) {\\r\\n                    $editor.removeClass('dragover');\\r\\n                }\\r\\n            }).on('drop', function() {\\r\\n                collection = $();\\r\\n                $editor.removeClass('dragover');\\r\\n            });\\r\\n\\r\\n            // change dropzone's message on hover.\\r\\n            $dropzone.on('dragenter', function() {\\r\\n                $dropzone.addClass('hover');\\r\\n                $dropzoneMessage.text(options.langInfo.image.dropImage);\\r\\n            }).on('dragleave', function() {\\r\\n                $dropzone.removeClass('hover');\\r\\n                $dropzoneMessage.text(options.langInfo.image.dragImageHere);\\r\\n            });\\r\\n\\r\\n            // attach dropImage\\r\\n            $dropzone.on('drop', function(event) {\\r\\n\\r\\n                var dataTransfer = event.originalEvent.dataTransfer;\\r\\n                var layoutInfo = dom.makeLayoutInfo(event.currentTarget || event.target);\\r\\n\\r\\n                if (dataTransfer && dataTransfer.files && dataTransfer.files.length) {\\r\\n                    event.preventDefault();\\r\\n                    layoutInfo.editable().focus();\\r\\n                    handler.insertImages(layoutInfo, dataTransfer.files);\\r\\n                } else {\\r\\n                    var insertNodefunc = function() {\\r\\n                        layoutInfo.holder().materialnote('insertNode', this);\\r\\n                    };\\r\\n\\r\\n                    for (var i = 0, len = dataTransfer.types.length; i < len; i++) {\\r\\n                        var type = dataTransfer.types[i];\\r\\n                        var content = dataTransfer.getData(type);\\r\\n\\r\\n                        if (type.toLowerCase().indexOf('text') > -1) {\\r\\n                            layoutInfo.holder().materialnote('pasteHTML', content);\\r\\n                        } else {\\r\\n                            $(content).each(insertNodefunc);\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            }).on('dragover', false); // prevent default dragover event\\r\\n        };\\r\\n    };\\r\\n\\r\\n    var Clipboard = function(handler) {\\r\\n\\r\\n        var $paste;\\r\\n\\r\\n        this.attach = function(layoutInfo) {\\r\\n\\r\\n            if (window.clipboardData || agent.isFF) {\\r\\n                $paste = $('<div />').attr('contenteditable', true).css({\\r\\n                    position : 'absolute',\\r\\n                    left : -100000,\\r\\n                    'opacity' : 0\\r\\n                });\\r\\n                layoutInfo.editable().after($paste);\\r\\n                $paste.one('paste', hPasteClipboardImage);\\r\\n\\r\\n                layoutInfo.editable().on('keydown', function(e) {\\r\\n                    if (e.ctrlKey && e.keyCode === 86) {  // CTRL+V\\r\\n                        handler.invoke('saveRange', layoutInfo.editable());\\r\\n                        if ($paste) {\\r\\n                            $paste.focus();\\r\\n                        }\\r\\n                    }\\r\\n                });\\r\\n            }\\r\\n\\r\\n            layoutInfo.editable().on('paste', hPasteClipboardImage);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * paste clipboard image\\r\\n         *\\r\\n         * @param {Event} event\\r\\n         */\\r\\n        var hPasteClipboardImage = function(event) {\\r\\n\\r\\n            var clipboardData = event.originalEvent.clipboardData;\\r\\n            var layoutInfo = dom.makeLayoutInfo(event.currentTarget || event.target);\\r\\n            var $editable = layoutInfo.editable();\\r\\n\\r\\n            if (!clipboardData || !clipboardData.items || !clipboardData.items.length) {\\r\\n\\r\\n                var callbacks = $editable.data('callbacks');\\r\\n                // only can run if it has onImageUpload method\\r\\n                if (!callbacks.onImageUpload) {\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                setTimeout(function() {\\r\\n                    if (!$paste) {\\r\\n                        return;\\r\\n                    }\\r\\n\\r\\n                    var imgNode = $paste[0].firstChild;\\r\\n                    if (!imgNode) {\\r\\n                        return;\\r\\n                    }\\r\\n\\r\\n                    handler.invoke('restoreRange', $editable);\\r\\n                    if (!dom.isImg(imgNode)) {\\r\\n                        handler.invoke('pasteHTML', $editable, $paste.html());\\r\\n                    } else {\\r\\n                        var datauri = imgNode.src;\\r\\n\\r\\n                        var data = atob(datauri.split(',')[1]);\\r\\n                        var array = new Uint8Array(data.length);\\r\\n                        for (var i = 0; i < data.length; i++) {\\r\\n                            array[i] = data.charCodeAt(i);\\r\\n                        }\\r\\n\\r\\n                        var blob = new Blob([array], { type : 'image/png' });\\r\\n                        blob.name = 'clipboard.png';\\r\\n                        handler.invoke('focus', $editable);\\r\\n                        handler.insertImages(layoutInfo, [blob]);\\r\\n                    }\\r\\n\\r\\n                    $paste.remove();\\r\\n\\r\\n                }, 0);\\r\\n\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            var item = list.head(clipboardData.items);\\r\\n            var isClipboardImage = item.kind === 'file' && item.type.indexOf('image/') !== -1;\\r\\n\\r\\n            if (isClipboardImage) {\\r\\n                handler.insertImages(layoutInfo, [item.getAsFile()]);\\r\\n            }\\r\\n\\r\\n            handler.invoke('editor.afterCommand', $editable);\\r\\n        };\\r\\n    };\\r\\n\\r\\n    var LinkDialog = function(handler) {\\r\\n\\r\\n        /**\\r\\n         * toggle button status\\r\\n         *\\r\\n         * @private\\r\\n         * @param {jQuery} $btn\\r\\n         * @param {Boolean} isEnable\\r\\n         */\\r\\n        var toggleBtn = function($btn, isEnable) {\\r\\n            $btn.toggleClass('disabled', !isEnable);\\r\\n            $btn.attr('disabled', !isEnable);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * bind enter key\\r\\n         *\\r\\n         * @private\\r\\n         * @param {jQuery} $input\\r\\n         * @param {jQuery} $btn\\r\\n         */\\r\\n        var bindEnterKey = function($input, $btn) {\\r\\n            $input.on('keypress', function(event) {\\r\\n                if (event.keyCode === key.code.ENTER) {\\r\\n                    $btn.trigger('click');\\r\\n                }\\r\\n            });\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * Show link dialog and set event handlers on dialog controls.\\r\\n         *\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {jQuery} $dialog\\r\\n         * @param {Object} linkInfo\\r\\n         * @return {Promise}\\r\\n         */\\r\\n        this.showLinkDialog = function($editable, $dialo\";\n  builder.string += \"g, linkInfo) {\\r\\n            return $.Deferred(function(deferred) {\\r\\n                var $linkDialog = $dialog.find('.note-link-dialog');\\r\\n                var $linkText = $linkDialog.find('.note-link-text'),\\r\\n                    $linkTextLabel = $linkText.next('label'),\\r\\n                    $linkUrl = $linkDialog.find('.note-link-url'),\\r\\n                    $linkBtn = $linkDialog.find('.note-link-btn'),\\r\\n                    $closeBtn = $linkDialog.find('.btnClose');\\r\\n                var $openInNewWindow = $linkDialog.find('input[type=checkbox]');\\r\\n\\r\\n                $linkDialog.openModal();\\r\\n                $linkText.val(linkInfo.text);\\r\\n                if (linkInfo.text.length > 0) $linkTextLabel.addClass('active');\\r\\n\\r\\n                $linkText.on('keyup', function() {\\r\\n                    toggleBtn($linkBtn, $linkText.val() && $linkUrl.val());\\r\\n                    // if linktext was modified by keyup,\\r\\n                    // stop cloning text from linkUrl\\r\\n                    linkInfo.text = $linkText.val();\\r\\n                });\\r\\n\\r\\n                $closeBtn.click(function(event) {\\r\\n                    event.preventDefault();\\r\\n\\r\\n                    $linkDialog.closeModal();\\r\\n                });\\r\\n\\r\\n                // if no url was given, copy text to url\\r\\n                if (!linkInfo.url) {\\r\\n                    linkInfo.url = linkInfo.text || 'http://';\\r\\n                    toggleBtn($linkBtn, linkInfo.text);\\r\\n                }\\r\\n\\r\\n                $linkUrl.on('keyup', function() {\\r\\n                    toggleBtn($linkBtn, $linkText.val() && $linkUrl.val());\\r\\n                    // display same link on `Text to display` input\\r\\n                    // when create a new link\\r\\n                    if (!linkInfo.text) {\\r\\n                        $linkTextLabel.addClass('active');\\r\\n                        $linkText.val($linkUrl.val());\\r\\n                    }\\r\\n                }).val(linkInfo.url).trigger('focus').trigger('select');\\r\\n\\r\\n                bindEnterKey($linkUrl, $linkBtn);\\r\\n                bindEnterKey($linkText, $linkBtn);\\r\\n\\r\\n                $openInNewWindow.prop('checked', linkInfo.newWindow);\\r\\n\\r\\n                $linkBtn.one('click', function(event) {\\r\\n                    event.preventDefault();\\r\\n\\r\\n                    deferred.resolve({\\r\\n                        range: linkInfo.range,\\r\\n                        url: $linkUrl.val(),\\r\\n                        text: $linkText.val(),\\r\\n                        newWindow: $openInNewWindow.is(':checked')\\r\\n                    });\\r\\n\\r\\n                    $('.note-link-text').val('');\\r\\n                    $('.note-link-text').next('label').removeClass('active');\\r\\n                    $('.note-link-url').val('');\\r\\n                    $linkDialog.closeModal();\\r\\n                });\\r\\n            }).promise();\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @param {Object} layoutInfo\\r\\n         */\\r\\n        this.show = function(layoutInfo) {\\r\\n            var $editor = layoutInfo.editor(),\\r\\n                $dialog = layoutInfo.dialog(),\\r\\n                $editable = layoutInfo.editable(),\\r\\n                $popover = layoutInfo.popover(),\\r\\n                linkInfo = handler.invoke('editor.getLinkInfo', $editable);\\r\\n\\r\\n            var options = $editor.data('options');\\r\\n\\r\\n            handler.invoke('editor.saveRange', $editable);\\r\\n            this.showLinkDialog($editable, $dialog, linkInfo).then(function(linkInfo) {\\r\\n                handler.invoke('editor.restoreRange', $editable);\\r\\n                handler.invoke('editor.createLink', $editable, linkInfo, options);\\r\\n                // hide popover after creating link\\r\\n                handler.invoke('popover.hide', $popover);\\r\\n            }).fail(function() {\\r\\n                handler.invoke('editor.restoreRange', $editable);\\r\\n            });\\r\\n        };\\r\\n    };\\r\\n\\r\\n    var ImageDialog = function(handler) {\\r\\n        /**\\r\\n         * toggle button status\\r\\n         *\\r\\n         * @private\\r\\n         * @param {jQuery} $btn\\r\\n         * @param {Boolean} isEnable\\r\\n         */\\r\\n        var toggleBtn = function($btn, isEnable) {\\r\\n            $btn.toggleClass('disabled', !isEnable);\\r\\n            $btn.attr('disabled', !isEnable);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * bind enter key\\r\\n         *\\r\\n         * @private\\r\\n         * @param {jQuery} $input\\r\\n         * @param {jQuery} $btn\\r\\n         */\\r\\n        var bindEnterKey = function($input, $btn) {\\r\\n            $input.on('keypress', function(event) {\\r\\n                if (event.keyCode === key.code.ENTER) {\\r\\n                    $btn.trigger('click');\\r\\n                }\\r\\n            });\\r\\n        };\\r\\n\\r\\n        this.show = function(layoutInfo) {\\r\\n            var $dialog = layoutInfo.dialog(),\\r\\n                $editable = layoutInfo.editable();\\r\\n\\r\\n            handler.invoke('editor.saveRange', $editable);\\r\\n            this.showImageDialog($editable, $dialog).then(function(data) {\\r\\n                handler.invoke('editor.restoreRange', $editable);\\r\\n\\r\\n                if (typeof data === 'string') {\\r\\n                    // image url\\r\\n                    handler.invoke('editor.insertImage', $editable, data);\\r\\n                } else {\\r\\n                    // array of files\\r\\n                    handler.insertImages(layoutInfo, data);\\r\\n                }\\r\\n            }).fail(function() {\\r\\n                handler.invoke('editor.restoreRange', $editable);\\r\\n            });\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * show image dialog\\r\\n         *\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {jQuery} $dialog\\r\\n         * @return {Promise}\\r\\n         */\\r\\n        this.showImageDialog = function($editable, $dialog) {\\r\\n            return $.Deferred(function(deferred) {\\r\\n                var $imageDialog = $dialog.find('.note-image-dialog');\\r\\n                var $imageInput = $dialog.find('.note-image-input'),\\r\\n                    $imageUrl = $dialog.find('.note-image-url'),\\r\\n                    $imageBtn = $dialog.find('.note-image-btn'),\\r\\n                    $closeBtn = $imageDialog.find('.btnClose');\\r\\n\\r\\n                $imageDialog.openModal();\\r\\n                // Cloning imageInput to clear element.\\r\\n                $imageInput.replaceWith($imageInput.clone()\\r\\n                    .on('change', function() {\\r\\n                        deferred.resolve(this.files || this.value);\\r\\n                        $imageUrl.val('');\\r\\n                        $imageDialog.closeModal();\\r\\n                        deferred.resolve();\\r\\n                    })\\r\\n                    .val('')\\r\\n                );\\r\\n\\r\\n                $imageBtn.click(function(event) {\\r\\n                    event.preventDefault();\\r\\n\\r\\n                    deferred.resolve($imageUrl.val());\\r\\n                    $imageUrl.val('');\\r\\n                    $imageDialog.closeModal();\\r\\n                    deferred.resolve();\\r\\n                });\\r\\n\\r\\n                $closeBtn.click(function(event) {\\r\\n                    event.preventDefault();\\r\\n\\r\\n                    $imageDialog.closeModal();\\r\\n                });\\r\\n\\r\\n                $imageUrl.on('keyup paste', function(event) {\\r\\n                    var url;\\r\\n\\r\\n                    if (event.type === 'paste') {\\r\\n                        url = event.originalEvent.clipboardData.getData('text');\\r\\n                    } else {\\r\\n                        url = $imageUrl.val();\\r\\n                    }\\r\\n                    toggleBtn($imageBtn, url);\\r\\n                });\\r\\n\\r\\n                bindEnterKey($imageUrl, $imageBtn);\\r\\n            });\\r\\n        };\\r\\n    };\\r\\n\\r\\n    var HelpDialog = function(handler) {\\r\\n        /**\\r\\n         * show help dialog\\r\\n         *\\r\\n         * @param {jQuery} $editable\\r\\n         * @param {jQuery} $dialog\\r\\n         * @return {Promise}\\r\\n         */\\r\\n        this.showHelpDialog = function($editable, $dialog) {\\r\\n            return $.Deferred(function(deferred) {\\r\\n                var $helpDialog = $dialog.find('.note-help-dialog');\\r\\n\\r\\n                $helpDialog.openModal();\\r\\n                deferred.resolve();\\r\\n            }).promise();\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @param {Object} layoutInfo\\r\\n         */\\r\\n        this.show = function(layoutInfo) {\\r\\n            var $dialog = layoutInfo.dialog(),\\r\\n                $editable = layoutInfo.editable();\\r\\n\\r\\n            handler.invoke('editor.saveRange', $editable, true);\\r\\n            this.showHelpDialog($editable, $dialog).then(function() {\\r\\n                handler.invoke('editor.restoreRange', $editable);\\r\\n            });\\r\\n        };\\r\\n    };\\r\\n\\r\\n\\r\\n    /**\\r\\n     * @class EventHandler\\r\\n     *\\r\\n     * EventHandler\\r\\n     *  - TODO: new instance per a editor\\r\\n     */\\r\\n    var EventHandler = function() {\\r\\n        /**\\r\\n         * Modules\\r\\n         */\\r\\n        var modules = this.modules = {\\r\\n            editor: new Editor(this),\\r\\n            toolbar: new Toolbar(this),\\r\\n            statusbar: new Statusbar(this),\\r\\n            popover: new Popover(this),\\r\\n            handle: new Handle(this),\\r\\n            fullscreen: new Fullscreen(this),\\r\\n            codeview: new Codeview(this),\\r\\n            dragAndDrop: new DragAndDrop(this),\\r\\n            clipboard: new Clipboard(this),\\r\\n            linkDialog: new LinkDialog(this),\\r\\n            imageDialog: new ImageDialog(this),\\r\\n            helpDialog: new HelpDialog(this)\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * invoke module's method\\r\\n         *\\r\\n         * @param {String} moduleAndMethod - ex) 'editor.redo'\\r\\n         * @param {...*} arguments - arguments of method\\r\\n         * @return {*}\\r\\n         */\\r\\n        this.invoke = function() {\\r\\n            var moduleAndMethod = list.head(list.from(arguments));\\r\\n            var args = list.tail(list.from(arguments));\\r\\n\\r\\n            var splits = moduleAndMethod.split('.');\\r\\n            var hasSeparator = splits.length > 1;\\r\\n            var moduleName = hasSeparator && list.head(splits);\\r\\n            var methodName = hasSeparator ? list.last(splits) : list.head(splits);\\r\\n\\r\\n            var module = this.getModule(moduleName);\\r\\n            var method = module[methodName];\\r\\n\\r\\n            return method && method.apply(module, args);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns module\\r\\n         *\\r\\n         * @param {String} moduleName - name of module\\r\\n         * @return {Module} - defaults is editor\\r\\n         */\\r\\n        this.getModule = function(moduleName) {\\r\\n            return this.modules[moduleName] || this.modules.editor;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * @param {jQuery} $holder\\r\\n         * @param {Object} callbacks\\r\\n         * @param {String} eventNamespace\\r\\n         * @returns {Function}\\r\\n         */\\r\\n        var bindCustomEvent = this.bindCustomEvent = function($holder, callbacks, eventNamespace) {\\r\\n            return function() {\\r\\n                var callback = callbacks[func.namespaceToCamel(eventNamespace, 'on')];\\r\\n                if (callback) {\\r\\n                    callback.apply($holder[0], arguments);\\r\\n                }\\r\\n                return $holder.trigger('materialnote.' + eventNamespace, arguments);\\r\\n            };\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * insert Images from file array.\\r\\n         *\\r\\n         * @private\\r\\n         * @param {Object} layoutInfo\\r\\n         * @param {File[]} files\\r\\n         */\\r\\n        this.insertImages = function(layoutInfo, files) {\\r\\n            var $editor = layoutInfo.editor(),\\r\\n                $editable = layoutInfo.editable(),\\r\\n                $holder = layoutInfo.holder();\\r\\n\\r\\n            var callbacks = $editable.data('callbacks');\\r\\n            var options = $editor.data('options');\\r\\n\\r\\n            // If onImageUpload options setted\\r\\n            if (callbacks.onImageUpload) {\\r\\n                bindCustomEvent($holder, callbacks, 'image.upload')(files);\\r\\n                // else insert Image as dataURL\\r\\n            } else {\\r\\n                $.each(files, function(idx, file) {\\r\\n                    var filename = file.name;\\r\\n                    if (options.maximumImageFileSize && options.maximumImageFileSize < file.size) {\\r\\n                        bindCustomEvent($holder, callbacks, 'image.upload.error')(options.langInfo.image.maximumFileSizeError);\\r\\n                    } else {\\r\\n                        async.readFileAsDataURL(file).then(function(sDataURL) {\\r\\n                            modules.editor.insertImage($editable, sDataURL, filename);\\r\\n                        }).fail(function() {\\r\\n                            bindCustomEvent($holder, callbacks, 'image.upload.error')(options.langInfo.image.maximumFileSizeError);\\r\\n                        });\\r\\n                    }\\r\\n                });\\r\\n            }\\r\\n        };\\r\\n\\r\\n        var commands = {\\r\\n            /**\\r\\n             * @param {Object} layoutInfo\\r\\n             */\\r\\n            showLinkDialog: function(layoutInfo) {\\r\\n                modules.linkDialog.show(layoutInfo);\\r\\n            },\\r\\n\\r\\n            /**\\r\\n             * @param {Object} layoutInfo\\r\\n             */\\r\\n            showImageDialog: function(layoutInfo) {\\r\\n                modules.imageDialog.show(layoutInfo);\\r\\n            },\\r\\n\\r\\n            /**\\r\\n             * @param {Object} layoutInfo\\r\\n             */\\r\\n            showHelpDialog: function(layoutInfo) {\\r\\n                modules.helpDialog.show(layoutInfo);\\r\\n            },\\r\\n\\r\\n            /**\\r\\n             * @param {Object} layoutInfo\\r\\n             */\\r\\n            fullscreen: function(layoutInfo) {\\r\\n                modules.fullscreen.toggle(layoutInfo);\\r\\n            },\\r\\n\\r\\n            /**\\r\\n             * @param {Object} layoutInfo\\r\\n             */\\r\\n            codeview: function(layoutInfo) {\\r\\n                modules.codeview.toggle(layoutInfo);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        var hMousedown = function(event) {\\r\\n            //preventDefault Selection for FF, IE8+\\r\\n            if (dom.isImg(event.target)) {\\r\\n                event.preventDefault();\\r\\n            }\\r\\n        };\\r\\n\\r\\n        var hKeyupAndMouseup = function(event) {\\r\\n            var layoutInfo = dom.makeLayoutInfo(event.currentTarget || event.target);\\r\\n            modules.editor.removeBogus(layoutInfo.editable());\\r\\n            hToolbarAndPopoverUpdate(event);\\r\\n        };\\r\\n\\r\\n        var hToolbarAndPopoverUpdate = function(event) {\\r\\n            // delay for range after mouseup\\r\\n            setTimeout(function() {\\r\\n                var layoutInfo = dom.makeLayoutInfo(event.currentTarget || event.target);\\r\\n                var styleInfo = modules.editor.currentStyle(event.target);\\r\\n                if (!styleInfo) { return; }\\r\\n\\r\\n                var isAirMode = layoutInfo.editor().data('options').airMode;\\r\\n                if (!isAirMode) {\\r\\n                    modules.toolbar.update(layoutInfo.toolbar(), styleInfo);\\r\\n                }\\r\\n\\r\\n                modules.popover.update(layoutInfo.popover(), styleInfo, isAirMode);\\r\\n                modules.handle.update(layoutInfo.handle(), styleInfo, isAirMode);\\r\\n            }, 0);\\r\\n        };\\r\\n\\r\\n        var hScroll = function(event) {\\r\\n            var layoutInfo = dom.makeLayoutInfo(event.currentTarget || event.target);\\r\\n            //hide popover and handle when scrolled\\r\\n            modules.popover.hide(layoutInfo.popover());\\r\\n            modules.handle.hide(layoutInfo.handle());\\r\\n        };\\r\\n\\r\\n        var hToolbarAndPopoverMousedown = function(event) {\\r\\n            // prevent default event when insertTable (FF, Webkit)\\r\\n            var $btn = $(event.target).closest('[data-event]');\\r\\n            if ($btn.length) {\\r\\n                event.preventDefault();\\r\\n            }\\r\\n        };\\r\\n\\r\\n        var hToolbarAndPopoverClick = function(event) {\\r\\n            var $btn = $(event.target).closest('[data-event]');\\r\\n\\r\\n            if ($btn.length) {\\r\\n                var eventName = $btn.attr('data-event'),\\r\\n                    value = $btn.attr('data-value'),\\r\\n                    hide = $btn.attr('data-hide');\\r\\n\\r\\n                var layoutInfo = dom.makeLayoutInfo(event.target);\\r\\n\\r\\n                // before command: detect control selection element($target)\\r\\n                var $target;\\r\\n                if ($.inArray(eventName, ['resize', 'floatMe', 'removeMedia', 'imageShape', 'imageClass']) !== -1) {\\r\\n                    var $selection = layoutInfo.handle().find('.note-control-selection');\\r\\n                    $target = $($selection.data('target'));\\r\\n                }\\r\\n\\r\\n                // If requested, hide the popover when the button is clicked.\\r\\n                // Useful for things like showHelpDialog.\\r\\n                if (hide) {\\r\\n                    $btn.parents('.popove\";\n  builder.string += \"r').hide();\\r\\n                }\\r\\n\\r\\n                if ($.isFunction($.materialnote.pluginEvents[eventName])) {\\r\\n                    $.materialnote.pluginEvents[eventName](event, modules.editor, layoutInfo, value);\\r\\n                } else if (modules.editor[eventName]) { // on command\\r\\n                    var $editable = layoutInfo.editable();\\r\\n                    $editable.focus();\\r\\n                    modules.editor[eventName]($editable, value, $target);\\r\\n                    event.preventDefault();\\r\\n                } else if (commands[eventName]) {\\r\\n                    commands[eventName].call(this, layoutInfo);\\r\\n                    event.preventDefault();\\r\\n                }\\r\\n\\r\\n                // after command\\r\\n                if ($.inArray(eventName, ['backColor', 'foreColor']) !== -1) {\\r\\n                    var options = layoutInfo.editor().data('options', options);\\r\\n                    var module = options.airMode ? modules.popover : modules.toolbar;\\r\\n                    module.updateRecentColor(list.head($btn), eventName, value);\\r\\n                }\\r\\n\\r\\n                hToolbarAndPopoverUpdate(event);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        var gridUnit = 26;\\r\\n        var hDimensionPickerMove = function(event, options) {\\r\\n            var $picker = $(event.target.parentNode); // target is mousecatcher\\r\\n            var $dropdown = $picker.parent();\\r\\n            var $dimensionDisplay = $picker.next();\\r\\n            var $catcher = $picker.find('.note-dimension-picker-mousecatcher');\\r\\n            var $highlighted = $picker.find('.note-dimension-picker-highlighted');\\r\\n            var $unhighlighted = $picker.find('.note-dimension-picker-unhighlighted');\\r\\n            var $hoverableOption = $dropdown.find(\\\"[id$='-hoverable']\\\");\\r\\n            var $borderedOption = $dropdown.find(\\\"[id$='-bordered']\\\");\\r\\n            var $stripedOption = $dropdown.find(\\\"[id$='-striped']\\\");\\r\\n            var $responsiveOption = $dropdown.find(\\\"[id$='-responsive']\\\");\\r\\n\\r\\n            var posOffset;\\r\\n            // HTML5 with jQuery - e.offsetX is undefined in Firefox\\r\\n            if (event.offsetX === undefined) {\\r\\n                var posCatcher = $(event.target).offset();\\r\\n\\r\\n                posOffset = {\\r\\n                    x: event.pageX - posCatcher.left,\\r\\n                    y: event.pageY - posCatcher.top\\r\\n                };\\r\\n            } else {\\r\\n                posOffset = {\\r\\n                    x: event.offsetX,\\r\\n                    y: event.offsetY\\r\\n                };\\r\\n            }\\r\\n\\r\\n            var dim = {\\r\\n                c: Math.ceil(posOffset.x / gridUnit) || 1,\\r\\n                r: Math.ceil(posOffset.y / gridUnit) || 1\\r\\n            };\\r\\n\\r\\n            var tableOptions = [];\\r\\n            if ($hoverableOption.is(':checked')) tableOptions.push('hoverable');\\r\\n            if ($borderedOption.is(':checked')) tableOptions.push('bordered');\\r\\n            if ($stripedOption.is(':checked')) tableOptions.push('striped');\\r\\n            if ($responsiveOption.is(':checked')) tableOptions.push('responsive-table');\\r\\n\\r\\n            $highlighted.css({ width: (dim.c * gridUnit) + 'px', height: (dim.r * gridUnit) + 'px' });\\r\\n            $catcher.attr('data-value', dim.c + 'x' + dim.r + 'x' + tableOptions.join('x'));\\r\\n\\r\\n            //if (3 < dim.c && dim.c < options.insertTableMaxSize.col) {\\r\\n            $unhighlighted.css({ width: (options.insertTableMaxSize * gridUnit) + 'px'});\\r\\n            //}\\r\\n\\r\\n            if (3 < dim.r && dim.r < options.insertTableMaxSize.row) {\\r\\n                $unhighlighted.css({ height: ((dim.r + 1) * gridUnit) + 'px'});\\r\\n            }\\r\\n\\r\\n            $dimensionDisplay.html(dim.c + ' x ' + dim.r);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * bind KeyMap on keydown\\r\\n         *\\r\\n         * @param {Object} layoutInfo\\r\\n         * @param {Object} keyMap\\r\\n         */\\r\\n        this.bindKeyMap = function(layoutInfo, keyMap) {\\r\\n            var $editor = layoutInfo.editor();\\r\\n            var $editable = layoutInfo.editable();\\r\\n\\r\\n            $editable.on('keydown', function(event) {\\r\\n                var keys = [];\\r\\n\\r\\n                // modifier\\r\\n                if (event.metaKey) { keys.push('CMD'); }\\r\\n                if (event.ctrlKey && !event.altKey) { keys.push('CTRL'); }\\r\\n                if (event.shiftKey) { keys.push('SHIFT'); }\\r\\n\\r\\n                // keycode\\r\\n                var keyName = key.nameFromCode[event.keyCode];\\r\\n                if (keyName) {\\r\\n                    keys.push(keyName);\\r\\n                }\\r\\n\\r\\n                var pluginEvent;\\r\\n                var keyString = keys.join('+');\\r\\n                var eventName = keyMap[keyString];\\r\\n                if (eventName) {\\r\\n                    // FIXME materialnote doesn't support event pipeline yet.\\r\\n                    //  - Plugin -> Base Code\\r\\n                    pluginEvent = $.materialnote.pluginEvents[keyString];\\r\\n                    if ($.isFunction(pluginEvent)) {\\r\\n                        if (pluginEvent(event, modules.editor, layoutInfo)) {\\r\\n                            return false;\\r\\n                        }\\r\\n                    }\\r\\n\\r\\n                    pluginEvent = $.materialnote.pluginEvents[eventName];\\r\\n\\r\\n                    if ($.isFunction(pluginEvent)) {\\r\\n                        pluginEvent(event, modules.editor, layoutInfo);\\r\\n                    } else if (modules.editor[eventName]) {\\r\\n                        modules.editor[eventName]($editable, $editor.data('options'));\\r\\n                        event.preventDefault();\\r\\n                    } else if (commands[eventName]) {\\r\\n                        commands[eventName].call(this, layoutInfo);\\r\\n                        event.preventDefault();\\r\\n                    }\\r\\n                } else if (key.isEdit(event.keyCode)) {\\r\\n                    modules.editor.afterCommand($editable);\\r\\n                }\\r\\n            });\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * attach eventhandler\\r\\n         *\\r\\n         * @param {Object} layoutInfo - layout Informations\\r\\n         * @param {Object} options - user options include custom event handlers\\r\\n         */\\r\\n        this.attach = function(layoutInfo, options) {\\r\\n            // handlers for editable\\r\\n            if (options.shortcuts) {\\r\\n                this.bindKeyMap(layoutInfo, options.keyMap[agent.isMac ? 'mac' : 'pc']);\\r\\n            }\\r\\n            layoutInfo.editable().on('mousedown', hMousedown);\\r\\n            layoutInfo.editable().on('keyup mouseup', hKeyupAndMouseup);\\r\\n            layoutInfo.editable().on('scroll', hScroll);\\r\\n\\r\\n            // handler for clipboard\\r\\n            modules.clipboard.attach(layoutInfo, options);\\r\\n\\r\\n            // handler for handle and popover\\r\\n            modules.handle.attach(layoutInfo, options);\\r\\n            layoutInfo.popover().on('click', hToolbarAndPopoverClick);\\r\\n            layoutInfo.popover().on('mousedown', hToolbarAndPopoverMousedown);\\r\\n\\r\\n            // handler for drag and drop\\r\\n            modules.dragAndDrop.attach(layoutInfo, options);\\r\\n\\r\\n            // handlers for frame mode (toolbar, statusbar)\\r\\n            if (!options.airMode) {\\r\\n                // handler for toolbar\\r\\n                layoutInfo.toolbar().on('click', hToolbarAndPopoverClick);\\r\\n                layoutInfo.toolbar().on('mousedown', hToolbarAndPopoverMousedown);\\r\\n\\r\\n                // handler for statusbar\\r\\n                modules.statusbar.attach(layoutInfo, options);\\r\\n            }\\r\\n\\r\\n            // handler for table dimension\\r\\n            var $catcherContainer = options.airMode ? layoutInfo.popover() :\\r\\n                layoutInfo.toolbar();\\r\\n            var $catcher = $catcherContainer.find('.note-dimension-picker-mousecatcher');\\r\\n            $catcher.css({\\r\\n                width: options.insertTableMaxSize.col * gridUnit + 'px',\\r\\n                height: options.insertTableMaxSize.row * gridUnit + 'px'\\r\\n            }).on('mousemove', function(event) {\\r\\n                hDimensionPickerMove(event, options);\\r\\n            });\\r\\n\\r\\n            // save options on editor\\r\\n            layoutInfo.editor().data('options', options);\\r\\n\\r\\n            // ret styleWithCSS for backColor / foreColor clearing with 'inherit'.\\r\\n            if (!agent.isMSIE) {\\r\\n                // [workaround] for Firefox\\r\\n                //  - protect FF Error: NS_ERROR_FAILURE: Failure\\r\\n                setTimeout(function() {\\r\\n                    document.execCommand('styleWithCSS', 0, options.styleWithSpan);\\r\\n                }, 0);\\r\\n            }\\r\\n\\r\\n            // History\\r\\n            var history = new History(layoutInfo.editable());\\r\\n            layoutInfo.editable().data('NoteHistory', history);\\r\\n\\r\\n            // All editor status will be saved on editable with jquery's data\\r\\n            // for support multiple editor with singleton object.\\r\\n            layoutInfo.editable().data('callbacks', {\\r\\n                onInit: options.onInit,\\r\\n                onFocus: options.onFocus,\\r\\n                onBlur: options.onBlur,\\r\\n                onKeydown: options.onKeydown,\\r\\n                onKeyup: options.onKeyup,\\r\\n                onMousedown: options.onMousedown,\\r\\n                onEnter: options.onEnter,\\r\\n                onPaste: options.onPaste,\\r\\n                onBeforeCommand: options.onBeforeCommand,\\r\\n                onChange: options.onChange,\\r\\n                onImageUpload: options.onImageUpload,\\r\\n                onImageUploadError: options.onImageUploadError,\\r\\n                onMediaDelete: options.onMediaDelete,\\r\\n                onToolbarClick: options.onToolbarClick\\r\\n            });\\r\\n\\r\\n            // Textarea: auto filling the code before form submit.\\r\\n            if (dom.isTextarea(list.head(layoutInfo.holder()))) {\\r\\n                layoutInfo.holder().closest('form').submit(function() {\\r\\n                    layoutInfo.holder().val(layoutInfo.holder().code());\\r\\n                });\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * attach jquery custom event\\r\\n         *\\r\\n         * @param {Object} layoutInfo - layout Informations\\r\\n         */\\r\\n        this.attachCustomEvent = function(layoutInfo, options) {\\r\\n            var $holder = layoutInfo.holder();\\r\\n            var $editable = layoutInfo.editable();\\r\\n            var callbacks = $editable.data('callbacks');\\r\\n\\r\\n            $editable.focus(bindCustomEvent($holder, callbacks, 'focus'));\\r\\n            $editable.blur(bindCustomEvent($holder, callbacks, 'blur'));\\r\\n\\r\\n            $editable.keydown(function(event) {\\r\\n                if (event.keyCode === key.code.ENTER) {\\r\\n                    bindCustomEvent($holder, callbacks, 'enter').call(this, event);\\r\\n                }\\r\\n                bindCustomEvent($holder, callbacks, 'keydown').call(this, event);\\r\\n            });\\r\\n            $editable.keyup(bindCustomEvent($holder, callbacks, 'keyup'));\\r\\n\\r\\n            $editable.on('mousedown', bindCustomEvent($holder, callbacks, 'mousedown'));\\r\\n            $editable.on('mouseup', bindCustomEvent($holder, callbacks, 'mouseup'));\\r\\n            $editable.on('scroll', bindCustomEvent($holder, callbacks, 'scroll'));\\r\\n\\r\\n            $editable.on('paste', bindCustomEvent($holder, callbacks, 'paste'));\\r\\n\\r\\n            // [workaround] for old IE - IE8 don't have input events\\r\\n            //  - TODO check IE version\\r\\n            var changeEventName = agent.isMSIE ? 'DOMCharacterDataModified DOMSubtreeModified DOMNodeInserted' : 'input';\\r\\n            $editable.on(changeEventName, function() {\\r\\n                bindCustomEvent($holder, callbacks, 'change')($editable.html(), $editable);\\r\\n            });\\r\\n\\r\\n            if (!options.airMode) {\\r\\n                layoutInfo.toolbar().click(bindCustomEvent($holder, callbacks, 'toolbar.click'));\\r\\n                layoutInfo.popover().click(bindCustomEvent($holder, callbacks, 'popover.click'));\\r\\n            }\\r\\n\\r\\n            // Textarea: auto filling the code before form submit.\\r\\n            if (dom.isTextarea(list.head($holder))) {\\r\\n                $holder.closest('form').submit(function(e) {\\r\\n                    bindCustomEvent($holder, callbacks, 'submit').call(this, e, $holder.code());\\r\\n                });\\r\\n            }\\r\\n\\r\\n            // fire init event\\r\\n            bindCustomEvent($holder, callbacks, 'init')(layoutInfo);\\r\\n\\r\\n            // fire plugin init event\\r\\n            for (var i = 0, len = $.materialnote.plugins.length; i < len; i++) {\\r\\n                if ($.isFunction($.materialnote.plugins[i].init)) {\\r\\n                    $.materialnote.plugins[i].init(layoutInfo);\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n\\r\\n        this.detach = function(layoutInfo, options) {\\r\\n            layoutInfo.holder().off();\\r\\n            layoutInfo.editable().off();\\r\\n\\r\\n            layoutInfo.popover().off();\\r\\n            layoutInfo.handle().off();\\r\\n            layoutInfo.dialog().off();\\r\\n\\r\\n            if (!options.airMode) {\\r\\n                layoutInfo.dropzone().off();\\r\\n                layoutInfo.toolbar().off();\\r\\n                layoutInfo.statusbar().off();\\r\\n            }\\r\\n        };\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * @class Renderer\\r\\n     *\\r\\n     * renderer\\r\\n     *\\r\\n     * rendering toolbar and editable\\r\\n     */\\r\\n    var Renderer = function() {\\r\\n\\r\\n        /**\\r\\n         * bootstrap button template\\r\\n         * @private\\r\\n         * @param {String} label button name\\r\\n         * @param {Object} [options] button options\\r\\n         * @param {String} [options.event] data-event\\r\\n         * @param {String} [options.className] button's class name\\r\\n         * @param {String} [options.value] data-value\\r\\n         * @param {String} [options.title] button's title for popup\\r\\n         * @param {String} [options.dropdown] dropdown html\\r\\n         * @param {String} [options.hide] data-hide\\r\\n         */\\r\\n\\r\\n        // >>>>>>> CK altered\\r\\n        var tplButton = function(label, options) {\\r\\n            var event = options.event;\\r\\n            var value = options.value;\\r\\n            var title = options.title;\\r\\n            var style = options.style;\\r\\n            var btnClassName = options.btnClassName;\\r\\n            var className = options.className;\\r\\n            var dropdown = options.dropdown;\\r\\n            var hide = options.hide;\\r\\n\\r\\n            if (!dropdown) {\\r\\n                var button = [\\r\\n                    '<div class=\\\"waves-effect waves-light btn',\\r\\n                    (className ? \\\" \\\" + className : '') + '\\\"',\\r\\n                    (title ? ' title=\\\"' + title + '\\\"' : ''),\\r\\n                    (style ? ' style=\\\"' + style + '\\\"' : ''),\\r\\n                    (event ? ' data-event=\\\"' + event + '\\\"' : ''),\\r\\n                    (value ? ' data-value=\\\\'' + value + '\\\\'' : ''),\\r\\n                    (hide ? ' data-hide=\\\\'' + hide + '\\\\'' : ''),\\r\\n                    ' tabindex=\\\"-1\\\">' + label + '<\\/div>'\\r\\n                ].join('');\\r\\n\\r\\n                return button;\\r\\n            } else {\\r\\n                var list = [\\r\\n                    '<div class=\\\"btn-group',\\r\\n                    (className ? \\\" \\\" + className : '') + '\\\">',\\r\\n                    '<button class=\\\"waves-effect waves-light btn dropdown ' + (btnClassName ? btnClassName : '') + '\\\"',\\r\\n                    (title ? ' title=\\\"' + title + '\\\"' : ''),\\r\\n                    (event ? ' data-event=\\\"' + event + '\\\"' : ''),\\r\\n                    (value ? ' data-value=\\\\'' + value + '\\\\'' : ''),\\r\\n                    (hide ? ' data-hide=\\\\'' + hide + '\\\\'' : ''),\\r\\n                    '><i class=\\\"material-icons left\\\">arrow_drop_down<\\/i>' + label + '<\\/button>',\\r\\n                    dropdown,\\r\\n                    '<\\/div>'\\r\\n                ].join('');\\r\\n\\r\\n                return list;\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * bootstrap icon button template\\r\\n         * @private\\r\\n         * @param {String} iconClassName\\r\\n         * @param {Object} [options]\\r\\n         * @param {String} [options.event]\\r\\n         * @param {String} [options.value]\\r\\n         * @param {String} [options.title]\\r\\n         * @param {String} [options.dropdown]\\r\\n         */\\r\\n        // >>>>>>> CK\\r\\n        var tplIconButton = function(iconClassName, options) {\\r\\n            var label = '<i class=\\\"material-icons\\\">' + iconClassName + '<\\/i>';\\r\\n            return tplButton(label, options);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * bootstrap popover template\\r\\n         * @private\\r\\n         * @param {String} className\\r\\n         * @param {String} content\\r\\n         */\\r\\n        var tplPopover = function(className, content) {\\r\\n            var $popover = $('<div class=\\\"' + className + ' popover bottom in\\\" style=\\\"display: none;\\\">' +\\r\\n       \";\n  builder.string += \"         '<div class=\\\"arrow\\\"><\\/div>' +\\r\\n                '<div class=\\\"popover-content\\\">' +\\r\\n                '<\\/div>' +\\r\\n                '<\\/div>');\\r\\n\\r\\n            $popover.find('.popover-content').append(content);\\r\\n            return $popover;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * bootstrap dialog template\\r\\n         *\\r\\n         * @param {String} className\\r\\n         * @param {String} [title='']\\r\\n         * @param {String} body\\r\\n         * @param {String} [footer='']\\r\\n         */\\r\\n        // >>>>>>> CK dialog\\r\\n        var tplDialog = function(className, title, body, footer) {\\r\\n\\r\\n            var modal = [\\r\\n                '<div class=\\\"' + className + ' modal modal-fixed-footer\\\">',\\r\\n                '<div class=\\\"modal-content\\\">',\\r\\n                (title ? '<h4>' + title + '<\\/h4>' : ''),\\r\\n                '<p>' + body + '<\\/p>',\\r\\n                '<\\/div>',\\r\\n                (footer ? '<div class=\\\"modal-footer\\\">' + footer + '<\\/div>' : ''),\\r\\n                '<\\/div>'\\r\\n            ].join('');\\r\\n\\r\\n            return modal;\\r\\n        };\\r\\n\\r\\n        var tplButtonInfo = {\\r\\n            picture: function(lang, options) {\\r\\n                return tplIconButton(options.iconPrefix + options.icons.image.image, {\\r\\n                    event: 'showImageDialog',\\r\\n                    title: lang.image.image,\\r\\n                    hide: true\\r\\n                });\\r\\n            },\\r\\n            link: function(lang, options) {\\r\\n                return tplIconButton(options.iconPrefix + options.icons.link.link, {\\r\\n                    event: 'showLinkDialog',\\r\\n                    title: lang.link.link,\\r\\n                    hide: true\\r\\n                });\\r\\n            },\\r\\n            table: function(lang, options) {\\r\\n                var dropdown = '<ul class=\\\"note-table dropdown-menu\\\">' +\\r\\n                    '<div class=\\\"row\\\">' +\\r\\n                    '<div class=\\\"col s6 preventDropClose\\\"><input type=\\\"checkbox\\\" id=\\\"' + materialUniqueId + '-bordered\\\" checked=\\\"checked\\\" /><label for=\\\"' + materialUniqueId + '-bordered\\\">' + lang.table.bordered + '<\\/label><\\/div>' +\\r\\n                    '<div class=\\\"col s6 preventDropClose\\\"><input type=\\\"checkbox\\\" id=\\\"' + materialUniqueId + '-striped\\\" checked=\\\"checked\\\" /><label for=\\\"' + materialUniqueId + '-striped\\\">' + lang.table.striped + '<\\/label><\\/div>' +\\r\\n                    '<\\/div>' +\\r\\n                    '<div class=\\\"row\\\">' +\\r\\n                    '<div class=\\\"col s6 preventDropClose\\\"><input type=\\\"checkbox\\\" id=\\\"' + materialUniqueId + '-hoverable\\\" checked=\\\"checked\\\" /><label for=\\\"' + materialUniqueId + '-hoverable\\\">' + lang.table.hoverable + '<\\/label><\\/div>' +\\r\\n                    '<div class=\\\"col s6 preventDropClose\\\"><input type=\\\"checkbox\\\" id=\\\"' + materialUniqueId + '-responsive\\\" checked=\\\"checked\\\" /><label for=\\\"' + materialUniqueId + '-responsive\\\">' + lang.table.responsive + '<\\/label><\\/div>' +\\r\\n                    '<\\/div>' +\\r\\n                    '<div class=\\\"note-dimension-picker\\\">' +\\r\\n                    '<div class=\\\"note-dimension-picker-mousecatcher\\\" data-event=\\\"insertTable\\\" data-value=\\\"1x1\\\"><\\/div>' +\\r\\n                    '<div class=\\\"note-dimension-picker-highlighted\\\"><\\/div>' +\\r\\n                    '<div class=\\\"note-dimension-picker-unhighlighted\\\"><\\/div>' +\\r\\n                    '<\\/div>' +\\r\\n                    '<div class=\\\"note-dimension-display\\\"> 1 x 1 <\\/div>' +\\r\\n                    '<\\/ul>';\\r\\n                return tplIconButton(options.iconPrefix + options.icons.table.table, {\\r\\n                    title: lang.table.table,\\r\\n                    dropdown: dropdown\\r\\n                });\\r\\n            },\\r\\n            style: function(lang, options) {\\r\\n                var items = options.styleTags.reduce(function(memo, v) {\\r\\n                    var label = lang.style[v === 'p' ? 'normal' : v];\\r\\n\\r\\n                    return memo + '<li><div data-event=\\\"formatBlock\\\" data-value=\\\"' + v + '\\\">' +\\r\\n                        ((v === 'p' || v === 'pre') ? label : '<' + v + '>' + label + '<\\/' + v + '>') +\\r\\n                        '<\\/div><\\/li>';\\r\\n                }, '');\\r\\n\\r\\n                return tplIconButton(options.iconPrefix + options.icons.style.style, {\\r\\n                    title: lang.style.style,\\r\\n                    dropdown: '<ul class=\\\"dropdown-menu largeDropdown\\\">' + items + '<\\/ul>'\\r\\n                });\\r\\n            },\\r\\n            fontname: function(lang, options) {\\r\\n                var realFontList = [];\\r\\n                var items = options.fontNames.reduce(function(memo, v) {\\r\\n                    if (!agent.isFontInstalled(v) && options.fontNamesIgnoreCheck.indexOf(v) === -1) {\\r\\n                        return memo;\\r\\n                    }\\r\\n                    realFontList.push(v);\\r\\n                    return memo + '<li><div data-event=\\\"fontName\\\" href=\\\"#\\\" data-value=\\\"' + v + '\\\" style=\\\"font-family:\\\\'' + v + '\\\\'\\\">' +\\r\\n                        '<i class=\\\"material-icons tiny transparent\\\">' + options.iconPrefix + options.icons.misc.check + '<\\/i> ' + v + '<\\/div><\\/li>';\\r\\n                }, '');\\r\\n\\r\\n                var hasDefaultFont = agent.isFontInstalled(options.defaultFontName);\\r\\n                var defaultFontName = (hasDefaultFont) ? options.defaultFontName : realFontList[0];\\r\\n                var label = '<div class=\\\"note-current-fontname\\\">' + defaultFontName + '<\\/div>';\\r\\n\\r\\n                return tplButton(label, {\\r\\n                    title: lang.font.name,\\r\\n                    className: 'note-fontname',\\r\\n                    dropdown: '<ul class=\\\"dropdown-menu note-check\\\">' + items + '<\\/ul>'\\r\\n                });\\r\\n            },\\r\\n            fontsize: function(lang, options) {\\r\\n                var items = options.fontSizes.reduce(function(memo, v) {\\r\\n                    return memo + '<li><div data-event=\\\"fontSize\\\" href=\\\"#\\\" data-value=\\\"' + v + '\\\">' +\\r\\n                        '<i class=\\\"material-icons tiny transparent\\\">' + options.iconPrefix + options.icons.misc.check + '<\\/i> ' + v +\\r\\n                        '<\\/div><\\/li>';\\r\\n                }, '');\\r\\n\\r\\n                var label = '<span class=\\\"note-current-fontsize\\\">15<\\/span>';\\r\\n                return tplButton(label, {\\r\\n                    title: lang.font.size,\\r\\n                    className: 'note-fontsize',\\r\\n                    dropdown: '<ul class=\\\"dropdown-menu note-check\\\">' + items + '<\\/ul>'\\r\\n                });\\r\\n            },\\r\\n            color: function(lang, options) {\\r\\n                // >>>>>>> CK\\r\\n                var colorButtonLabel = '<i class=\\\"material-icons\\\">' + options.icons.color.recent + '<\\/i>',\\r\\n                    colorButton = tplButton(colorButtonLabel, {\\r\\n                        className: 'note-recent-color',\\r\\n                        title: lang.color.recent,\\r\\n                        style: \\\"color: \\\" + options.defaultTextColor + \\\"; background-color: \\\" + options.defaultBackColor + \\\";\\\",\\r\\n                        event: 'color',\\r\\n                        value: '{\\\"backColor\\\": \\\"' + options.defaultBackColor + '\\\"}'\\r\\n                    });\\r\\n\\r\\n                var dropdown = '<ul id=\\\"colors\\\" class=\\\"dropdown-menu\\\">' +\\r\\n                    '<li>' +\\r\\n                    '<div class=\\\"col s12\\\">' +\\r\\n                    '<ul class=\\\"tabs\\\">' +\\r\\n                    '<li class=\\\"tab\\\"><a href=\\\"#' + materialUniqueId + '-foreColor\\\" class=\\\"active\\\">' + lang.color.foreground + '<\\/a><\\/li>' +\\r\\n                    '<li class=\\\"tab\\\"><a href=\\\"#' + materialUniqueId + '-backColor\\\">' + lang.color.background + '<\\/a><\\/li>' +\\r\\n                    '<\\/ul>' +\\r\\n                    '<\\/div>' +\\r\\n                    '<div class=\\\"col s12 colorTable\\\">' +\\r\\n                    '<div id=\\\"' + materialUniqueId + '-foreColor\\\">' +\\r\\n                    '<div class=\\\"note-color-reset waves-effect waves-light btn\\\" data-event=\\\"foreColor\\\" data-value=\\\"' + options.defaultTextColor + '\\\" title=\\\"' + lang.color.reset + '\\\">' +\\r\\n                    lang.color.resetToDefault +\\r\\n                    '<\\/div>' +\\r\\n                    '<div class=\\\"colorName\\\"><\\/div>' +\\r\\n                    '<div class=\\\"note-color-palette\\\" data-target-event=\\\"foreColor\\\"><\\/div>' +\\r\\n                    '<\\/div>' +\\r\\n                    '<div id=\\\"' + materialUniqueId + '-backColor\\\">' +\\r\\n                    '<div class=\\\"note-color-reset waves-effect waves-light btn\\\" data-event=\\\"backColor\\\"' + ' data-value=\\\"' + options.defaultBackColor + '\\\" title=\\\"' + lang.color.transparent + '\\\">' +\\r\\n                    lang.color.setTransparent +\\r\\n                    '<\\/div>' +\\r\\n                    '<div class=\\\"colorName\\\"><\\/div>' +\\r\\n                    '<div class=\\\"note-color-palette\\\" data-target-event=\\\"backColor\\\"><\\/div>' +\\r\\n                    '<\\/div>' +\\r\\n                    '<\\/div>' +\\r\\n                    '<\\/li>' +\\r\\n                    '<\\/ul>';\\r\\n\\r\\n                var moreButton = tplButton('', {\\r\\n                    title: lang.color.more,\\r\\n                    className: 'closeLeft',\\r\\n                    dropdown: dropdown\\r\\n                });\\r\\n\\r\\n                return moreButton + colorButton;\\r\\n            },\\r\\n            bold: function(lang, options) {\\r\\n                return tplIconButton(options.iconPrefix + options.icons.font.bold, {\\r\\n                    event: 'bold',\\r\\n                    title: lang.font.bold\\r\\n                });\\r\\n            },\\r\\n            italic: function(lang, options) {\\r\\n                return tplIconButton(options.iconPrefix + options.icons.font.italic, {\\r\\n                    event: 'italic',\\r\\n                    title: lang.font.italic\\r\\n                });\\r\\n            },\\r\\n            underline: function(lang, options) {\\r\\n                return tplIconButton(options.iconPrefix + options.icons.font.underline, {\\r\\n                    event: 'underline',\\r\\n                    title: lang.font.underline\\r\\n                });\\r\\n            },\\r\\n            strikethrough: function(lang, options) {\\r\\n                return tplIconButton(options.iconPrefix + options.icons.font.strikethrough, {\\r\\n                    event: 'strikethrough',\\r\\n                    title: lang.font.strikethrough\\r\\n                });\\r\\n            },\\r\\n            superscript: function(lang, options) {\\r\\n                return tplIconButton(options.iconPrefix + options.icons.font.superscript, {\\r\\n                    event: 'superscript',\\r\\n                    title: lang.font.superscript\\r\\n                });\\r\\n            },\\r\\n            subscript: function(lang, options) {\\r\\n                return tplIconButton(options.iconPrefix + options.icons.font.subscript, {\\r\\n                    event: 'subscript',\\r\\n                    title: lang.font.subscript\\r\\n                });\\r\\n            },\\r\\n            clear: function(lang, options) {\\r\\n                return tplIconButton(options.iconPrefix + options.icons.font.clear, {\\r\\n                    event: 'removeFormat',\\r\\n                    title: lang.font.clear\\r\\n                });\\r\\n            },\\r\\n            ul: function(lang, options) {\\r\\n                return tplIconButton(options.iconPrefix + options.icons.lists.unordered, {\\r\\n                    event: 'insertUnorderedList',\\r\\n                    title: lang.lists.unordered\\r\\n                });\\r\\n            },\\r\\n            ol: function(lang, options) {\\r\\n                return tplIconButton(options.iconPrefix + options.icons.lists.ordered, {\\r\\n                    event: 'insertOrderedList',\\r\\n                    title: lang.lists.ordered\\r\\n                });\\r\\n            },\\r\\n            //>>>>>>> CK paragraph single buttons\\r\\n            leftButton: function(lang, options) {\\r\\n                return tplIconButton(options.iconPrefix + options.icons.paragraph.left, {\\r\\n                    title: lang.paragraph.left,\\r\\n                    event: 'justifyLeft'\\r\\n                });\\r\\n            },\\r\\n            centerButton: function(lang, options) {\\r\\n                return tplIconButton(options.iconPrefix + options.icons.paragraph.center, {\\r\\n                    title: lang.paragraph.center,\\r\\n                    event: 'justifyCenter'\\r\\n                });\\r\\n            },\\r\\n            rightButton: function(lang, options) {\\r\\n                return tplIconButton(options.iconPrefix + options.icons.paragraph.right, {\\r\\n                    title: lang.paragraph.right,\\r\\n                    event: 'justifyRight'\\r\\n                });\\r\\n            },\\r\\n            justifyButton: function(lang, options) {\\r\\n                return tplIconButton(options.iconPrefix + options.icons.paragraph.justify, {\\r\\n                    title: lang.paragraph.justify,\\r\\n                    event: 'justifyFull'\\r\\n                });\\r\\n            },\\r\\n            outdentButton: function(lang, options) {\\r\\n                return tplIconButton(options.iconPrefix + options.icons.paragraph.outdent, {\\r\\n                    title: lang.paragraph.outdent,\\r\\n                    event: 'outdent'\\r\\n                });\\r\\n            },\\r\\n            indentButton: function(lang, options) {\\r\\n                return tplIconButton(options.iconPrefix + options.icons.paragraph.indent, {\\r\\n                    title: lang.paragraph.indent,\\r\\n                    event: 'indent'\\r\\n                });\\r\\n            },\\r\\n\\r\\n            paragraph: function(lang, options) {\\r\\n                var leftButton = tplIconButton(options.iconPrefix + options.icons.paragraph.left, {\\r\\n                    title: lang.paragraph.left,\\r\\n                    event: 'justifyLeft'\\r\\n                });\\r\\n                var centerButton = tplIconButton(options.iconPrefix + options.icons.paragraph.center, {\\r\\n                    title: lang.paragraph.center,\\r\\n                    event: 'justifyCenter'\\r\\n                });\\r\\n                var rightButton = tplIconButton(options.iconPrefix + options.icons.paragraph.right, {\\r\\n                    title: lang.paragraph.right,\\r\\n                    event: 'justifyRight'\\r\\n                });\\r\\n                var justifyButton = tplIconButton(options.iconPrefix + options.icons.paragraph.justify, {\\r\\n                    title: lang.paragraph.justify,\\r\\n                    event: 'justifyFull'\\r\\n                });\\r\\n\\r\\n                var outdentButton = tplIconButton(options.iconPrefix + options.icons.paragraph.outdent, {\\r\\n                    title: lang.paragraph.outdent,\\r\\n                    event: 'outdent'\\r\\n                });\\r\\n                var indentButton = tplIconButton(options.iconPrefix + options.icons.paragraph.indent, {\\r\\n                    title: lang.paragraph.indent,\\r\\n                    event: 'indent'\\r\\n                });\\r\\n\\r\\n                var dropdown = '<ul class=\\\"dropdown-menu\\\">' +\\r\\n                    '<div class=\\\"note-align btn-group\\\">' +\\r\\n                    leftButton + centerButton + rightButton + justifyButton +\\r\\n                    '<\\/div>' +\\r\\n                    '<div class=\\\"note-list btn-group\\\">' +\\r\\n                    indentButton + outdentButton +\\r\\n                    '<\\/div>' +\\r\\n                    '<\\/ul>';\\r\\n\\r\\n                return tplIconButton(options.iconPrefix + options.icons.paragraph.paragraph, {\\r\\n                    title: lang.paragraph.paragraph,\\r\\n                    dropdown: dropdown\\r\\n                });\\r\\n            },\\r\\n            lineheight: function(lang, options) {\\r\\n                var items = options.lineHeights.reduce(function(memo, v) {\\r\\n                    return memo + '<li><div data-event=\\\"lineHeight\\\" href=\\\"#\\\" data-value=\\\"' + parseFloat(v) + '\\\">' +\\r\\n                        '<i class=\\\"material-icons tiny transparent\\\">' + options.iconPrefix + options.icons.misc.check + '<\\/i> ' + v +\\r\\n                        '<\\/div><\\/li>';\\r\\n                }, '');\\r\\n\\r\\n                return tplIconButton(options.iconPrefix + options.icons.font.height, {\\r\\n                    title: lang.font.height,\\r\\n                    className: 'note-height',\\r\\n                    dropdown: '<ul class=\\\"dropdown-menu note-check\\\">' + items + '<\\/ul>'\\r\\n                });\\r\\n\\r\\n            },\\r\\n            help: function(lang, options) {\\r\\n                return tplIconButton(options.iconPrefix + options.icons.options.help, {\\r\\n                    event: 'showHelpDialog',\\r\\n                    title: lang.options.help,\\r\\n                    hide: true\\r\\n                });\\r\\n            },\\r\\n            fullscreen: function(lang, options) {\\r\\n                return tplIconButton(options.iconPrefix + options.icons.options.fullscreen, {\\r\\n                    event: 'fullscreen',\\r\\n                    title: lang.options.fullscreen\\r\\n                });\\r\\n            },\\r\\n            codeview: function(lang, options) {\\r\\n    \";\n  builder.string += \"            return tplIconButton(options.iconPrefix + options.icons.options.codeview, {\\r\\n                    event: 'codeview',\\r\\n                    title: lang.options.codeview\\r\\n                });\\r\\n            },\\r\\n            undo: function(lang, options) {\\r\\n                return tplIconButton(options.iconPrefix + options.icons.history.undo, {\\r\\n                    event: 'undo',\\r\\n                    title: lang.history.undo\\r\\n                });\\r\\n            },\\r\\n            redo: function(lang, options) {\\r\\n                return tplIconButton(options.iconPrefix + options.icons.history.redo, {\\r\\n                    event: 'redo',\\r\\n                    title: lang.history.redo\\r\\n                });\\r\\n            },\\r\\n            hr: function(lang, options) {\\r\\n                return tplIconButton(options.iconPrefix + options.icons.hr.insert, {\\r\\n                    event: 'insertHorizontalRule',\\r\\n                    title: lang.hr.insert\\r\\n                });\\r\\n            }\\r\\n        };\\r\\n\\r\\n        var tplPopovers = function(lang, options) {\\r\\n            var tplLinkPopover = function() {\\r\\n                var linkButton = tplIconButton(options.iconPrefix + options.icons.link.edit, {\\r\\n                    title: lang.link.edit,\\r\\n                    event: 'showLinkDialog',\\r\\n                    hide: true\\r\\n                });\\r\\n                var unlinkButton = tplIconButton(options.iconPrefix + options.icons.link.unlink, {\\r\\n                    title: lang.link.unlink,\\r\\n                    event: 'unlink'\\r\\n                });\\r\\n                var content = '<a href=\\\"http://www.google.com\\\" target=\\\"_blank\\\">www.google.com<\\/a>&nbsp;&nbsp;' +\\r\\n                    '<div class=\\\"note-insert btn-group\\\">' +\\r\\n                    linkButton + unlinkButton +\\r\\n                    '<\\/div>';\\r\\n                return tplPopover('note-link-popover', content);\\r\\n            };\\r\\n\\r\\n            var tplImagePopover = function() {\\r\\n                var fullButton = tplButton('<span class=\\\"note-fontsize-10\\\">100%<\\/span>', {\\r\\n                    title: lang.image.resizeFull,\\r\\n                    event: 'resize',\\r\\n                    value: '1'\\r\\n                });\\r\\n                var halfButton = tplButton('<span class=\\\"note-fontsize-10\\\">50%<\\/span>', {\\r\\n                    title: lang.image.resizeHalf,\\r\\n                    event: 'resize',\\r\\n                    value: '0.5'\\r\\n                });\\r\\n                var quarterButton = tplButton('<span class=\\\"note-fontsize-10\\\">25%<\\/span>', {\\r\\n                    title: lang.image.resizeQuarter,\\r\\n                    event: 'resize',\\r\\n                    value: '0.25'\\r\\n                });\\r\\n\\r\\n                var leftButton = tplIconButton(options.iconPrefix + options.icons.image.floatLeft, {\\r\\n                    title: lang.image.floatLeft,\\r\\n                    event: 'floatMe',\\r\\n                    value: 'left'\\r\\n                });\\r\\n                var rightButton = tplIconButton(options.iconPrefix + options.icons.image.floatRight, {\\r\\n                    title: lang.image.floatRight,\\r\\n                    event: 'floatMe',\\r\\n                    value: 'right'\\r\\n                });\\r\\n                var justifyButton = tplIconButton(options.iconPrefix + options.icons.image.floatNone, {\\r\\n                    title: lang.image.floatNone,\\r\\n                    event: 'floatMe',\\r\\n                    value: 'none'\\r\\n                });\\r\\n\\r\\n                var roundedButton = tplIconButton(options.iconPrefix + options.icons.image.shapeRounded, {\\r\\n                    title: lang.image.shapeRounded,\\r\\n                    event: 'imageClass',\\r\\n                    value: 'img-rounded'\\r\\n                });\\r\\n                var circleButton = tplIconButton(options.iconPrefix + options.icons.image.shapeCircle, {\\r\\n                    title: lang.image.shapeCircle,\\r\\n                    event: 'imageClass',\\r\\n                    value: 'img-circle'\\r\\n                });\\r\\n                var thumbnailButton = tplIconButton(options.iconPrefix + options.icons.image.shapeThumbnail, {\\r\\n                    title: lang.image.shapeThumbnail,\\r\\n                    event: 'imageClass',\\r\\n                    value: 'img-thumbnail'\\r\\n                });\\r\\n                var borderedButton = tplIconButton(options.iconPrefix + options.icons.image.bordered, {\\r\\n                    title: lang.image.bordered,\\r\\n                    event: 'imageClass',\\r\\n                    value: 'img-bordered'\\r\\n                });\\r\\n                var noneButton = tplIconButton(options.iconPrefix + options.icons.image.shapeNone, {\\r\\n                    title: lang.image.shapeNone,\\r\\n                    event: 'imageShape',\\r\\n                    value: ''\\r\\n                });\\r\\n\\r\\n                var removeButton = tplIconButton(options.iconPrefix + options.icons.image.remove, {\\r\\n                    title: lang.image.remove,\\r\\n                    event: 'removeMedia',\\r\\n                    value: 'none'\\r\\n                });\\r\\n\\r\\n                var content = //'<div class=\\\"btn-group\\\">' + fullButton + halfButton + quarterButton + '<\\/div>' +\\r\\n                    '<div class=\\\"btn-group\\\">' + leftButton + rightButton + justifyButton + '<\\/div>' +\\r\\n                    '<div class=\\\"btn-group\\\">' + roundedButton + circleButton + thumbnailButton + borderedButton + noneButton + '<\\/div>' +\\r\\n                    '<div class=\\\"btn-group\\\">' + removeButton + '<\\/div>';\\r\\n                return tplPopover('note-image-popover', content);\\r\\n            };\\r\\n\\r\\n            var tplAirPopover = function() {\\r\\n                var $content = $('<div />');\\r\\n                for (var idx = 0, len = options.airPopover.length; idx < len; idx ++) {\\r\\n                    var group = options.airPopover[idx];\\r\\n\\r\\n                    var $group = $('<div class=\\\"note-' + group[0] + ' btn-group\\\">');\\r\\n                    for (var i = 0, lenGroup = group[1].length; i < lenGroup; i++) {\\r\\n                        var $button = $(tplButtonInfo[group[1][i]](lang, options));\\r\\n\\r\\n                        $button.attr('data-name', group[1][i]);\\r\\n\\r\\n                        $group.append($button);\\r\\n                    }\\r\\n                    $content.append($group);\\r\\n                }\\r\\n\\r\\n                return tplPopover('note-air-popover', $content.children());\\r\\n            };\\r\\n\\r\\n            var $notePopover = $('<div class=\\\"note-popover\\\" />');\\r\\n\\r\\n            $notePopover.append(tplLinkPopover());\\r\\n            $notePopover.append(tplImagePopover());\\r\\n\\r\\n            if (options.airMode) {\\r\\n                $notePopover.append(tplAirPopover());\\r\\n            }\\r\\n\\r\\n            return $notePopover;\\r\\n        };\\r\\n\\r\\n        var tplHandles = function() {\\r\\n            return '<div class=\\\"note-handle\\\">' +\\r\\n                '<div class=\\\"note-control-selection\\\">' +\\r\\n                '<div class=\\\"note-control-selection-bg\\\"><\\/div>' +\\r\\n                '<div class=\\\"note-control-sizing note-control-se\\\"><\\/div>' +\\r\\n                '<div class=\\\"note-control-selection-info\\\"><\\/div>' +\\r\\n                '<\\/div>' +\\r\\n                '<\\/div>';\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * shortcut table template\\r\\n         * @param {String} title\\r\\n         * @param {String} body\\r\\n         */\\r\\n        var tplShortcut = function(title, keys) {\\r\\n            var keyClass = 'note-shortcut-col col-xs-6 note-shortcut-';\\r\\n            var body = [];\\r\\n\\r\\n            for (var i in keys) {\\r\\n                if (keys.hasOwnProperty(i)) {\\r\\n                    body.push(\\r\\n                        '<tr><td>' + keys[i].kbd + '<\\/td><td>' + keys[i].text + '<\\/td><\\/tr>'\\r\\n                    );\\r\\n                }\\r\\n            }\\r\\n\\r\\n            return '<thead><tr><th>' + title + '<\\/th><th>' + '(keys)' + '<\\/th><\\/tr><\\/thead>' +\\r\\n                '<tbody>' + body.join('') + '<\\/tbody>';\\r\\n        };\\r\\n\\r\\n        var tplShortcutText = function(lang) {\\r\\n            var keys = [\\r\\n                { kbd: '\\u2318 + B', text: lang.font.bold },\\r\\n                { kbd: '\\u2318 + I', text: lang.font.italic },\\r\\n                { kbd: '\\u2318 + U', text: lang.font.underline },\\r\\n                { kbd: '\\u2318 + \\\\\\\\', text: lang.font.clear }\\r\\n            ];\\r\\n\\r\\n            return tplShortcut(lang.shortcut.textFormatting, keys);\\r\\n        };\\r\\n\\r\\n        var tplShortcutAction = function(lang) {\\r\\n            var keys = [\\r\\n                { kbd: '\\u2318 + Z', text: lang.history.undo },\\r\\n                { kbd: '\\u2318 + \\u21E7 + Z', text: lang.history.redo },\\r\\n                { kbd: '\\u2318 + ]', text: lang.paragraph.indent },\\r\\n                { kbd: '\\u2318 + [', text: lang.paragraph.outdent },\\r\\n                { kbd: '\\u2318 + ENTER', text: lang.hr.insert }\\r\\n            ];\\r\\n\\r\\n            return tplShortcut(lang.shortcut.action, keys);\\r\\n        };\\r\\n\\r\\n        var tplShortcutPara = function(lang) {\\r\\n            var keys = [\\r\\n                { kbd: '\\u2318 + \\u21E7 + L', text: lang.paragraph.left },\\r\\n                { kbd: '\\u2318 + \\u21E7 + E', text: lang.paragraph.center },\\r\\n                { kbd: '\\u2318 + \\u21E7 + R', text: lang.paragraph.right },\\r\\n                { kbd: '\\u2318 + \\u21E7 + J', text: lang.paragraph.justify },\\r\\n                { kbd: '\\u2318 + \\u21E7 + NUM7', text: lang.lists.ordered },\\r\\n                { kbd: '\\u2318 + \\u21E7 + NUM8', text: lang.lists.unordered }\\r\\n            ];\\r\\n\\r\\n            return tplShortcut(lang.shortcut.paragraphFormatting, keys);\\r\\n        };\\r\\n\\r\\n        var tplShortcutStyle = function(lang) {\\r\\n            var keys = [\\r\\n                { kbd: '\\u2318 + NUM0', text: lang.style.normal },\\r\\n                { kbd: '\\u2318 + NUM1', text: lang.style.h1 },\\r\\n                { kbd: '\\u2318 + NUM2', text: lang.style.h2 },\\r\\n                { kbd: '\\u2318 + NUM3', text: lang.style.h3 },\\r\\n                { kbd: '\\u2318 + NUM4', text: lang.style.h4 },\\r\\n                { kbd: '\\u2318 + NUM5', text: lang.style.h5 },\\r\\n                { kbd: '\\u2318 + NUM6', text: lang.style.h6 }\\r\\n            ];\\r\\n\\r\\n            return tplShortcut(lang.shortcut.documentStyle, keys);\\r\\n        };\\r\\n\\r\\n        var tplExtraShortcuts = function(lang, options) {\\r\\n            var extraKeys = options.extraKeys;\\r\\n            var keys = [];\\r\\n\\r\\n            for (var key in extraKeys) {\\r\\n                if (extraKeys.hasOwnProperty(key)) {\\r\\n                    keys.push({ kbd: key, text: extraKeys[key] });\\r\\n                }\\r\\n            }\\r\\n\\r\\n            return tplShortcut(lang.shortcut.extraKeys, keys);\\r\\n        };\\r\\n\\r\\n        var tplShortcutTable = function(lang, options) {\\r\\n            var template = [\\r\\n                '<table class=\\\"striped hoverable\\\">' + tplShortcutAction(lang, options) + '<\\/table>',\\r\\n                '<table class=\\\"striped hoverable\\\">' + tplShortcutStyle(lang, options) + '<\\/table>',\\r\\n                '<table class=\\\"striped hoverable\\\">' + tplShortcutText(lang, options) + '<\\/table>',\\r\\n                '<table class=\\\"striped hoverable\\\">' + tplShortcutPara(lang, options) + '<\\/table>'\\r\\n            ].join('<br>');\\r\\n\\r\\n            if (options.extraKeys) {\\r\\n                //template.push('<table class=\\\"striped hoverable\\\">' + tplExtraShortcuts(lang, options) + '<\\/table>');\\r\\n            }\\r\\n            return template;\\r\\n        };\\r\\n\\r\\n        var replaceMacKeys = function(sHtml) {\\r\\n            return sHtml.replace(/\\u2318/g, 'Ctrl').replace(/\\u21E7/g, 'Shift');\\r\\n        };\\r\\n\\r\\n        var tplDialogInfo = {\\r\\n            image: function(lang, options) {\\r\\n                var imageLimitation = '';\\r\\n\\r\\n                if (options.maximumImageFileSize) {\\r\\n                    var unit = Math.floor(Math.log(options.maximumImageFileSize) / Math.log(1024));\\r\\n                    var readableSize = (options.maximumImageFileSize / Math.pow(1024, unit)).toFixed(2) * 1 + ' ' + ' KMGTP'[unit] + 'B';\\r\\n\\r\\n                    imageLimitation = '<small>' + lang.image.maximumFileSize + ' : ' + readableSize + '<\\/small>';\\r\\n                }\\r\\n\\r\\n                var body = '<div class=\\\"row\\\">' +\\r\\n                    '<div class=\\\"col s12\\\">' +\\r\\n                    '<div class=\\\"file-field input-field\\\">' +\\r\\n                    '<div class=\\\"btn\\\">' +\\r\\n                    '<span>' + lang.image.image + '<\\/span>' +\\r\\n                    '<input class=\\\"note-image-input\\\" name=\\\"files\\\" type=\\\"file\\\" />' +\\r\\n                    '<\\/div>' +\\r\\n                    '<div class=\\\"file-path-wrapper\\\">' +\\r\\n                    '<input class=\\\"file-path\\\" type=\\\"text\\\" />' +\\r\\n                    '<\\/div>' +\\r\\n                    '<\\/div>' +\\r\\n                    '<\\/div>' +\\r\\n                    '<\\/div>' +\\r\\n                    '<div class=\\\"row\\\">' +\\r\\n                    '<div class=\\\"input-field col s12\\\">' +\\r\\n                    '<input class=\\\"note-image-url\\\" type=\\\"text\\\" />' +\\r\\n                    '<label>' + lang.image.url + '<\\/label>' +\\r\\n                    '<\\/div>' +\\r\\n                    '<\\/div>';\\r\\n\\r\\n                var footer = '<button href=\\\"#\\\" class=\\\"waves-effect waves-light btn note-image-btn disabled\\\" disabled>' + lang.image.insert + '<\\/button>' +\\r\\n                    '<button class=\\\"waves-effect waves-light btn btnClose\\\">' + lang.shortcut.close + '<\\/button>';\\r\\n                return tplDialog('note-image-dialog', lang.image.insert, body, footer);\\r\\n            },\\r\\n\\r\\n            link: function(lang, options) {\\r\\n                var body = '<div class=\\\"row\\\">' +\\r\\n                    '<div class=\\\"input-field col s12\\\">' +\\r\\n                    '<input class=\\\"note-link-text\\\" type=\\\"text\\\" />' +\\r\\n                    '<label>' + lang.link.textToDisplay + '<\\/label>' +\\r\\n                    '<\\/div>' +\\r\\n                    '<\\/div>' +\\r\\n                    '<div class=\\\"row\\\">' +\\r\\n                    '<div class=\\\"input-field col s12\\\">' +\\r\\n                    '<input class=\\\"note-link-url\\\" type=\\\"text\\\" value=\\\"http://\\\" />' +\\r\\n                    '<label class=\\\"active\\\">' + lang.link.url + '<\\/label>' +\\r\\n                    '<\\/div>' +\\r\\n                    '<\\/div>' +\\r\\n                    (!options.disableLinkTarget ?\\r\\n                        '<div class=\\\"row\\\">' +\\r\\n                        '<div class=\\\"col s12\\\">' +\\r\\n                        '<input type=\\\"checkbox\\\" id=\\\"' + materialUniqueId + '-noteInsertLinkNewWindow\\\" checked=\\\"checked\\\" />' +\\r\\n                        '<label for=\\\"' + materialUniqueId + '-noteInsertLinkNewWindow\\\">' + lang.link.openInNewWindow + '<\\/label>' +\\r\\n                        '<\\/div>' +\\r\\n                        '<\\/div>'\\r\\n                            : ''\\r\\n                    );\\r\\n\\r\\n                var footer = '<button href=\\\"#\\\" class=\\\"waves-effect waves-light btn note-link-btn disabled\\\" disabled>' + lang.link.insert + '<\\/button>' +\\r\\n                    '<button class=\\\"waves-effect waves-light btn btnClose\\\">' + lang.shortcut.close + '<\\/button>';\\r\\n                return tplDialog('note-link-dialog', lang.link.insert, body, footer);\\r\\n            },\\r\\n\\r\\n            help: function(lang, options) {\\r\\n                var body = (agent.isMac ? tplShortcutTable(lang, options) : replaceMacKeys(tplShortcutTable(lang, options)));\\r\\n                var footer = '<button href=\\\"#\\\" class=\\\"waves-effect waves-light btn modal-close\\\">' + lang.shortcut.close + '<\\/button>';\\r\\n\\r\\n                return tplDialog('note-help-dialog', lang.shortcut.shortcuts, body, footer);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        var tplDialogs = function(lang, options) {\\r\\n            var dialogs = '';\\r\\n\\r\\n            $.each(tplDialogInfo, function(idx, tplDialog) {\\r\\n                dialogs += tplDialog(lang, options);\\r\\n            });\\r\\n\\r\\n            return '<div class=\\\"note-dialog\\\">' + dialogs + '<\\/div>';\\r\\n        };\\r\\n\\r\\n        var tplStatusbar = function() {\\r\\n            return '<div class=\\\"note-resizebar\\\">' +\\r\\n                '<div class=\\\"note-icon-bar\\\"><\\/div>' +\\r\\n                '<div class=\\\"note-icon-bar\\\"><\\/div>' +\\r\\n                '<div class=\\\"note-icon-bar\\\"><\\/div>' +\\r\\n                '<\\/div>';\\r\\n        };\\r\\n\\r\\n        var representShortcut = function(str) {\\r\\n            if (agent.isMac) {\\r\\n                str = str.replace('CMD', '\\u2318').replace('SHIFT', '\\u21E7');\\r\\n            }\\r\\n\\r\\n            return str.replace('BACKSLASH', '\\\\\\\\')\\r\\n                .replace('SLASH', '/')\\r\\n                .replace('LEFTBRACKET', '[')\\r\\n                .replace('RIGHTBRACKET', ']');\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * createTooltip\\r\\n         * @param {jQuery} $container\\r\\n         * @param {Object} keyMap\\r\\n         * @param {String} [sPlacement]\\r\\n         */\\r\\n        // >>>>>>> CK\\r\\n        var createTooltip = function($container, keyMap, sPlacement) {\\r\\n            $(document).ready(function() {\\r\\n                var invertedKeyMap = func.invertObject(keyMap);\\r\\n                var $buttons = $container.fi\";\n  builder.string += \"nd('.btn');\\r\\n\\r\\n                $buttons.each(function(i, elBtn) {\\r\\n                    var $btn = $(elBtn);\\r\\n                    var sShortcut = invertedKeyMap[$btn.data('event')];\\r\\n                    var text = $btn.attr('title');\\r\\n\\r\\n                    if (sShortcut) {\\r\\n                        $btn.attr('data-tooltip', function(i, v) {\\r\\n                            text = text + ' (' + representShortcut(sShortcut) + ')';\\r\\n\\r\\n                            $(this).removeAttr('title');\\r\\n                            return text;\\r\\n                        });\\r\\n                    }\\r\\n                    $btn.attr('data-position', 'bottom');\\r\\n                    $btn.attr('data-tooltip', text);\\r\\n                    $btn.removeAttr('title');\\r\\n                }).ckTooltip({\\r\\n                    container: $container,\\r\\n                    position: 'top',\\r\\n                    delay: 30\\r\\n                });\\r\\n            });\\r\\n        };\\r\\n\\r\\n        // >>>>>>> CK\\r\\n        // createPalette\\r\\n        var createPalette = function($container, options) {\\r\\n            var colorInfo = options.colors;\\r\\n            var colorTitles = options.colorTitles;\\r\\n\\r\\n            $container.find('.note-color-palette').each(function() {\\r\\n                var $palette = $(this), eventName = $palette.attr('data-target-event');\\r\\n                var paletteContents = [];\\r\\n\\r\\n                for (var row = 0, lenRow = colorInfo.length; row < lenRow; row++) {\\r\\n                    var colors = colorInfo[row];\\r\\n                    var titles = colorTitles[row];\\r\\n                    var buttons = [];\\r\\n\\r\\n                    for (var col = 0, lenCol = colors.length; col < lenCol; col++) {\\r\\n                        var color = colors[col];\\r\\n                        var title = titles[col];\\r\\n\\r\\n                        buttons.push(['<button type=\\\"button\\\" class=\\\"note-color-btn\\\" style=\\\"background-color:', color,\\r\\n                            ';\\\" data-event=\\\"', eventName,\\r\\n                            '\\\" data-value=\\\"', color,\\r\\n                            '\\\" data-description=\\\"', title,\\r\\n                            '\\\" data-toggle=\\\"button\\\" tabindex=\\\"-1\\\"><\\/button>'].join(''));\\r\\n                    }\\r\\n                    paletteContents.push('<div class=\\\"note-color-row\\\">' + buttons.join('') + '<\\/div>');\\r\\n                }\\r\\n                $palette.html(paletteContents.join(''));\\r\\n\\r\\n                $palette.find('button').mouseenter(function() {\\r\\n                    $palette.siblings('.colorName').html($(this).data('description'));\\r\\n                });\\r\\n                $palette.mouseleave(function() {\\r\\n                    $(this).siblings('.colorName').html('');\\r\\n                });\\r\\n            });\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * create materialnote layout (air mode)\\r\\n         *\\r\\n         * @param {jQuery} $holder\\r\\n         * @param {Object} options\\r\\n         */\\r\\n        this.createLayoutByAirMode = function($holder, options) {\\r\\n            var langInfo = options.langInfo;\\r\\n            var keyMap = options.keyMap[agent.isMac ? 'mac' : 'pc'];\\r\\n            var id = func.uniqueId();\\r\\n\\r\\n            $holder.addClass('note-air-editor note-editable');\\r\\n            $holder.attr({\\r\\n                'id': 'note-editor-' + id,\\r\\n                'contentEditable': true\\r\\n            });\\r\\n\\r\\n            var body = document.body;\\r\\n\\r\\n            // create Popover\\r\\n            var $popover = $(tplPopovers(langInfo, options));\\r\\n            $popover.addClass('note-air-layout');\\r\\n            $popover.attr('id', 'note-popover-' + id);\\r\\n            $popover.appendTo(body);\\r\\n            createTooltip($popover, keyMap);\\r\\n            createPalette($popover, options);\\r\\n\\r\\n            // create Handle\\r\\n            var $handle = $(tplHandles());\\r\\n            $handle.addClass('note-air-layout');\\r\\n            $handle.attr('id', 'note-handle-' + id);\\r\\n            $handle.appendTo(body);\\r\\n\\r\\n            // create Dialog\\r\\n            var $dialog = $(tplDialogs(langInfo, options));\\r\\n            $dialog.addClass('note-air-layout');\\r\\n            $dialog.attr('id', 'note-dialog-' + id);\\r\\n            $dialog.find('button.close, a.modal-close').click(function() {\\r\\n                $(this).closest('.modal').closeModal();\\r\\n            });\\r\\n            $dialog.appendTo(body);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * create materialnote layout (normal mode)\\r\\n         *\\r\\n         * @param {jQuery} $holder\\r\\n         * @param {Object} options\\r\\n         */\\r\\n        this.createLayoutByFrame = function($holder, options) {\\r\\n            var langInfo = options.langInfo;\\r\\n\\r\\n            //01. create Editor\\r\\n            var $editor = $('<div class=\\\"note-editor\\\"><\\/div>');\\r\\n            if (options.width) {\\r\\n                $editor.width(options.width);\\r\\n            }\\r\\n\\r\\n            //02. statusbar (resizebar)\\r\\n            if (options.height > 0) {\\r\\n                $('<div class=\\\"note-statusbar\\\">' + (options.disableResizeEditor ? '' : tplStatusbar()) + '<\\/div>').prependTo($editor);\\r\\n            }\\r\\n\\r\\n            //03. create Editable\\r\\n            var isContentEditable = !$holder.is(':disabled');\\r\\n            var $editable = $('<div class=\\\"note-editable\\\" contentEditable=\\\"' + isContentEditable + '\\\"><\\/div>')\\r\\n                .prependTo($editor);\\r\\n            if (options.height) {\\r\\n                $editable.height(options.height);\\r\\n            }\\r\\n            if (options.direction) {\\r\\n                $editable.attr('dir', options.direction);\\r\\n            }\\r\\n            var placeholder = $holder.attr('placeholder') || options.placeholder;\\r\\n            if (placeholder) {\\r\\n                $editable.attr('data-placeholder', placeholder);\\r\\n            }\\r\\n\\r\\n            $editable.html(dom.html($holder));\\r\\n\\r\\n            //031. create codable\\r\\n            $('<textarea class=\\\"note-codable\\\"><\\/textarea>').prependTo($editor);\\r\\n\\r\\n            //04. create Toolbar\\r\\n            var $toolbar = $('<div class=\\\"note-toolbar btn-toolbar\\\" />');\\r\\n            for (var idx = 0, len = options.toolbar.length; idx < len; idx ++) {\\r\\n                var groupName = options.toolbar[idx][0];\\r\\n                var groupButtons = options.toolbar[idx][1];\\r\\n\\r\\n                var $group = $('<div class=\\\"note-' + groupName + ' btn-group\\\" />');\\r\\n                for (var i = 0, btnLength = groupButtons.length; i < btnLength; i++) {\\r\\n                    var buttonInfo = tplButtonInfo[groupButtons[i]];\\r\\n                    // continue creating toolbar even if a button doesn't exist\\r\\n                    if (!$.isFunction(buttonInfo)) { continue; }\\r\\n\\r\\n                    var $button = $(buttonInfo(langInfo, options));\\r\\n                    $button.attr('data-name', groupButtons[i]);  // set button's alias, becuase to get button element from $toolbar\\r\\n                    $group.append($button);\\r\\n                }\\r\\n                $toolbar.append($group);\\r\\n            }\\r\\n\\r\\n            $toolbar.prependTo($editor);\\r\\n            var keyMap = options.keyMap[agent.isMac ? 'mac' : 'pc'];\\r\\n            createPalette($toolbar, options);\\r\\n            createTooltip($toolbar, keyMap, 'bottom');\\r\\n\\r\\n\\r\\n            // >>>>>>> CK - following toolbar\\r\\n            // following toolbar\\r\\n            function followingBar() {\\r\\n                $(window).scroll(function() {\\r\\n                    var isFullscreen = $editor.hasClass('fullscreen');\\r\\n\\r\\n                    if (isFullscreen) {\\r\\n                        return false;\\r\\n                    }\\r\\n\\r\\n                    var toolbar = $editor.children('.note-toolbar');\\r\\n                    var toolbarHeight = toolbar.outerHeight();\\r\\n                    var editable = $editor.children('.note-editable');\\r\\n                    var editableHeight = editable.outerHeight();\\r\\n                    var editorWidth = $editor.width;\\r\\n                    var toolbarOffset, editorOffsetTop, editorOffsetBottom;\\r\\n                    var activateOffset, deactivateOffsetTop, deactivateOffsetBottom;\\r\\n                    var currentOffset;\\r\\n                    var relativeOffset;\\r\\n                    var otherBarHeight;\\r\\n\\r\\n                    // check if the web app is currently using another static bar\\r\\n                    otherBarHeight = $(\\\".\\\" + options.otherStaticBarClass).outerHeight();\\r\\n                    if (!otherBarHeight) otherBarHeight = 0;\\r\\n\\r\\n                    currentOffset = $(document).scrollTop();\\r\\n                    toolbarOffset = toolbar.offset().top;\\r\\n                    editorOffsetTop = $editor.offset().top;\\r\\n                    editorOffsetBottom = editorOffsetTop + editableHeight;\\r\\n                    activateOffset = toolbarOffset - otherBarHeight;\\r\\n                    deactivateOffsetBottom = editorOffsetBottom - otherBarHeight;\\r\\n                    deactivateOffsetTop = editorOffsetTop - otherBarHeight;\\r\\n\\r\\n                    if ((currentOffset > activateOffset) && (currentOffset < deactivateOffsetBottom)) {\\r\\n                        relativeOffset = currentOffset - $editor.offset().top + otherBarHeight;\\r\\n                        toolbar.css({'top': relativeOffset + 'px', 'z-index': 2000});\\r\\n                    } else {\\r\\n                        if ((currentOffset < toolbarOffset) && (currentOffset < deactivateOffsetBottom)) {\\r\\n                            toolbar.css({'top': 0, 'z-index': 1052});\\r\\n\\r\\n                            if (currentOffset > deactivateOffsetTop) {\\r\\n                                relativeOffset = currentOffset - $editor.offset().top + otherBarHeight;\\r\\n                                toolbar.css({'top': relativeOffset + 'px', 'z-index': 2000});\\r\\n                            }\\r\\n                        }\\r\\n                    }\\r\\n                });\\r\\n            }\\r\\n            if (options.followingToolbar) {\\r\\n                followingBar();\\r\\n            }\\r\\n\\r\\n            //05. create Popover\\r\\n            var $popover = $(tplPopovers(langInfo, options)).prependTo($editor);\\r\\n            createPalette($popover, options);\\r\\n            createTooltip($popover, keyMap);\\r\\n\\r\\n            //06. handle(control selection, ...)\\r\\n            $(tplHandles()).prependTo($editor);\\r\\n\\r\\n            //07. create Dialog\\r\\n            var $dialog = $(tplDialogs(langInfo, options)).prependTo($editor);\\r\\n            $dialog.find('button.close, a.modal-close').click(function() {\\r\\n                $(this).closest('.modal').closeModal();\\r\\n            });\\r\\n\\r\\n            //08. create Dropzone\\r\\n            $('<div class=\\\"note-dropzone\\\"><div class=\\\"note-dropzone-message\\\"><\\/div><\\/div>').prependTo($editor);\\r\\n\\r\\n            //09. Editor/Holder switch\\r\\n            $editor.insertAfter($holder);\\r\\n            $holder.hide();\\r\\n        };\\r\\n\\r\\n        this.hasNoteEditor = function($holder) {\\r\\n            return this.noteEditorFromHolder($holder).length > 0;\\r\\n        };\\r\\n\\r\\n        this.noteEditorFromHolder = function($holder) {\\r\\n            if ($holder.hasClass('note-air-editor')) {\\r\\n                return $holder;\\r\\n            } else if ($holder.next().hasClass('note-editor')) {\\r\\n                return $holder.next();\\r\\n            } else {\\r\\n                return $();\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * create materialnote layout\\r\\n         *\\r\\n         * @param {jQuery} $holder\\r\\n         * @param {Object} options\\r\\n         */\\r\\n        this.createLayout = function($holder, options) {\\r\\n            if (options.airMode) {\\r\\n                this.createLayoutByAirMode($holder, options);\\r\\n            } else {\\r\\n                this.createLayoutByFrame($holder, options);\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * returns layoutInfo from holder\\r\\n         *\\r\\n         * @param {jQuery} $holder - placeholder\\r\\n         * @return {Object}\\r\\n         */\\r\\n        this.layoutInfoFromHolder = function($holder) {\\r\\n            var $editor = this.noteEditorFromHolder($holder);\\r\\n            if (!$editor.length) {\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            // connect $holder to $editor\\r\\n            $editor.data('holder', $holder);\\r\\n\\r\\n            return dom.buildLayoutInfo($editor);\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * removeLayout\\r\\n         *\\r\\n         * @param {jQuery} $holder - placeholder\\r\\n         * @param {Object} layoutInfo\\r\\n         * @param {Object} options\\r\\n         *\\r\\n         */\\r\\n        this.removeLayout = function($holder, layoutInfo, options) {\\r\\n            if (options.airMode) {\\r\\n                $holder.removeClass('note-air-editor note-editable')\\r\\n                    .removeAttr('id contentEditable');\\r\\n\\r\\n                layoutInfo.popover().remove();\\r\\n                layoutInfo.handle().remove();\\r\\n                layoutInfo.dialog().remove();\\r\\n            } else {\\r\\n                $holder.html(layoutInfo.editable().html());\\r\\n\\r\\n                layoutInfo.editor().remove();\\r\\n                $holder.show();\\r\\n            }\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         *\\r\\n         * @return {Object}\\r\\n         * @return {function(label, options=):string} return.button {@link #tplButton function to make text button}\\r\\n         * @return {function(iconClass, options=):string} return.iconButton {@link #tplIconButton function to make icon button}\\r\\n         * @return {function(className, title=, body=, footer=):string} return.dialog {@link #tplDialog function to make dialog}\\r\\n         */\\r\\n        this.getTemplate = function() {\\r\\n            return {\\r\\n                button: tplButton,\\r\\n                iconButton: tplIconButton,\\r\\n                dialog: tplDialog\\r\\n            };\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         * add button information\\r\\n         *\\r\\n         * @param {String} name button name\\r\\n         * @param {Function} buttonInfo function to make button, reference to {@link #tplButton},{@link #tplIconButton}\\r\\n         */\\r\\n        this.addButtonInfo = function(name, buttonInfo) {\\r\\n            tplButtonInfo[name] = buttonInfo;\\r\\n        };\\r\\n\\r\\n        /**\\r\\n         *\\r\\n         * @param {String} name\\r\\n         * @param {Function} dialogInfo function to make dialog, reference to {@link #tplDialog}\\r\\n         */\\r\\n        this.addDialogInfo = function(name, dialogInfo) {\\r\\n            tplDialogInfo[name] = dialogInfo;\\r\\n        };\\r\\n    };\\r\\n\\r\\n\\r\\n    // jQuery namespace for materialnote\\r\\n    /**\\r\\n     * @class $.materialnote\\r\\n     *\\r\\n     * materialnote attribute\\r\\n     *\\r\\n     * @mixin defaults\\r\\n     * @singleton\\r\\n     *\\r\\n     */\\r\\n    $.materialnote = $.materialnote || {};\\r\\n\\r\\n    // extends default settings\\r\\n    //  - $.materialnote.version\\r\\n    //  - $.materialnote.options\\r\\n    //  - $.materialnote.lang\\r\\n    $.extend($.materialnote, defaults);\\r\\n\\r\\n    var renderer = new Renderer();\\r\\n    var eventHandler = new EventHandler();\\r\\n\\r\\n    $.extend($.materialnote, {\\r\\n        /** @property {Renderer} */\\r\\n        renderer: renderer,\\r\\n        /** @property {EventHandler} */\\r\\n        eventHandler: eventHandler,\\r\\n        /**\\r\\n         * @property {Object} core\\r\\n         * @property {core.agent} core.agent\\r\\n         * @property {core.dom} core.dom\\r\\n         * @property {core.range} core.range\\r\\n         */\\r\\n        core: {\\r\\n            agent: agent,\\r\\n            list : list,\\r\\n            dom: dom,\\r\\n            range: range\\r\\n        },\\r\\n        /**\\r\\n         * @property {Object}\\r\\n         * pluginEvents event list for plugins\\r\\n         * event has name and callback function.\\r\\n         *\\r\\n         * ```\\r\\n         * $.materialnote.addPlugin({\\r\\n     *     events : {\\r\\n     *          'hello' : function(layoutInfo, value, $target) {\\r\\n     *              console.log('event name is hello, value is ' + value );\\r\\n     *          }\\r\\n     *     }\\r\\n     * })\\r\\n         * ```\\r\\n         *\\r\\n         * * event name is data-event property.\\r\\n         * * layoutInfo is a materialnote layout information.\\r\\n         * * value is data-value property.\\r\\n         */\\r\\n        pluginEvents: {},\\r\\n\\r\\n        plugins : []\\r\\n    });\\r\\n\\r\\n    /**\\r\\n     * @method addPlugin\\r\\n     *\\r\\n     * add Plugin in materialnote\\r\\n     *\\r\\n     * materialnote can make a own plugin.\\r\\n     *\\r\\n     * ### Define plugin\\r\\n     * ```\\r\\n     * // get template function\\r\\n     * var tmpl = $.materialnote.renderer.getTemplate();\\r\\n     *\\r\\n     * // add a button\\r\\n     * $.materialnote.addPlugin({\\r\\n   *     buttons : {\\r\\n   *        // \\\"hello\\\"  is button's namespace.\\r\\n   *        \\\"hello\\\" : function(lang, options) {\\r\\n   *            // make icon button by template function\\r\\n   *            return tmpl.iconButton(options.iconPrefix + 'header', {\\r\\n   *                // callback function name when button clicked\\r\\n   *                e\";\n  builder.string += \"vent : 'hello',\\r\\n   *                // set data-value property\\r\\n   *                value : 'hello',\\r\\n   *                hide : true\\r\\n   *            });\\r\\n   *        }\\r\\n   *\\r\\n   *     },\\r\\n   *\\r\\n   *     events : {\\r\\n   *        \\\"hello\\\" : function(layoutInfo, value) {\\r\\n   *            // here is event code\\r\\n   *        }\\r\\n   *     }\\r\\n   * });\\r\\n     * ```\\r\\n     * ### Use a plugin in toolbar\\r\\n     *\\r\\n     * ```\\r\\n     *    $(\\\"#editor\\\").materialnote({\\r\\n   *    ...\\r\\n   *    toolbar : [\\r\\n   *        // display hello plugin in toolbar\\r\\n   *        ['group', [ 'hello' ]]\\r\\n   *    ]\\r\\n   *    ...\\r\\n   *    });\\r\\n     * ```\\r\\n     *\\r\\n     *\\r\\n     * @param {Object} plugin\\r\\n     * @param {Object} [plugin.buttons] define plugin button. for detail, see to Renderer.addButtonInfo\\r\\n     * @param {Object} [plugin.dialogs] define plugin dialog. for detail, see to Renderer.addDialogInfo\\r\\n     * @param {Object} [plugin.events] add event in $.materialnote.pluginEvents\\r\\n     * @param {Object} [plugin.langs] update $.materialnote.lang\\r\\n     * @param {Object} [plugin.options] update $.materialnote.options\\r\\n     */\\r\\n    $.materialnote.addPlugin = function(plugin) {\\r\\n\\r\\n        // save plugin list\\r\\n        $.materialnote.plugins.push(plugin);\\r\\n\\r\\n        if (plugin.buttons) {\\r\\n            $.each(plugin.buttons, function(name, button) {\\r\\n                renderer.addButtonInfo(name, button);\\r\\n            });\\r\\n        }\\r\\n\\r\\n        if (plugin.dialogs) {\\r\\n            $.each(plugin.dialogs, function(name, dialog) {\\r\\n                renderer.addDialogInfo(name, dialog);\\r\\n            });\\r\\n        }\\r\\n\\r\\n        if (plugin.events) {\\r\\n            $.each(plugin.events, function(name, event) {\\r\\n                $.materialnote.pluginEvents[name] = event;\\r\\n            });\\r\\n        }\\r\\n\\r\\n        if (plugin.langs) {\\r\\n            $.each(plugin.langs, function(locale, lang) {\\r\\n                if ($.materialnote.lang[locale]) {\\r\\n                    $.extend($.materialnote.lang[locale], lang);\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n\\r\\n        if (plugin.options) {\\r\\n            $.extend($.materialnote.options, plugin.options);\\r\\n        }\\r\\n    };\\r\\n\\r\\n    /*\\r\\n     * extend $.fn\\r\\n     */\\r\\n    $.fn.extend({\\r\\n        /**\\r\\n         * @method\\r\\n         * Initialize materialnote\\r\\n         *  - create editor layout and attach Mouse and keyboard events.\\r\\n         *\\r\\n         * ```\\r\\n         * $(\\\"#materialnote\\\").materialnote( { options ..} );\\r\\n         * ```\\r\\n         *\\r\\n         * @member $.fn\\r\\n         * @param {Object|String} options reference to $.materialnote.options\\r\\n         * @return {this}\\r\\n         */\\r\\n        materialnote: function() {\\r\\n\\r\\n            // check first argument's type\\r\\n            //  - {String}: External API call {{module}}.{{method}}\\r\\n            //  - {Object}: init options\\r\\n            var type = $.type(list.head(arguments));\\r\\n            var isExternalAPICalled = type === 'string';\\r\\n            var hasInitOptions = type === 'object';\\r\\n\\r\\n            // extend default options with custom user options\\r\\n            var options = hasInitOptions ? list.head(arguments) : {};\\r\\n\\r\\n            options = $.extend({}, $.materialnote.options, options);\\r\\n            options.icons = $.extend({}, $.materialnote.options.icons, options.icons);\\r\\n\\r\\n            // Include langInfo in options for later use, e.g. for image drag-n-drop\\r\\n            // Setup language info with en-US as default\\r\\n            options.langInfo = $.extend(true, {}, $.materialnote.lang['en-US'], $.materialnote.lang[options.lang]);\\r\\n\\r\\n            // override plugin options\\r\\n            if (!isExternalAPICalled && hasInitOptions) {\\r\\n                for (var i = 0, len = $.materialnote.plugins.length; i < len; i++) {\\r\\n                    var plugin = $.materialnote.plugins[i];\\r\\n\\r\\n                    if (options.plugin[plugin.name]) {\\r\\n                        $.materialnote.plugins[i] = $.extend(true, plugin, options.plugin[plugin.name]);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n\\r\\n            this.each(function(idx, holder) {\\r\\n                // >>>>>>> CK set id for this editor\\r\\n                materialUniqueId = $(holder).attr('id');\\r\\n\\r\\n                var $holder = $(holder);\\r\\n\\r\\n                // if layout isn't created yet, createLayout and attach events\\r\\n                if (!renderer.hasNoteEditor($holder)) {\\r\\n                    renderer.createLayout($holder, options);\\r\\n\\r\\n                    var layoutInfo = renderer.layoutInfoFromHolder($holder);\\r\\n                    $holder.data('layoutInfo', layoutInfo);\\r\\n\\r\\n                    eventHandler.attach(layoutInfo, options);\\r\\n                    eventHandler.attachCustomEvent(layoutInfo, options);\\r\\n\\r\\n                }\\r\\n            });\\r\\n\\r\\n            var $first = this.first();\\r\\n            if ($first.length) {\\r\\n                var layoutInfo = renderer.layoutInfoFromHolder($first);\\r\\n\\r\\n                // external API\\r\\n                if (isExternalAPICalled) {\\r\\n                    var moduleAndMethod = list.head(list.from(arguments));\\r\\n                    var args = list.tail(list.from(arguments));\\r\\n\\r\\n                    // TODO now external API only works for editor\\r\\n                    var params = [moduleAndMethod, layoutInfo.editable()].concat(args);\\r\\n                    return eventHandler.invoke.apply(eventHandler, params);\\r\\n                } else if (options.focus) {\\r\\n                    // focus on first editable element for initialize editor\\r\\n                    layoutInfo.editable().focus();\\r\\n                }\\r\\n            }\\r\\n\\r\\n\\r\\n\\r\\n            // >>>>>>> CK dropdowns - tabs activation\\r\\n            $(this).each(function(index, editor) {\\r\\n                var tabs;\\r\\n                var tabContainer;\\r\\n                var toolbar;\\r\\n                var isAir = false;\\r\\n\\r\\n                if ($(editor).hasClass('note-air-editor')) {\\r\\n                    var id = $(this).attr('id');\\r\\n                    if (id) id = id.substring(id.lastIndexOf('-') + 1, id.length);\\r\\n\\r\\n                    editor = $('#note-popover-' + id).find('.note-air-popover');\\r\\n                    tabContainer = editor.find('ul.tabs');\\r\\n                    tabs = editor.find('li.tab a');\\r\\n                    toolbar = $(editor).find('.popover-content button.dropdown');\\r\\n                    isAir = true;\\r\\n                } else {\\r\\n                    editor = $(editor).next('.note-editor');\\r\\n                    tabContainer = editor.find('ul.tabs');\\r\\n                    tabs = editor.find('li.tab a');\\r\\n                    toolbar = $(editor).find('.note-toolbar button.dropdown');\\r\\n                }\\r\\n                var go = true;\\r\\n\\r\\n                function handleDropdowns(select, bar) {\\r\\n                    var list = $(select).next('ul.dropdown-menu');\\r\\n                    var container = $(select).parent('.btn-group');\\r\\n\\r\\n                    list.slideUp(0);\\r\\n\\r\\n                    $('.preventDropClose').click(function(event) {\\r\\n                        event.stopPropagation();\\r\\n                    });\\r\\n\\r\\n                    $(select).click(function(event) {\\r\\n                        // calculate dropdown open position to avoid overflow from editor\\r\\n                        var btnOffset = Math.round($(select).parent('.btn-group').offset().left - toolbar.offset().left);\\r\\n                        var listBorderWidth = parseInt(list.css(\\\"border-left-width\\\"));\\r\\n                        var editorWidth = editor.outerWidth();\\r\\n                        var listOffset = listBorderWidth;\\r\\n\\r\\n                        list.css({'max-width': editorWidth + 'px'});\\r\\n\\r\\n                        var listWidth = list.outerWidth();\\r\\n                        var th = listWidth + btnOffset;\\r\\n\\r\\n                        if (th >= editorWidth) {\\r\\n                            listOffset = th - editorWidth;\\r\\n\\r\\n                            if (!isAir) {\\r\\n                                listOffset = listOffset + listBorderWidth;\\r\\n                            }\\r\\n                        }\\r\\n\\r\\n                        list.css({'left': '-' + listOffset + 'px'});\\r\\n\\r\\n                        var reopen = true;\\r\\n\\r\\n                        if (list.is(':visible')) reopen = false;\\r\\n\\r\\n                        bar.find('ul.dropdown-menu').slideUp(200);\\r\\n\\r\\n                        if (reopen) {\\r\\n                            list.slideToggle(200);\\r\\n                        }\\r\\n                        event.stopPropagation();\\r\\n                    });\\r\\n\\r\\n                    tabs.unbind().click(function(event) {\\r\\n                        go = false;\\r\\n                    });\\r\\n                }\\r\\n\\r\\n                $(window).click(function(event) {\\r\\n                    if (go) editor.find('ul.dropdown-menu').slideUp(200);\\r\\n                    go = true;\\r\\n                    event.stopPropagation();\\r\\n                });\\r\\n\\r\\n                // dropdowns\\r\\n                toolbar.each(function(index, select) {\\r\\n                    handleDropdowns(select, editor);\\r\\n                });\\r\\n\\r\\n                // activate tabs\\r\\n                tabContainer.tabs();\\r\\n            });\\r\\n\\r\\n            return this;\\r\\n        },\\r\\n\\r\\n        /**\\r\\n         * @method\\r\\n         *\\r\\n         * get the HTML contents of note or set the HTML contents of note.\\r\\n         *\\r\\n         * * get contents\\r\\n         * ```\\r\\n         * var content = $(\\\"#materialnote\\\").code();\\r\\n         * ```\\r\\n         * * set contents\\r\\n         *\\r\\n         * ```\\r\\n         * $(\\\"#materialnote\\\").code(html);\\r\\n         * ```\\r\\n         *\\r\\n         * @member $.fn\\r\\n         * @param {String} [html] - HTML contents(optional, set)\\r\\n         * @return {this|String} - context(set) or HTML contents of note(get).\\r\\n         */\\r\\n        code: function(html) {\\r\\n            // get the HTML contents of note\\r\\n            if (html === undefined) {\\r\\n                var $holder = this.first();\\r\\n                if (!$holder.length) {\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                var layoutInfo = renderer.layoutInfoFromHolder($holder);\\r\\n                var $editable = layoutInfo && layoutInfo.editable();\\r\\n\\r\\n                if ($editable && $editable.length) {\\r\\n                    var isCodeview = eventHandler.invoke('codeview.isActivated', layoutInfo);\\r\\n                    eventHandler.invoke('codeview.sync', layoutInfo);\\r\\n                    return isCodeview ? layoutInfo.codable().val() :\\r\\n                        layoutInfo.editable().html();\\r\\n                }\\r\\n                return dom.value($holder);\\r\\n            }\\r\\n\\r\\n            // set the HTML contents of note\\r\\n            this.each(function(i, holder) {\\r\\n                var layoutInfo = renderer.layoutInfoFromHolder($(holder));\\r\\n                var $editable = layoutInfo && layoutInfo.editable();\\r\\n                if ($editable) {\\r\\n                    $editable.html(html);\\r\\n                }\\r\\n            });\\r\\n\\r\\n            return this;\\r\\n        },\\r\\n\\r\\n        /**\\r\\n         * @method\\r\\n         *\\r\\n         * destroy Editor Layout and detach Key and Mouse Event\\r\\n         *\\r\\n         * @member $.fn\\r\\n         * @return {this}\\r\\n         */\\r\\n        destroy: function() {\\r\\n            this.each(function(idx, holder) {\\r\\n                var $holder = $(holder);\\r\\n\\r\\n                if (!renderer.hasNoteEditor($holder)) {\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                var info = renderer.layoutInfoFromHolder($holder);\\r\\n                var options = info.editor().data('options');\\r\\n\\r\\n                eventHandler.detach(info, options);\\r\\n                renderer.removeLayout($holder, info, options);\\r\\n            });\\r\\n\\r\\n            return this;\\r\\n        }\\r\\n\\r\\n    });\\r\\n}));\\r\\n\\r\\n(function ($) {\\r\\n    $.fn.ckTooltip = function (options) {\\r\\n        var timeout = null,\\r\\n            counter = null,\\r\\n            started = false,\\r\\n            counterInterval = null,\\r\\n            margin = 5;\\r\\n\\r\\n        // Defaults\\r\\n        var defaults = {\\r\\n            delay: 350\\r\\n        };\\r\\n        options = $.extend(defaults, options);\\r\\n\\r\\n        return this.each(function(){\\r\\n            var origin = $(this);\\r\\n\\r\\n            // Create Text span\\r\\n            var tooltip_text = $('<span><\\/span>').text(origin.attr('data-tooltip'));\\r\\n\\r\\n            // Create tooltip\\r\\n            var newTooltip = $('<div><\\/div>');\\r\\n            newTooltip.addClass('material-tooltip').append(tooltip_text);\\r\\n            newTooltip.appendTo($('body'));\\r\\n\\r\\n            var backdrop = $('<div><\\/div>').addClass('backdrop');\\r\\n            backdrop.appendTo(newTooltip);\\r\\n            backdrop.css({ top: 0, left:0 });\\r\\n\\r\\n            //Destroy previously binded events\\r\\n            //$(this).off('mouseenter mouseleave');\\r\\n\\r\\n            $.event.special.destroyed = {\\r\\n                remove: function(o) {\\r\\n                    if (o.handler) {\\r\\n                        o.handler();\\r\\n                    }\\r\\n                }\\r\\n            };\\r\\n            $(this).bind('destroyed', function() {\\r\\n                newTooltip.remove();\\r\\n            });\\r\\n\\r\\n            // Mouse In\\r\\n            $(this).on({\\r\\n                mouseenter: function(e) {\\r\\n                    var tooltip_delay = origin.data(\\\"delay\\\");\\r\\n\\r\\n                    tooltip_delay = (tooltip_delay === undefined || tooltip_delay === '') ? options.delay : tooltip_delay;\\r\\n                    counter = 0;\\r\\n                    counterInterval = setInterval(function(){\\r\\n                        counter += 10;\\r\\n\\r\\n                        if (counter >= tooltip_delay && started === false) {\\r\\n                            started = true;\\r\\n                            newTooltip.css({ display: 'block', left: '0px', top: '0px' });\\r\\n\\r\\n                            // Set Tooltip text\\r\\n                            newTooltip.children('span').text(origin.attr('data-tooltip'));\\r\\n\\r\\n                            // Tooltip positioning\\r\\n                            var originWidth = origin.outerWidth();\\r\\n                            var originHeight = origin.outerHeight();\\r\\n                            var tooltipPosition =  origin.attr('data-position');\\r\\n                            var tooltipHeight = newTooltip.outerHeight();\\r\\n                            var tooltipWidth = newTooltip.outerWidth();\\r\\n                            var tooltipVerticalMovement = '0px';\\r\\n                            var tooltipHorizontalMovement = '0px';\\r\\n                            var scale_factor = 8;\\r\\n\\r\\n                            if (tooltipPosition === \\\"top\\\") {\\r\\n                                // Top Position\\r\\n                                newTooltip.css({\\r\\n                                    top: origin.offset().top - tooltipHeight - margin,\\r\\n                                    left: origin.offset().left + originWidth/2 - tooltipWidth/2\\r\\n                                });\\r\\n                                tooltipVerticalMovement = '-10px';\\r\\n                                backdrop.css({\\r\\n                                    borderRadius: '14px 14px 0 0',\\r\\n                                    transformOrigin: '50% 90%',\\r\\n                                    marginTop: tooltipHeight,\\r\\n                                    marginLeft: (tooltipWidth/2) - (backdrop.width()/2)\\r\\n\\r\\n                                });\\r\\n                            }\\r\\n                            // Left Position\\r\\n                            else if (tooltipPosition === \\\"left\\\") {\\r\\n                                newTooltip.css({\\r\\n                                    top: origin.offset().top + originHeight/2 - tooltipHeight/2,\\r\\n                                    left: origin.offset().left - tooltipWidth - margin\\r\\n                                });\\r\\n                                tooltipHorizontalMovement = '-10px';\\r\\n                                backdrop.css({\\r\\n                                    width: '14px',\\r\\n                                    height: '14px',\\r\\n                                    borderRadius: '14px 0 0 14px',\\r\\n                                    transformOrigin: '95% 50%',\\r\\n                                    marginTop: tooltipHeight/2,\\r\\n                                    marginLeft: tooltipWidth\\r\\n                                });\\r\\n                            }\\r\\n                            // Right Position\\r\\n                            else if (tooltipPosition === \\\"right\\\") {\\r\\n                                newTooltip.css({\\r\\n                                    top: origin.offset().top + originHeight/2 - tooltipHeight/2,\\r\\n                           \";\n  builder.string += \"         left: origin.offset().left + originWidth + margin\\r\\n                                });\\r\\n                                tooltipHorizontalMovement = '+10px';\\r\\n                                backdrop.css({\\r\\n                                    width: '14px',\\r\\n                                    height: '14px',\\r\\n                                    borderRadius: '0 14px 14px 0',\\r\\n                                    transformOrigin: '5% 50%',\\r\\n                                    marginTop: tooltipHeight/2,\\r\\n                                    marginLeft: '0px'\\r\\n                                });\\r\\n                            }\\r\\n                            else {\\r\\n                                // Bottom Position\\r\\n                                newTooltip.css({\\r\\n                                    top: origin.offset().top + origin.outerHeight() + margin,\\r\\n                                    left: origin.offset().left + originWidth/2 - tooltipWidth/2\\r\\n                                });\\r\\n                                tooltipVerticalMovement = '+10px';\\r\\n                                backdrop.css({\\r\\n                                    marginLeft: (tooltipWidth/2) - (backdrop.width()/2)\\r\\n                                });\\r\\n                            }\\r\\n\\r\\n                            // Calculate Scale to fill\\r\\n                            scale_factor = tooltipWidth / 8;\\r\\n                            if (scale_factor < 8) {\\r\\n                                scale_factor = 8;\\r\\n                            }\\r\\n                            if (tooltipPosition === \\\"right\\\" || tooltipPosition === \\\"left\\\") {\\r\\n                                scale_factor = tooltipWidth / 10;\\r\\n                                if (scale_factor < 6)\\r\\n                                    scale_factor = 6;\\r\\n                            }\\r\\n\\r\\n                            newTooltip.velocity({ opacity: 1, marginTop: tooltipVerticalMovement, marginLeft: tooltipHorizontalMovement}, { duration: 150, queue: false });\\r\\n                            backdrop.css({ display: 'block' })\\r\\n                                .velocity({opacity:1},{duration: 50, delay: 0, queue: false})\\r\\n                                .velocity({scale: scale_factor}, {duration: 150, delay: 0, queue: false, easing: 'easeInOutQuad'});\\r\\n                        }\\r\\n                    }, 10); // End Interval\\r\\n\\r\\n                    // Mouse Out\\r\\n                },\\r\\n                mouseleave: function(){\\r\\n                    // Reset State\\r\\n                    clearInterval(counterInterval);\\r\\n                    counter = 0;\\r\\n\\r\\n                    // Animate back\\r\\n                    newTooltip.velocity({\\r\\n                        opacity: 0, marginTop: 0, marginLeft: 0}, { duration: 150, queue: false, delay: 50 }\\r\\n                    );\\r\\n                    backdrop.velocity({opacity: 0, scale: 1}, {\\r\\n                        duration:150,\\r\\n                        delay: 50, queue: false,\\r\\n                        complete: function(){\\r\\n                            backdrop.css('display', 'none');\\r\\n                            newTooltip.css('display', 'none');\\r\\n                            started = false;}\\r\\n                    });\\r\\n                }\\r\\n            });\\r\\n        });\\r\\n    };\\r\\n\\r\\n}(jQuery));\\r\\n\";\n  return builder.string;\n}\n;\nvar Lgwt_material_design_addins_client_richeditor_MaterialRichEditorDebugClientBundle_1default_1InlineClientBundleGenerator$2_2_classLit = createForClass('gwt.material.design.addins.client.richeditor', 'MaterialRichEditorDebugClientBundle_default_InlineClientBundleGenerator/2', 1726);\nfunction $clinit_MaterialRichEditorDebugClientBundle_default_InlineClientBundleGenerator$richEditorDebugCssInitializer(){\n  $clinit_MaterialRichEditorDebugClientBundle_default_InlineClientBundleGenerator$richEditorDebugCssInitializer = emptyMethod;\n  richEditorDebugCss = new MaterialRichEditorDebugClientBundle_default_InlineClientBundleGenerator$1;\n}\n\nfunction $clinit_MaterialRichEditorDebugClientBundle_default_InlineClientBundleGenerator$richEditorDebugJsInitializer(){\n  $clinit_MaterialRichEditorDebugClientBundle_default_InlineClientBundleGenerator$richEditorDebugJsInitializer = emptyMethod;\n  richEditorDebugJs = new MaterialRichEditorDebugClientBundle_default_InlineClientBundleGenerator$2;\n}\n\nfunction $clinit_ToolbarButton(){\n  $clinit_ToolbarButton = emptyMethod;\n  STYLE = new ToolbarButton('STYLE', 0, 'style');\n  BOLD_0 = new ToolbarButton('BOLD', 1, 'bold');\n  ITALIC = new ToolbarButton('ITALIC', 2, 'italic');\n  UNDERLINE = new ToolbarButton('UNDERLINE', 3, 'underline');\n  STRIKETHROUGH = new ToolbarButton('STRIKETHROUGH', 4, 'strikethrough');\n  CLEAR = new ToolbarButton('CLEAR', 5, 'clear');\n  SUPERSCRIPT = new ToolbarButton('SUPERSCRIPT', 6, 'superscript');\n  SUBSCRIPT = new ToolbarButton('SUBSCRIPT', 7, 'subscript');\n  FONT_SIZE = new ToolbarButton('FONT_SIZE', 8, 'fontsize');\n  FONT_NAME = new ToolbarButton('FONT_NAME', 9, 'fontname');\n  COLOR = new ToolbarButton('COLOR', 10, 'color');\n  UNDO = new ToolbarButton('UNDO', 11, 'undo');\n  REDO = new ToolbarButton('REDO', 12, 'redo');\n  HELP_0 = new ToolbarButton('HELP', 13, 'help');\n  CK_IMAGE_UPLOAD = new ToolbarButton('CK_IMAGE_UPLOAD', 14, 'ckImageUploader');\n  CK_IMAGE_VIDEO = new ToolbarButton('CK_IMAGE_VIDEO', 15, 'ckVideoEmbeeder');\n  LINK_0 = new ToolbarButton('LINK', 16, 'link');\n  PICTURE = new ToolbarButton('PICTURE', 17, 'picture');\n  TABLE_1 = new ToolbarButton('TABLE', 18, 'table');\n  HR = new ToolbarButton('HR', 19, 'hr');\n  CODE_VIEW = new ToolbarButton('CODE_VIEW', 20, 'codeview');\n  FULLSCREEN = new ToolbarButton('FULLSCREEN', 21, 'fullscreen');\n  UL = new ToolbarButton('UL', 22, 'ul');\n  OL = new ToolbarButton('OL', 23, 'ol');\n  PARAGRAPH = new ToolbarButton('PARAGRAPH', 24, 'paragraph');\n  LEFT_2 = new ToolbarButton('LEFT', 25, 'leftButton');\n  CENTER_3 = new ToolbarButton('CENTER', 26, 'centerButton');\n  RIGHT_3 = new ToolbarButton('RIGHT', 27, 'rightButton');\n  JUSTIFY_1 = new ToolbarButton('JUSTIFY', 28, 'justifyButton');\n  OUTDENT = new ToolbarButton('OUTDENT', 29, 'outdentButton');\n  INDENT = new ToolbarButton('INDENT', 30, 'indentButton');\n  LINE_HEIGHT = new ToolbarButton('LINE_HEIGHT', 31, 'lineheight');\n}\n\nfunction ToolbarButton(enum$name, enum$ordinal, id_0){\n  Enum.call(this, enum$name, enum$ordinal);\n  this.id_0 = id_0;\n}\n\nfunction values_26(){\n  $clinit_ToolbarButton();\n  return initValues(getClassLiteralForArray(Lgwt_material_design_addins_client_richeditor_base_constants_ToolbarButton_2_classLit, 1), $intern_8, 68, 0, [STYLE, BOLD_0, ITALIC, UNDERLINE, STRIKETHROUGH, CLEAR, SUPERSCRIPT, SUBSCRIPT, FONT_SIZE, FONT_NAME, COLOR, UNDO, REDO, HELP_0, CK_IMAGE_UPLOAD, CK_IMAGE_VIDEO, LINK_0, PICTURE, TABLE_1, HR, CODE_VIEW, FULLSCREEN, UL, OL, PARAGRAPH, LEFT_2, CENTER_3, RIGHT_3, JUSTIFY_1, OUTDENT, INDENT, LINE_HEIGHT]);\n}\n\ndefineClass(68, 22, {68:1, 7:1, 30:1, 22:1}, ToolbarButton);\nvar BOLD_0, CENTER_3, CK_IMAGE_UPLOAD, CK_IMAGE_VIDEO, CLEAR, CODE_VIEW, COLOR, FONT_NAME, FONT_SIZE, FULLSCREEN, HELP_0, HR, INDENT, ITALIC, JUSTIFY_1, LEFT_2, LINE_HEIGHT, LINK_0, OL, OUTDENT, PARAGRAPH, PICTURE, REDO, RIGHT_3, STRIKETHROUGH, STYLE, SUBSCRIPT, SUPERSCRIPT, TABLE_1, UL, UNDERLINE, UNDO;\nvar Lgwt_material_design_addins_client_richeditor_base_constants_ToolbarButton_2_classLit = createForEnum('gwt.material.design.addins.client.richeditor.base.constants', 'ToolbarButton', 68, values_26);\nfunction RichEditorPresenter(eventBus, view, proxy){\n  $clinit_PresenterWidget();\n  Presenter.call(this, eventBus, view, proxy, ($clinit_ApplicationPresenter() , SLOT_MainContent));\n}\n\ndefineClass(670, 53, $intern_55, RichEditorPresenter);\n_.onReveal = function onReveal_13(){\n  $clinit_SetPageTitleEvent();\n  $fireEvent_1(this, new SetPageTitleEvent('Rich Editor', 'Provides a great Rich Editor with amazing options built with Material Design Look and Feel.'));\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_richeditor_RichEditorPresenter_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.richeditor', 'RichEditorPresenter', 670);\nfunction $onSetHTML(this$static){\n  $setHTML(this$static.richEditor, $getText(this$static.txtHTML.valueBoxBase));\n}\n\nfunction RichEditorView(){\n  ViewImpl.call(this);\n  $initWidget_0(this, $build_f_HTMLPanel1_8(new RichEditorView_BinderImpl$Widgets(this)));\n  $setHTML(this.richEditor, '<h2 style=\"text-align: center; \"> <span style=\"color: rgb(101, 31, 255);\"> I Love Material Design <\\/span> <\\/h2> <p style=\"text-align: center;\"> <span style=\"font-size: 17px;\"> Using <\\/span> <span style=\"font-weight: bold; font-size: 17px; text-decoration: underline;\"> Airmode <\\/span> <span style=\"font-size: 17px;\"> you can directly modify this html. <\\/span> <\\/p> <p style=\"text-align: center;\"> <br> <\\/p> <table class=\"hoverable bordered striped responsive-table\"> <thead> <tr> <th> Country <\\/th> <th> Capital <\\/th> <th> Currency <\\/th> <\\/tr> <\\/thead> <tbody> <tr> <td> Philippines <\\/td> <td> Manila <\\/td> <td> Peso <\\/td> <\\/tr> <tr> <td> Japan <\\/td> <td> Tokyo <\\/td> <td> Yen <\\/td> <\\/tr> <\\/tbody> <\\/table> <p> <\\/p>');\n  $setHTML(this.airmodeRichEditor, '<h2 style=\"text-align: center; \"> <span style=\"color: rgb(101, 31, 255);\"> I Love Material Design <\\/span> <\\/h2> <p style=\"text-align: center;\"> <span style=\"font-size: 17px;\"> Using <\\/span> <span style=\"font-weight: bold; font-size: 17px; text-decoration: underline;\"> Airmode <\\/span> <span style=\"font-size: 17px;\"> you can directly modify this html. <\\/span> <\\/p> <p style=\"text-align: center;\"> <br> <\\/p> <table class=\"hoverable bordered striped responsive-table\"> <thead> <tr> <th> Country <\\/th> <th> Capital <\\/th> <th> Currency <\\/th> <\\/tr> <\\/thead> <tbody> <tr> <td> Philippines <\\/td> <td> Manila <\\/td> <td> Peso <\\/td> <\\/tr> <tr> <td> Japan <\\/td> <td> Tokyo <\\/td> <td> Yen <\\/td> <\\/tr> <\\/tbody> <\\/table> <p> <\\/p>');\n  $setStyleOptions(this.optionRichEditor, initValues(getClassLiteralForArray(Lgwt_material_design_addins_client_richeditor_base_constants_ToolbarButton_2_classLit, 1), $intern_8, 68, 0, [($clinit_ToolbarButton() , STYLE), BOLD_0, ITALIC]));\n  $setParaOptions(this.optionRichEditor, initValues(getClassLiteralForArray(Lgwt_material_design_addins_client_richeditor_base_constants_ToolbarButton_2_classLit, 1), $intern_8, 68, 0, [LEFT_2, RIGHT_3, JUSTIFY_1]));\n  $setMiscOptions(this.optionRichEditor, initValues(getClassLiteralForArray(Lgwt_material_design_addins_client_richeditor_base_constants_ToolbarButton_2_classLit, 1), $intern_8, 68, 0, [CODE_VIEW, FULLSCREEN]));\n  $setUndoOptions(this.optionRichEditor, initValues(getClassLiteralForArray(Lgwt_material_design_addins_client_richeditor_base_constants_ToolbarButton_2_classLit, 1), $intern_8, 68, 0, []));\n  $setHTML(this.optionRichEditor, '<div style=\"text-align: left;\"> <span style=\"font-size: 37px; font-weight: bold;\"> Options <\\/span> <\\/div> <div style=\"text-align: left;\"> <ul> <li> <span style=\"line-height: 1.5;\"> optionRichEditor.setStyleOptions(ToolbarButton. <span style=\"font-weight: bold;\"> STYLE <\\/span> , ToolbarButton. <span style=\"font-weight: bold;\"> BOLD <\\/span> , ToolbarButton. <span style=\"font-weight: bold;\"> ITALIC <\\/span> ); <\\/span> <br> <\\/li> <li> optionRichEditor.setParaOptions(ToolbarButton. <span style=\"font-weight: bold;\"> LEFT <\\/span> ,&nbsp;ToolbarButton. <span style=\"font-weight: bold;\"> RIGHT <\\/span> , ToolbarButton. <span style=\"font-weight: bold;\"> JUSTIFY <\\/span> ); <\\/li> <li> optionRichEditor.setMiscOptions(ToolbarButton. <span style=\"font-weight: bold;\"> CODE_VIEW <\\/span> , ToolbarButton. <span style=\"font-weight: bold;\"> FULLSCREEN <\\/span> ); <\\/li> <li> optionRichEditor.setUndoOptions(); <\\/li> <\\/ul> <\\/div>');\n  $setHTML(this.clearRichEditor, '<h2>I Love <\\/h2>');\n}\n\ndefineClass(898, 56, $intern_56, RichEditorView);\nvar Lgwt_material_design_demo_client_application_addins_richeditor_RichEditorView_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.richeditor', 'RichEditorView', 898);\nfunction RichEditorView_BinderImpl(){\n}\n\ndefineClass(1183, 1, {}, RichEditorView_BinderImpl);\nvar Lgwt_material_design_demo_client_application_addins_richeditor_RichEditorView_1BinderImpl_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.richeditor', 'RichEditorView_BinderImpl', 1183);\nfunction $build_f_HTMLPanel1_8(this$static){\n  var __attachRecord__, f_HTMLPanel1, f_MaterialTitle2, f_PrettyPre3, f_richeditor$MaterialRichEditor4, f_MaterialTitle5, f_MaterialRow6, richEditor, f_PrettyPre8, f_MaterialTitle9, airmodeRichEditor, f_PrettyPre10, f_MaterialTitle11, f_richeditor$MaterialRichEditor12, f_PrettyPre13, f_MaterialTitle14, optionRichEditor, f_PrettyPre15, f_MaterialTitle16, btnClear, btnInsertText, clearRichEditor, f_PrettyPre17, sb, txtHTML, f_MaterialColumn7, btnSetHTML, btnGetHTML, sb_0, sb_1, sb_2, sb_3, sb_4;\n  f_HTMLPanel1 = new HTMLPanel($html7(this$static.domId0, this$static.domId1, this$static.domId2, this$static.domId3, this$static.domId4, this$static.domId5, this$static.domId6, this$static.domId7, this$static.domId8, this$static.domId9, this$static.domId10, this$static.domId11, this$static.domId12, this$static.domId13, this$static.domId14, this$static.domId15, this$static.domId16, this$static.domId17, this$static.domId18, this$static.domId19, this$static.domId20).html_0);\n  __attachRecord__ = attachToDom(($clinit_DOM() , f_HTMLPanel1.element));\n  $get_0(this$static.domId0Element);\n  $get_0(this$static.domId1Element);\n  $get_0(this$static.domId2Element);\n  $get_0(this$static.domId3Element);\n  $get_0(this$static.domId4Element);\n  $get_0(this$static.domId5Element);\n  $get_0(this$static.domId6Element);\n  $get_0(this$static.domId7Element);\n  $get_0(this$static.domId8Element);\n  $get_0(this$static.domId9Element);\n  $get_0(this$static.domId10Element);\n  $get_0(this$static.domId11Element);\n  $get_0(this$static.domId12Element);\n  $get_0(this$static.domId13Element);\n  $get_0(this$static.domId14Element);\n  $get_0(this$static.domId15Element);\n  $get_0(this$static.domId16Element);\n  $get_0(this$static.domId17Element);\n  $get_0(this$static.domId18Element);\n  $get_0(this$static.domId19Element);\n  $get_0(this$static.domId20Element);\n  __attachRecord__.origParent?$insertBefore(__attachRecord__.origParent, __attachRecord__.element, __attachRecord__.origSibling):orphan(__attachRecord__.element);\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_MaterialTitle2 = new MaterialTitle , $setInnerHTML($getElement(f_MaterialTitle2.header), 'Usage') , f_MaterialTitle2), $get_0(this$static.domId0Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_PrettyPre3 = new PrettyPre , $setHTML_0(f_PrettyPre3, (sb = new StringBuilder , sb.string += '\\u2003&lt;!-- Addin Import --&gt;<br> xmlns:ma=\"urn:import:gwt.material.design.addins.client\"<br><br> &lt;!-- Addin Usage --&gt;<br> \\u2003&lt;ma:richeditor.MaterialRichEditor placeholder=\"Type everything about Material Design\"/&gt;' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb.string)).html_0) , setStyleName(f_PrettyPre3.element, 'lang-xml', true) , setStyleName(f_PrettyPre3.element, 'z-depth-1', true) , f_PrettyPre3), $get_0(this$static.domId1Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_richeditor$MaterialRichEditor4 = new MaterialRichEditor , f_richeditor$MaterialRichEditor4.placeholder = 'Type everything about Material Design' , f_richeditor$MaterialRichEditor4), $get_0(this$static.domId2Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_MaterialTitle5 = new MaterialTitle , $setText_9(f_MaterialTitle5.paragraph, 'We provided a method to easily set the html content of the rich editor component') , $setInnerHTML($getElement(f_MaterialTitle5.header), 'Set/Get HTML') , f_MaterialTitle5), $get_0(this$static.domId3Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_MaterialRow6 = new MaterialRow , $add_12(f_MaterialRow6, (txtHTML = new MaterialTextBox , $setGrid((!txtHTML.gridMixin_0 && (txtHTML.gridMixin_0 = new GridMixin(txtHTML)) , txtHTML.gridMixin_0), 's12 l3 m3') , txtHTML.type_0 != ($clinit_InputType() , SEARCH_1)?$setText_7(txtHTML.lblName, 'Any HTML'):$setAttribute($getElement(txtHTML.valueBoxBase), 'placeholder', 'Any HTML') , this$static.owner.txtHTML = txtHTML , txtHTML)) , $add_12(f_MaterialRow6, (f_MaterialColumn7 = new MaterialColumn , $add_12(f_MaterialColumn7, (btnSetHTML = new MaterialButton , $setWaves(btnSetHTML, ($clinit_WavesType() , DEFAULT_7)) , btnSetHTML.element.style['margin'] = ($clinit_Style$Unit() , '8.0px') , btnSetHTML.span_1.setText('Set HTML') , $add_12(btnSetHTML, btnSetHTML.span_1) , $addDomHandler(btnSetHTML, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames3, ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_1)) , btnSetHTML)) , $add_12(f_MaterialColumn7, (btnGetHTML = new MaterialButton , $setWaves(btnGetHTML, DEFAULT_7) , btnGetHTML.element.style['margin'] = '8.0px' , btnGetHTML.span_1.setText('Get HTML') , $add_12(btnGetHTML, btnGetHTML.span_1) , $addDomHandler(btnGetHTML, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames4, (null , TYPE_1)) , btnGetHTML)) , $setGrid((!f_MaterialColumn7.gridMixin_0 && (f_MaterialColumn7.gridMixin_0 = new GridMixin(f_MaterialColumn7)) , f_MaterialColumn7.gridMixin_0), 's12 m4 l4') , f_MaterialColumn7)) , f_MaterialRow6), $get_0(this$static.domId4Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (richEditor = new MaterialRichEditor , this$static.owner.richEditor = richEditor , richEditor), $get_0(this$static.domId5Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_PrettyPre8 = new PrettyPre , $setHTML_0(f_PrettyPre8, (sb_0 = new StringBuilder , sb_0.string += '\\u2003richEditor.setHTML(\"&lt;b&gt;I Love Material Design&lt;/b&gt;\");<br> richEditor.getHTML();' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_0.string)).html_0) , setStyleName(f_PrettyPre8.element, 'lang-java', true) , setStyleName(f_PrettyPre8.element, 'z-depth-1', true) , f_PrettyPre8), $get_0(this$static.domId6Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_MaterialTitle9 = new MaterialTitle , $setText_9(f_MaterialTitle9.paragraph, 'Air-mode gives clearer interface with hiddened toolbar. To reveal toolbar, select a text where you want to shape up. Simply turn on airMode and just focus on text.') , $setInnerHTML($getElement(f_MaterialTitle9.header), 'Air mode') , f_MaterialTitle9), $get_0(this$static.domId7Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (airmodeRichEditor = new MaterialRichEditor , airmodeRichEditor.airMode = true , this$static.owner.airmodeRichEditor = airmodeRichEditor , airmodeRichEditor), $get_0(this$static.domId8Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_PrettyPre10 = new PrettyPre , $setHTML_0(f_PrettyPre10, (sb_1 = new StringBuilder , sb_1.string += '&lt;ma:richeditor.MaterialRichEditor ui:field=\"airmodeRichEditor\" airMode=\"true\" /&gt;' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_1.string)).html_0) , setStyleName(f_PrettyPre10.element, 'lang-xml', true) , setStyleName(f_PrettyPre10.element, 'z-depth-1', true) , f_PrettyPre10), $get_0(this$static.domId9Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_MaterialTitle11 = new MaterialTitle , $setText_9(f_MaterialTitle11.paragraph, \"The height param applied to Editor's zone\") , $setInnerHTML($getElement(f_MaterialTitle11.header), 'Height') , f_MaterialTitle11), $get_0(this$static.domId10Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_richeditor$MaterialRichEditor12 = new MaterialRichEditor , f_richeditor$MaterialRichEditor12.element.style['height'] = '200px' , undefined , f_richeditor$MaterialRichEditor12), $get_0(this$static.domId11Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_PrettyPre13 = new PrettyPre , $setHTML_0(f_PrettyPre13, (sb_2 = new StringBuilder , sb_2.string += '&lt;ma:richeditor.MaterialRichEditor height=\"200px\"/&gt;' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_2.string)).html_0) , setStyleName(f_PrettyPre13.element, 'lang-xml', true) , setStyleName(f_PrettyPre13.element, 'z-depth-1', true) , f_PrettyPre13), $get_0(this$static.domId12Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_MaterialTitle14 = new MaterialTitle , $setText_9(f_MaterialTitle14.paragraph, 'You can set Options and remove what you want or even place it. Options style, fonts, colors, undo, ckMedia, misc, para and height are placed respectively.') , $setInnerHTML($getElement(f_MaterialTitle14.header), 'Controlling Options') , f_MaterialTitle14), $get_0(this$static.domId13Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (optionRichEditor = new MaterialRichEditor , this$static.owner.optionRichEditor = optionRichEditor , optionRichEditor), $get_0(this$static.domId14Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_PrettyPre15 = new PrettyPre , $setHTML_0(f_PrettyPre15, (sb_3 = new StringBuilder , sb_3.string += '\\u2003optionRichEditor.setStyleOptions(ToolbarButton.STYLE, ToolbarButton.BOLD, ToolbarButton.ITALIC);<br> optionRichEditor.setParaOptions(ToolbarButton.LEFT, ToolbarButton.RIGHT, ToolbarButton.JUSTIFY);<br> optionRichEditor.setMiscOptions(ToolbarButton.CODE_VIEW, ToolbarButton.FULLSCREEN);<br> // Without undo options<br> optionRichEditor.setUndoOptions();<br>' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_3.string)).html_0) , setStyleName(f_PrettyPre15.element, 'lang-java', true) , setStyleName(f_PrettyPre15.element, 'z-depth-1', true) , f_PrettyPre15), $get_0(this$static.domId15Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_MaterialTitle16 = new MaterialTitle , $setInnerHTML($getElement(f_MaterialTitle16.header), 'Clear and Insert Text') , f_MaterialTitle16), $get_0(this$static.domId16Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (btnClear = new MaterialButton , $setWaves(btnClear, DEFAULT_7) , btnClear.span_1.setText('Clear') , $add_12(btnClear, btnClear.span_1) , $addDomHandler(btnClear, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1, (null , TYPE_1)) , btnClear), $get_0(this$static.domId17Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (btnInsertText = new MaterialButton , $setWaves(btnInsertText, DEFAULT_7) , btnInsertText.span_1.setText('Insert Material Design') , $add_12(btnInsertText, btnInsertText.span_1) , $addDomHandler(btnInsertText, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames2, (null , TYPE_1)) , btnInsertText), $get_0(this$static.domId18Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (clearRichEditor = new MaterialRichEditor , this$static.owner.clearRichEditor = clearRichEditor , clearRichEditor), $get_0(this$static.domId19Element));\n  $addAndReplaceElement_1(f_HTMLPanel1, (f_PrettyPre17 = new PrettyPre , $setHTML_0(f_PrettyPre17, (sb_4 = new StringBuilder , sb_4.string += '\\u2003richEditor.clear(); // Clearing the rich editor <br> richEditor.insertText(\"Material Design\"); // Inserting text into rich editor <br>' , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb_4.string)).html_0) , setStyleName(f_PrettyPre17.element, 'lang-java', true) , setStyleName(f_PrettyPre17.element, 'z-depth-1', true) , f_PrettyPre17), $get_0(this$static.domId20Element));\n  return f_HTMLPanel1;\n}\n\nfunction RichEditorView_BinderImpl$Widgets(owner){\n  var style;\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1 = new RichEditorView_BinderImpl$Widgets$1(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames2 = new RichEditorView_BinderImpl$Widgets$2(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames3 = new RichEditorView_BinderImpl$Widgets$3(this);\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames4 = new RichEditorView_BinderImpl$Widgets$4(this);\n  this.owner = owner;\n  style = (new RichEditorView_BinderImpl_GenBundle_default_InlineClientBundleGenerator , $clinit_RichEditorView_BinderImpl_GenBundle_default_InlineClientBundleGenerator$styleInitializer() , style_4);\n  $ensureInjected_9(style);\n  this.domId0 = $createUniqueId($doc);\n  this.domId1 = $createUniqueId($doc);\n  this.domId2 = $createUniqueId($doc);\n  this.domId3 = $createUniqueId($doc);\n  this.domId4 = $createUniqueId($doc);\n  this.domId5 = $createUniqueId($doc);\n  this.domId6 = $createUniqueId($doc);\n  this.domId7 = $createUniqueId($doc);\n  this.domId8 = $createUniqueId($doc);\n  this.domId9 = $createUniqueId($doc);\n  this.domId10 = $createUniqueId($doc);\n  this.domId11 = $createUniqueId($doc);\n  this.domId12 = $createUniqueId($doc);\n  this.domId13 = $createUniqueId($doc);\n  this.domId14 = $createUniqueId($doc);\n  this.domId15 = $createUniqueId($doc);\n  this.domId16 = $createUniqueId($doc);\n  this.domId17 = $createUniqueId($doc);\n  this.domId18 = $createUniqueId($doc);\n  this.domId19 = $createUniqueId($doc);\n  this.domId20 = $createUniqueId($doc);\n  this.domId0Element = new LazyDomElement(this.domId0);\n  this.domId1Element = new LazyDomElement(this.domId1);\n  this.domId2Element = new LazyDomElement(this.domId2);\n  this.domId3Element = new LazyDomElement(this.domId3);\n  this.domId4Element = new LazyDomElement(this.domId4);\n  this.domId5Element = new LazyDomElement(this.domId5);\n  this.domId6Element = new LazyDomElement(this.domId6);\n  this.domId7Element = new LazyDomElement(this.domId7);\n  this.domId8Element = new LazyDomElement(this.domId8);\n  this.domId9Element = new LazyDomElement(this.domId9);\n  this.domId10Element = new LazyDomElement(this.domId10);\n  this.domId11Element = new LazyDomElement(this.domId11);\n  this.domId12Element = new LazyDomElement(this.domId12);\n  this.domId13Element = new LazyDomElement(this.domId13);\n  this.domId14Element = new LazyDomElement(this.domId14);\n  this.domId15Element = new LazyDomElement(this.domId15);\n  this.domId16Element = new LazyDomElement(this.domId16);\n  this.domId17Element = new LazyDomElement(this.domId17);\n  this.domId18Element = new LazyDomElement(this.domId18);\n  this.domId19Element = new LazyDomElement(this.domId19);\n  this.domId20Element = new LazyDomElement(this.domId20);\n}\n\ndefineClass(1184, 1, {}, RichEditorView_BinderImpl$Widgets);\nvar Lgwt_material_design_demo_client_application_addins_richeditor_RichEditorView_1BinderImpl$Widgets_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.richeditor', 'RichEditorView_BinderImpl/Widgets', 1184);\nfunction RichEditorView_BinderImpl$Widgets$1(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1185, 1, $intern_64, RichEditorView_BinderImpl$Widgets$1);\n_.onClick = function onClick_52(event_0){\n  $clear_4(this.this$11.owner.clearRichEditor);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_richeditor_RichEditorView_1BinderImpl$Widgets$1_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.richeditor', 'RichEditorView_BinderImpl/Widgets/1', 1185);\nfunction RichEditorView_BinderImpl$Widgets$2(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1186, 1, $intern_64, RichEditorView_BinderImpl$Widgets$2);\n_.onClick = function onClick_53(event_0){\n  $insertText_0(this.this$11.owner.clearRichEditor);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_richeditor_RichEditorView_1BinderImpl$Widgets$2_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.richeditor', 'RichEditorView_BinderImpl/Widgets/2', 1186);\nfunction RichEditorView_BinderImpl$Widgets$3(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1187, 1, $intern_64, RichEditorView_BinderImpl$Widgets$3);\n_.onClick = function onClick_54(event_0){\n  $onSetHTML(this.this$11.owner);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_richeditor_RichEditorView_1BinderImpl$Widgets$3_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.richeditor', 'RichEditorView_BinderImpl/Widgets/3', 1187);\nfunction RichEditorView_BinderImpl$Widgets$4(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(1188, 1, $intern_64, RichEditorView_BinderImpl$Widgets$4);\n_.onClick = function onClick_55(event_0){\n  fireToast(this.this$11.owner.richEditor.html_0);\n}\n;\nvar Lgwt_material_design_demo_client_application_addins_richeditor_RichEditorView_1BinderImpl$Widgets$4_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.richeditor', 'RichEditorView_BinderImpl/Widgets/4', 1188);\nfunction RichEditorView_BinderImpl_GenBundle_default_InlineClientBundleGenerator(){\n}\n\ndefineClass(1550, 1, {}, RichEditorView_BinderImpl_GenBundle_default_InlineClientBundleGenerator);\nvar style_4;\nvar Lgwt_material_design_demo_client_application_addins_richeditor_RichEditorView_1BinderImpl_1GenBundle_1default_1InlineClientBundleGenerator_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.richeditor', 'RichEditorView_BinderImpl_GenBundle_default_InlineClientBundleGenerator', 1550);\nfunction $ensureInjected_9(this$static){\n  if (!this$static.injected) {\n    this$static.injected = true;\n    $clinit_StyleInjector();\n    $push_1(toInject, '');\n    schedule();\n    return true;\n  }\n  return false;\n}\n\nfunction RichEditorView_BinderImpl_GenBundle_default_InlineClientBundleGenerator$1(){\n}\n\ndefineClass(1551, 1, {}, RichEditorView_BinderImpl_GenBundle_default_InlineClientBundleGenerator$1);\n_.getName = function getName_71(){\n  return 'style';\n}\n;\n_.injected = false;\nvar Lgwt_material_design_demo_client_application_addins_richeditor_RichEditorView_1BinderImpl_1GenBundle_1default_1InlineClientBundleGenerator$1_2_classLit = createForClass('gwt.material.design.demo.client.application.addins.richeditor', 'RichEditorView_BinderImpl_GenBundle_default_InlineClientBundleGenerator/1', 1551);\nfunction $clinit_RichEditorView_BinderImpl_GenBundle_default_InlineClientBundleGenerator$styleInitializer(){\n  $clinit_RichEditorView_BinderImpl_GenBundle_default_InlineClientBundleGenerator$styleInitializer = emptyMethod;\n  style_4 = new RichEditorView_BinderImpl_GenBundle_default_InlineClientBundleGenerator$1;\n}\n\nfunction $html7(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20){\n  var sb;\n  sb = new StringBuilder;\n  sb.string += \"<span id='\";\n  $append_3(sb, htmlEscape(arg0));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg1));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg2));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg3));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg4));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg5));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg6));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg7));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg8));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg9));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg10));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg11));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg12));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg13));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg14));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg15));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg16));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg17));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg18));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg19));\n  sb.string += \"'><\\/span> <span id='\";\n  $append_3(sb, htmlEscape(arg20));\n  sb.string += \"'><\\/span>\";\n  return new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml(sb.string);\n}\n\nfunction $get_Key$type$gwt$material$design$demo$client$application$addins$richeditor$RichEditorPresenter$_annotation$$none$$(this$static){\n  var result;\n  if (!this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$richeditor$RichEditorPresenter$_annotation$$none$$) {\n    result = new RichEditorPresenter($get_Key$type$com$google$web$bindery$event$shared$EventBus$_annotation$$none$$($getFragment_com_google_web_bindery_event_shared(this$static.injector)), $get_Key$type$gwt$material$design$demo$client$application$addins$richeditor$RichEditorView$_annotation$$none$$(this$static), $get_Key$type$gwt$material$design$demo$client$application$addins$richeditor$RichEditorPresenter$MyProxy$_annotation$$none$$(this$static));\n    $automaticBind(($getFragment_com_gwtplatform_mvp_client(this$static.injector) , result), $get_Key$type$com$gwtplatform$mvp$client$AutobindDisable$_annotation$$none$$($getFragment_com_gwtplatform_mvp_client(this$static.injector)));\n    this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$richeditor$RichEditorPresenter$_annotation$$none$$ = result;\n  }\n  return this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$richeditor$RichEditorPresenter$_annotation$$none$$;\n}\n\nfunction $get_Key$type$gwt$material$design$demo$client$application$addins$richeditor$RichEditorView$_annotation$$none$$(this$static){\n  var result;\n  if (!this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$richeditor$RichEditorView$_annotation$$none$$) {\n    result = new RichEditorView(new RichEditorView_BinderImpl);\n    this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$richeditor$RichEditorView$_annotation$$none$$ = result;\n  }\n  return this$static.singleton_Key$type$gwt$material$design$demo$client$application$addins$richeditor$RichEditorView$_annotation$$none$$;\n}\n\ndefineClass(571, 1, $intern_80);\n_.onSuccess_0 = function onSuccess_6(){\n  $onSuccess_0(this.val$callback2, $get_Key$type$gwt$material$design$demo$client$application$addins$richeditor$RichEditorPresenter$_annotation$$none$$(this.this$11.this$01));\n}\n;\n$entry(onLoad_0)(7);\n\n//# sourceURL=gwtmaterialdemo-7.js\n")
